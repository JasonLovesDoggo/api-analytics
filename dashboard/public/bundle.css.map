{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Footer.svelte",
    "Endpoints.svelte",
    "Location.svelte",
    "Logo.svelte",
    "Requests.svelte",
    "ResponseTimes.svelte",
    "SuccessRate.svelte",
    "UsageTime.svelte",
    "Users.svelte",
    "Version.svelte",
    "Activity.svelte",
    "ActivitySuccessRate.svelte",
    "Client.svelte",
    "Device.svelte",
    "DeviceType.svelte",
    "OperatingSystem.svelte",
    "GettingStarted.svelte",
    "Highlight.svelte",
    "Landing.svelte",
    "Card.svelte",
    "TrackNew.svelte",
    "Dashboard.svelte",
    "Delete.svelte",
    "Error.svelte",
    "Generate.svelte",
    "Monitoring.svelte",
    "SignIn.svelte"
  ],
  "sourcesContent": [
    "<div class=\"footer\">\r\n  <a class=\"github-link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/tom-draper/api-analytics\">\r\n    <img class=\"github-logo\" height=\"30px\" src=\"../img/github.png\" alt=\"\" />\r\n  </a>\r\n  <div class=\"logo\">API Analytics</div>\r\n  <img class=\"footer-logo\" src=\"../img/logo.png\" alt=\"\" />\r\n</div>\r\n\r\n<style scoped>\r\n  .logo {\r\n    font-size: 0.9em;\r\n    color: var(--highlight);\r\n  }\r\n  .footer {\r\n    margin: 1.5em 0 3em;\r\n  }\r\n  .github-logo {\r\n    height: 28px;\r\n    filter: invert(0.24);\r\n    margin-bottom: 30px;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\n// Integer to method string mapping used by server\r\nlet methodMap = [\r\n    \"GET\",\r\n    \"POST\",\r\n    \"PUT\",\r\n    \"PATCH\",\r\n    \"DELETE\",\r\n    \"OPTIONS\",\r\n    \"CONNECT\",\r\n    \"HEAD\",\r\n    \"TRACE\",\r\n];\r\nfunction endpointFreq() {\r\n    let freq = {};\r\n    for (let i = 1; i < data.length; i++) {\r\n        // Create groups of endpoints by path + status\r\n        let endpointID = `${data[i][1]}${data[i][5]}`;\r\n        if (!(endpointID in freq)) {\r\n            freq[endpointID] = {\r\n                path: `${methodMap[data[i][3]]}  ${data[i][1]}`,\r\n                status: data[i][5],\r\n                count: 0,\r\n            };\r\n        }\r\n        freq[endpointID].count++;\r\n    }\r\n    return freq;\r\n}\r\nfunction statusMatch(status) {\r\n    return (activeBtn == \"all\" ||\r\n        (activeBtn == \"success\" && status >= 200 && status <= 299) ||\r\n        (activeBtn == \"bad\" && status >= 300 && status <= 399) ||\r\n        (activeBtn == \"error\" && status >= 400));\r\n}\r\nfunction build() {\r\n    let freq = endpointFreq();\r\n    // Convert object to list\r\n    let freqArr = [];\r\n    maxCount = 0;\r\n    for (let endpointID in freq) {\r\n        if (statusMatch(freq[endpointID].status)) {\r\n            freqArr.push(freq[endpointID]);\r\n            if (freq[endpointID].count > maxCount) {\r\n                maxCount = freq[endpointID].count;\r\n            }\r\n        }\r\n    }\r\n    // Sort by count\r\n    freqArr.sort((a, b) => {\r\n        return b.count - a.count;\r\n    });\r\n    endpoints = freqArr.slice(0, 50);\r\n}\r\nfunction setEndpointLabelVisibility(idx) {\r\n    let endpoint = document.getElementById(`endpoint-label-${idx}`);\r\n    let endpointPath = document.getElementById(`endpoint-path-${idx}`);\r\n    let endpointCount = document.getElementById(`endpoint-count-${idx}`);\r\n    let externalLabel = document.getElementById(`external-label-${idx}`);\r\n    if (endpoint.clientWidth <\r\n        endpointPath.clientWidth + endpointCount.clientWidth) {\r\n        externalLabel.style.display = \"flex\";\r\n        endpointPath.style.display = \"none\";\r\n    }\r\n    if (endpoint.clientWidth < endpointCount.clientWidth) {\r\n        endpointCount.style.display = \"none\";\r\n    }\r\n}\r\nfunction setBtn(value) {\r\n    activeBtn = value;\r\n    build();\r\n}\r\nlet endpoints;\r\nlet maxCount;\r\nlet mounted = false;\r\nlet activeBtn = \"all\";\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">\r\n    Endpoints\r\n    <div class=\"toggle\">\r\n      <button\r\n        class:active={activeBtn == \"all\"}\r\n        on:click={() => {\r\n          setBtn(\"all\");\r\n        }}>All</button\r\n      >\r\n      <button\r\n        class:active={activeBtn == \"success\"}\r\n        on:click={() => {\r\n          setBtn(\"success\");\r\n        }}>Success</button\r\n      >\r\n      <button\r\n        class:active={activeBtn == \"bad\"}\r\n        on:click={() => {\r\n          setBtn(\"bad\");\r\n        }}>Bad</button\r\n      >\r\n      <button\r\n        class:active={activeBtn == \"error\"}\r\n        on:click={() => {\r\n          setBtn(\"error\");\r\n        }}>Error</button\r\n      >\r\n    </div>\r\n  </div>\r\n\r\n  {#if endpoints != undefined}\r\n    <div class=\"endpoints\">\r\n      {#each endpoints as endpoint, i}\r\n        <div class=\"endpoint-container\">\r\n          <div class=\"endpoint\" id=\"endpoint-{i}\">\r\n            <div class=\"path\">\r\n              <b>{endpoint.count.toLocaleString()}</b>\r\n              {endpoint.path}\r\n            </div>\r\n            <div\r\n              class=\"background\"\r\n              title=\"Status: {endpoint.status}\"\r\n              style=\"width: {(endpoint.count / maxCount) * 100}%\"\r\n              class:success={endpoint.status >= 200 && endpoint.status <= 299}\r\n              class:bad={endpoint.status >= 300 && endpoint.status <= 399}\r\n              class:error={endpoint.status >= 400}\r\n            />\r\n          </div>\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    min-height: 361px;\r\n  }\r\n  .card-title {\r\n    display: flex;\r\n  }\r\n  .toggle {\r\n    margin-left: auto;\r\n  }\r\n  .active {\r\n    background: var(--highlight);\r\n  }\r\n  button {\r\n    border: none;\r\n    border-radius: 4px;\r\n    background: rgb(68, 68, 68);\r\n    cursor: pointer;\r\n    padding: 2px 6px;\r\n    margin-left: 5px;\r\n  }\r\n  .endpoints {\r\n    margin: 0.9em 20px 0.6em;\r\n  }\r\n  .endpoint {\r\n    border-radius: 3px;\r\n    margin: 5px 0;\r\n    color: var(--light-background);\r\n    text-align: left;\r\n    position: relative;\r\n    font-size: 0.85em;\r\n    width: 100%;\r\n  }\r\n  .path {\r\n    position: relative;\r\n    flex-grow: 1;\r\n    z-index: 1;\r\n    color: #505050;\r\n    padding: 3px 12px;\r\n  }\r\n  .endpoint-container {\r\n    display: flex;\r\n  }\r\n  .success {\r\n    background: var(--highlight);\r\n  }\r\n  .bad {\r\n    background: rgb(235, 235, 129);\r\n  }\r\n  .error {\r\n    background: var(--red);\r\n  }\r\n  .background {\r\n    border-radius: 3px;\r\n    color: var(--light-background);\r\n    text-align: left;\r\n    position: relative;\r\n    font-size: 0.85em;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    .card {\r\n      width: auto;\r\n      flex: 1;\r\n      margin: 0 0 2em 0;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction getFlagEmoji(countryCode) {\r\n    const codePoints = countryCode\r\n        .toUpperCase()\r\n        .split(\"\")\r\n        .map((char) => 127397 + char.charCodeAt(undefined));\r\n    return String.fromCodePoint(...codePoints);\r\n}\r\nfunction countryCodeToName(countryCode) {\r\n    let regionNames = new Intl.DisplayNames([\"en\"], { type: \"region\" });\r\n    return regionNames.of(countryCode);\r\n}\r\nfunction build() {\r\n    let max = 0;\r\n    let locationsFreq = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i][6] === \"\") {\r\n            continue;\r\n        }\r\n        if (!(data[i][6] in locationsFreq)) {\r\n            locationsFreq[data[i][6]] = 1;\r\n        }\r\n        else {\r\n            locationsFreq[data[i][6]] += 1;\r\n        }\r\n        if (locationsFreq[data[i][6]] > max) {\r\n            max = locationsFreq[data[i][6]];\r\n        }\r\n    }\r\n    locations = [];\r\n    for (let location in locationsFreq) {\r\n        locations.push([\r\n            location,\r\n            locationsFreq[location],\r\n            locationsFreq[location] / max,\r\n        ]);\r\n    }\r\n    locations.sort((a, b) => {\r\n        return b[1] - a[1];\r\n    });\r\n    locations = locations.slice(0, 10);\r\n}\r\nlet locations = [];\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Location</div>\r\n  {#if locations.length > 0}\r\n    <div class=\"bars\">\r\n      {#each locations as location}\r\n        <div class=\"bar-container\">\r\n          <div\r\n            class=\"bar\"\r\n            title=\"{countryCodeToName(location[0])}: {location[1]} requests\"\r\n          >\r\n            <div class=\"bar-inner\" style=\"height: {location[2] * 100}%\" />\r\n          </div>\r\n          <div class=\"label\">{getFlagEmoji(location[0])}</div>\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  {:else}\r\n    <div class=\"no-locations\">\r\n      <div class=\"no-locations-text\">No Locations Found</div>\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    flex: 1.2;\r\n    margin: 2em 1em 2em 0;\r\n  }\r\n  .bars {\r\n    height: 150px;\r\n    display: flex;\r\n    padding: 1.5em 2em 1em 2em;\r\n  }\r\n\r\n  .bar-container {\r\n    flex: 1;\r\n    margin: 0 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .no-locations {\r\n    height: 180px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .no-locations-text {\r\n    margin-bottom: 25px;\r\n    color: #707070;\r\n  }\r\n\r\n  .bar {\r\n    position: relative;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  .bar-inner {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    background: var(--highlight);\r\n    border-radius: 3px;\r\n  }\r\n  .label {\r\n    padding-top: 8px;\r\n  }\r\n\r\n  @media screen and (max-width: 1600px) {\r\n    .card {\r\n      width: 100%;\r\n      margin: 2em 0 2em;\r\n    }\r\n  }\r\n</style>\r\n",
    "<div class=\"card\">\r\n  <img src=\"../img/logo.png\" alt=\"\" />\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: calc(215px - 1em);\r\n    margin: 0 1em 0 0;\r\n    background: transparent;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  img {\r\n    width: 25px;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    .card {\r\n      width: auto;\r\n      flex: 1;\r\n      margin: 0 1em 0 0;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport periodToDays from \"../../lib/period\";\r\nfunction requestsPlotLayout() {\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 0, l: 0, t: 0, b: 0, pad: 0 },\r\n        hovermode: false,\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 60,\r\n        yaxis: {\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n            dragmode: false,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n            dragmode: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nfunction lines() {\r\n    let n = 5;\r\n    let x = [...Array(n).keys()];\r\n    let y = Array(n).fill(0);\r\n    for (let i = 1; i < data.length; i++) {\r\n        let idx = Math.floor(i / (data.length / n));\r\n        y[idx] += 1;\r\n    }\r\n    return [\r\n        {\r\n            x: x,\r\n            y: y,\r\n            type: \"lines\",\r\n            marker: { color: \"transparent\" },\r\n            showlegend: false,\r\n            line: { shape: \"spline\", smoothing: 1, color: \"#3FCF8E30\" },\r\n            fill: \"tozeroy\",\r\n            fillcolor: \"#3fcf8e15\",\r\n        },\r\n    ];\r\n}\r\nfunction requestsPlotData() {\r\n    return {\r\n        data: lines(),\r\n        layout: requestsPlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = requestsPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nfunction setPercentageChange() {\r\n    if (prevData.length == 0) {\r\n        percentageChange = null;\r\n    }\r\n    else {\r\n        percentageChange = (data.length / prevData.length) * 100 - 100;\r\n    }\r\n}\r\nfunction setRequestsPerHour() {\r\n    if (data.length > 0) {\r\n        let days = periodToDays(period);\r\n        if (days != null) {\r\n            requestsPerHour = (data.length / (24 * days)).toFixed(2);\r\n        }\r\n    }\r\n    else {\r\n        requestsPerHour = \"0\";\r\n    }\r\n}\r\nfunction togglePeriod() {\r\n    perHour = !perHour;\r\n}\r\nfunction build() {\r\n    setPercentageChange();\r\n    setRequestsPerHour();\r\n    genPlot();\r\n}\r\nlet plotDiv;\r\nlet requestsPerHour;\r\nlet perHour = false;\r\nlet percentageChange;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data, prevData, period;\r\n</script>\r\n\r\n<button class=\"card\" on:click={togglePeriod}>\r\n  {#if perHour}\r\n    <div class=\"card-title\">\r\n      Requests <span class=\"per-hour\">/ hour</span>\r\n    </div>\r\n    {#if requestsPerHour != undefined}\r\n      <div class=\"value\">{requestsPerHour}</div>\r\n    {/if}\r\n  {:else}\r\n    {#if percentageChange != null}\r\n      <div\r\n        class=\"percentage-change\"\r\n        class:positive={percentageChange > 0}\r\n        class:negative={percentageChange < 0}\r\n      >\r\n        {#if percentageChange > 0}\r\n          <img class=\"arrow\" src=\"../img/up.png\" alt=\"\" />\r\n        {:else if percentageChange < 0}\r\n          <img class=\"arrow\" src=\"../img/down.png\" alt=\"\" />\r\n        {/if}\r\n        {Math.abs(percentageChange).toFixed(1)}%\r\n      </div>\r\n    {/if}\r\n    <div class=\"card-title\">Requests</div>\r\n    <div class=\"value\">{data.length.toLocaleString()}</div>\r\n  {/if}\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</button>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: calc(215px - 1em);\r\n    margin: 0 1em 0 0;\r\n    position: relative;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    overflow: hidden;\r\n  }\r\n  .value {\r\n    margin: 20px auto;\r\n    width: fit-content;\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n  }\r\n  .percentage-change {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n    font-size: 0.8em;\r\n  }\r\n  .positive {\r\n    color: var(--highlight);\r\n  }\r\n  .negative {\r\n    color: rgb(228, 97, 97);\r\n  }\r\n\r\n  .per-hour {\r\n    color: var(--dim-text);\r\n    font-size: 0.8em;\r\n    margin-left: 4px;\r\n  }\r\n  button {\r\n    font-size: unset;\r\n    font-family: unset;\r\n  }\r\n  .arrow {\r\n    height: 11px;\r\n  }\r\n  #plotly {\r\n    position: absolute;\r\n    width: 110%;\r\n    bottom: 0;\r\n    overflow: hidden;\r\n    margin: 0 -5%;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    .card {\r\n      width: auto;\r\n      flex: 1;\r\n      margin: 0 1em 0 0;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\n// Median and quartiles from StackOverflow answer\r\n// https://stackoverflow.com/a/55297611/8851732\r\nconst asc = (arr) => arr.sort((a, b) => a - b);\r\nconst sum = (arr) => arr.reduce((a, b) => a + b, 0);\r\nconst mean = (arr) => sum(arr) / arr.length;\r\n// sample standard deviation\r\nfunction std(arr) {\r\n    const mu = mean(arr);\r\n    const diffArr = arr.map((a) => (a - mu) ** 2);\r\n    return Math.sqrt(sum(diffArr) / (arr.length - 1));\r\n}\r\nfunction quantile(arr, q) {\r\n    const sorted = asc(arr);\r\n    const pos = (sorted.length - 1) * q;\r\n    const base = Math.floor(pos);\r\n    const rest = pos - base;\r\n    if (sorted[base + 1] != undefined) {\r\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\r\n    }\r\n    else if (sorted[base] != undefined) {\r\n        return sorted[base];\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nfunction markerPosition(x) {\r\n    // 170.125 ms -> 0\r\n    // 1000 ms -> 100\r\n    let position = Math.log10(x) * 130 - 290;\r\n    if (position < 0) {\r\n        return 0;\r\n    }\r\n    else if (position > 100) {\r\n        return 100;\r\n    }\r\n    else {\r\n        return position;\r\n    }\r\n}\r\nfunction setMarkerPosition(median) {\r\n    let position = markerPosition(median);\r\n    marker.style.left = `${position}%`;\r\n}\r\nfunction build() {\r\n    let responseTimes = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n        responseTimes.push(data[i][4]);\r\n    }\r\n    LQ = quantile(responseTimes, 0.25);\r\n    median = quantile(responseTimes, 0.5);\r\n    UQ = quantile(responseTimes, 0.75);\r\n    setMarkerPosition(median);\r\n}\r\nlet median;\r\nlet LQ;\r\nlet UQ;\r\nlet marker;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">\r\n    Response times <span class=\"milliseconds\">(ms)</span>\r\n  </div>\r\n  <div class=\"values\">\r\n    <div class=\"value lower-quartile\">{LQ}</div>\r\n    <div class=\"value median\">{median}</div>\r\n    <div class=\"value upper-quartile\">{UQ}</div>\r\n  </div>\r\n  <div class=\"labels\">\r\n    <div class=\"label\">LQ</div>\r\n    <div class=\"label\">Median</div>\r\n    <div class=\"label\">UQ</div>\r\n  </div>\r\n  <div class=\"bar\">\r\n    <div class=\"bar-green\" />\r\n    <div class=\"bar-yellow\" />\r\n    <div class=\"bar-red\" />\r\n    <div class=\"marker\" bind:this={marker} />\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .values {\r\n    display: flex;\r\n    color: var(--highlight);\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n  }\r\n  .values,\r\n  .labels {\r\n    margin: 0 0.5rem;\r\n  }\r\n  .value {\r\n    flex: 1;\r\n    font-size: 1.1em;\r\n    padding: 20px 20px 4px;\r\n  }\r\n  .labels {\r\n    display: flex;\r\n    font-size: 0.8em;\r\n    color: var(--dim-text);\r\n  }\r\n  .label {\r\n    flex: 1;\r\n  }\r\n\r\n  .milliseconds {\r\n    color: var(--dim-text);\r\n    font-size: 0.8em;\r\n    margin-left: 4px;\r\n  }\r\n\r\n  .median {\r\n    font-size: 1em;\r\n  }\r\n  .upper-quartile,\r\n  .lower-quartile {\r\n    font-size: 1em;\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  .bar {\r\n    padding: 20px 0 20px;\r\n    display: flex;\r\n    height: 30px;\r\n    width: 85%;\r\n    margin: auto;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  .bar-green {\r\n    background: var(--highlight);\r\n    width: 75%;\r\n    height: 10px;\r\n    border-radius: 2px 0 0 2px;\r\n  }\r\n  .bar-yellow {\r\n    width: 15%;\r\n    height: 10px;\r\n    background: rgb(235, 235, 129);\r\n  }\r\n  .bar-red {\r\n    width: 20%;\r\n    height: 10px;\r\n    border-radius: 0 2px 2px 0;\r\n    background: rgb(228, 97, 97);\r\n  }\r\n  .marker {\r\n    position: absolute;\r\n    height: 30px;\r\n    width: 5px;\r\n    background: white;\r\n    border-radius: 2px;\r\n    left: 0; /* Changed during runtime to reflect median */\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    .card {\r\n      width: auto;\r\n      flex: 1;\r\n      margin: 0 0 2em 0;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction successRatePlotLayout() {\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 0, l: 0, t: 0, b: 0, pad: 0 },\r\n        hovermode: false,\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 60,\r\n        yaxis: {\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n            dragmode: false,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n            dragmode: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nfunction lines() {\r\n    let n = 5;\r\n    let x = [...Array(n).keys()];\r\n    let y = Array(n).fill(0);\r\n    for (let i = 1; i < data.length; i++) {\r\n        let idx = Math.floor(i / (data.length / n));\r\n        if (data[i][5] >= 200 && data[i][5] <= 299) {\r\n            y[idx] += 1;\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            x: x,\r\n            y: y,\r\n            type: \"lines\",\r\n            marker: { color: \"transparent\" },\r\n            showlegend: false,\r\n            line: { shape: \"spline\", smoothing: 1, color: \"#3FCF8E30\" },\r\n            fill: \"tozeroy\",\r\n            fillcolor: \"#3fcf8e15\",\r\n        },\r\n    ];\r\n}\r\nfunction successRatePlotData() {\r\n    return {\r\n        data: lines(),\r\n        layout: successRatePlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = successRatePlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nfunction build() {\r\n    let totalRequests = 0;\r\n    let successfulRequests = 0;\r\n    for (let i = 1; i < data.length; i++) {\r\n        if (data[i][5] >= 200 && data[i][5] <= 299) {\r\n            successfulRequests++;\r\n        }\r\n        totalRequests++;\r\n    }\r\n    if (totalRequests > 0) {\r\n        successRate = (successfulRequests / totalRequests) * 100;\r\n    }\r\n    else {\r\n        successRate = 100;\r\n    }\r\n    genPlot();\r\n}\r\nlet plotDiv;\r\nlet successRate;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Success rate</div>\r\n  {#if successRate != undefined}\r\n    <div\r\n      class=\"value\"\r\n      class:red={successRate <= 75}\r\n      class:yellow={successRate > 75 && successRate < 90}\r\n      class:green={successRate > 90}\r\n    >\r\n      {successRate.toFixed(1)}%\r\n    </div>\r\n  {/if}\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: calc(215px - 1em);\r\n    margin: 0 0 0 1em;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .value {\r\n    margin: 20px auto;\r\n    width: fit-content;\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n    color: var(--yellow);\r\n    position: inherit;\r\n    z-index: 2;\r\n  }\r\n  .red {\r\n    color: var(--red);\r\n  }\r\n  .yellow {\r\n    color: var(--yellow);\r\n  }\r\n  .green {\r\n    color: var(--highlight);\r\n  }\r\n  #plotly {\r\n    position: absolute;\r\n    width: 110%;\r\n    bottom: 0;\r\n    overflow: hidden;\r\n    margin: 0 -5%;\r\n    z-index: 0;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    .card {\r\n      width: auto;\r\n      flex: 1;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction defaultLayout() {\r\n    return {\r\n        font: { size: 12 },\r\n        paper_bgcolor: \"transparent\",\r\n        height: 500,\r\n        margin: { r: 35, l: 70, t: 20, b: 50, pad: 0 },\r\n        polar: {\r\n            bargap: 0,\r\n            bgcolor: \"transparent\",\r\n            angularaxis: { direction: \"clockwise\", showgrid: false },\r\n            radialaxis: { gridcolor: \"#303030\" },\r\n        },\r\n    };\r\n}\r\nfunction bars() {\r\n    let responseTimes = Array(24).fill(0);\r\n    for (let i = 1; i < data.length; i++) {\r\n        let date = new Date(data[i][7]);\r\n        let time = date.getHours();\r\n        // @ts-ignore\r\n        responseTimes[time]++;\r\n    }\r\n    let requestFreqArr = [];\r\n    for (let i = 0; i < 24; i++) {\r\n        let point = [i, responseTimes[i]];\r\n        requestFreqArr.push(point);\r\n    }\r\n    requestFreqArr.sort((a, b) => {\r\n        return a[0] - b[0];\r\n    });\r\n    let dates = [];\r\n    let requests = [];\r\n    for (let i = 0; i < requestFreqArr.length; i++) {\r\n        dates.push(requestFreqArr[i][0].toString() + \":00\");\r\n        requests.push(requestFreqArr[i][1]);\r\n    }\r\n    // Shift to 12 onwards to make barpolar like clock face\r\n    dates = dates.slice(12).concat(...dates.slice(0, 12));\r\n    requests = requests.slice(12).concat(...requests.slice(0, 12));\r\n    return [\r\n        {\r\n            r: requests,\r\n            theta: dates,\r\n            marker: { color: \"#3fcf8e\" },\r\n            type: \"barpolar\",\r\n            hovertemplate: `<b>%{r}</b> requests at <b>%{theta}</b><extra></extra>`,\r\n        },\r\n    ];\r\n}\r\nfunction buildPlotData() {\r\n    return {\r\n        data: bars(),\r\n        layout: defaultLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && genPlot();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Usage time</div>\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport periodToDays from \"../../lib/period\";\r\nfunction usersPlotLayout() {\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 0, l: 0, t: 0, b: 0, pad: 0 },\r\n        hovermode: false,\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 60,\r\n        yaxis: {\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n            dragmode: false,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n            dragmode: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nfunction lines() {\r\n    let n = 5;\r\n    let x = [...Array(n).keys()];\r\n    let y = Array(n).fill(0);\r\n    for (let i = 1; i < data.length; i++) {\r\n        let idx = Math.floor(i / (data.length / n));\r\n        if (data[i][0] != null && data[i][0] != \"\") {\r\n            y[idx] += 1;\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            x: x,\r\n            y: y,\r\n            type: \"lines\",\r\n            marker: { color: \"transparent\" },\r\n            showlegend: false,\r\n            line: { shape: \"spline\", smoothing: 1, color: \"#3FCF8E30\" },\r\n            fill: \"tozeroy\",\r\n            fillcolor: \"#3fcf8e15\",\r\n        },\r\n    ];\r\n}\r\nfunction usersPlotData() {\r\n    return {\r\n        data: lines(),\r\n        layout: usersPlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = usersPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nfunction togglePeriod() {\r\n    perHour = !perHour;\r\n}\r\nfunction setPercentageChange(now, prev) {\r\n    if (prev == 0) {\r\n        percentageChange = null;\r\n    }\r\n    else {\r\n        percentageChange = (now / prev) * 100 - 100;\r\n    }\r\n}\r\nfunction getUsers(data) {\r\n    let users = new Set();\r\n    for (let i = 1; i < data.length; i++) {\r\n        if (data[i][0] != \"\" && data[i][0] != null) {\r\n            users.add(data[i][0]);\r\n        }\r\n    }\r\n    return users;\r\n}\r\nfunction build() {\r\n    let users = getUsers(data);\r\n    numUsers = users.size;\r\n    let prevUsers = getUsers(prevData);\r\n    let prevNumUsers = prevUsers.size;\r\n    setPercentageChange(numUsers, prevNumUsers);\r\n    if (numUsers > 0) {\r\n        let days = periodToDays(period);\r\n        if (days != null) {\r\n            usersPerHour = (numUsers / (24 * days)).toFixed(2);\r\n        }\r\n    }\r\n    else {\r\n        usersPerHour = \"0\";\r\n    }\r\n    genPlot();\r\n}\r\nlet plotDiv;\r\nlet numUsers = 0;\r\nlet usersPerHour;\r\nlet perHour = false;\r\nlet percentageChange;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data, prevData, period;\r\n</script>\r\n\r\n<button class=\"card\" on:click={togglePeriod} title=\"Based on IP address\">\r\n  {#if perHour}\r\n    <div class=\"card-title\">\r\n      Users <span class=\"per-hour\">/ hour</span>\r\n    </div>\r\n    {#if usersPerHour != undefined}\r\n      <div class=\"value\">{usersPerHour}</div>\r\n    {/if}\r\n  {:else}\r\n    {#if percentageChange != null}\r\n      <div\r\n        class=\"percentage-change\"\r\n        class:positive={percentageChange > 0}\r\n        class:negative={percentageChange < 0}\r\n      >\r\n        {#if percentageChange > 0}\r\n          <img class=\"arrow\" src=\"../img/up.png\" alt=\"\" />\r\n        {:else if percentageChange < 0}\r\n          <img class=\"arrow\" src=\"../img/down.png\" alt=\"\" />\r\n        {/if}\r\n        {Math.abs(percentageChange).toFixed(1)}%\r\n      </div>\r\n    {/if}\r\n    <div class=\"card-title\">Users</div>\r\n    <div class=\"value\">{numUsers.toLocaleString()}</div>\r\n  {/if}\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</button>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: calc(215px - 1em);\r\n    margin: 0 0 0 1em;\r\n    position: relative;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    overflow: hidden;\r\n  }\r\n  .value {\r\n    margin: 20px auto;\r\n    width: fit-content;\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n    position: inherit;\r\n    z-index: 2;\r\n  }\r\n  .percentage-change {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n    font-size: 0.8em;\r\n  }\r\n  .positive {\r\n    color: var(--highlight);\r\n  }\r\n  .negative {\r\n    color: rgb(228, 97, 97);\r\n  }\r\n\r\n  .per-hour {\r\n    color: var(--dim-text);\r\n    font-size: 0.8em;\r\n    margin-left: 4px;\r\n  }\r\n  button {\r\n    font-size: unset;\r\n    font-family: unset;\r\n  }\r\n  .arrow {\r\n    height: 11px;\r\n  }\r\n  #plotly {\r\n    position: absolute;\r\n    width: 110%;\r\n    bottom: 0;\r\n    overflow: hidden;\r\n    margin: 0 -5%;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    .card {\r\n      width: auto;\r\n      flex: 1;\r\n      margin: 0 0 0 1em;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction setVersions() {\r\n    let v = new Set();\r\n    for (let i = 1; i < data.length; i++) {\r\n        let match = data[i][1].match(/[^a-z0-9](v\\d)[^a-z0-9]/i);\r\n        if (match) {\r\n            v.add(match[1]);\r\n        }\r\n    }\r\n    versions = v;\r\n    if (versions.size > 1) {\r\n        setTimeout(genPlot, 1000);\r\n    }\r\n}\r\nfunction versionPlotLayout() {\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 180,\r\n        yaxis: {\r\n            title: { text: \"Requests\" },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nlet colors = [\r\n    \"#3FCF8E\",\r\n    \"#5784BA\",\r\n    \"#EBEB81\",\r\n    \"#218B82\",\r\n    \"#FFD6A5\",\r\n    \"#F9968B\",\r\n    \"#B1A2CA\",\r\n    \"#E46161\", // Red\r\n];\r\nfunction pieChart() {\r\n    let versionCount = {};\r\n    for (let i = 1; i < data.length; i++) {\r\n        let match = data[i][1].match(/[^a-z0-9](v\\d)[^a-z0-9]/i);\r\n        if (match) {\r\n            let version = match[1];\r\n            if (!(version in versionCount)) {\r\n                versionCount[version] = 0;\r\n            }\r\n            versionCount[version]++;\r\n        }\r\n    }\r\n    let versions = [];\r\n    let count = [];\r\n    for (let version in versionCount) {\r\n        versions.push(version);\r\n        count.push(versionCount[version]);\r\n    }\r\n    return [\r\n        {\r\n            values: count,\r\n            labels: versions,\r\n            type: \"pie\",\r\n            marker: {\r\n                colors: colors,\r\n            },\r\n        },\r\n    ];\r\n}\r\nfunction versionPlotData() {\r\n    return {\r\n        data: pieChart(),\r\n        layout: versionPlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = versionPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet versions;\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    setTimeout(() => {\r\n        mounted = true;\r\n    }, 500);\r\n});\r\n$: data && mounted && setVersions();\r\nexport let data;\r\n</script>\r\n\r\n{#if versions != undefined && versions.size > 1}\r\n  <div class=\"card\">\r\n    <div class=\"card-title\">Version</div>\r\n    <div id=\"plotly\">\r\n      <div id=\"plotDiv\" bind:this={plotDiv}>\r\n        <!-- Plotly chart will be drawn inside this DIV -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .card {\r\n    margin: 2em 0 2em 0;\r\n    padding-bottom: 1em;\r\n    flex: 1;\r\n  }\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    .card {\r\n      width: auto;\r\n      flex: 1;\r\n      margin: 0 0 2em 0;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import ActivityRequests from \"./ActivityRequests.svelte\";\r\nimport ActivityResponseTime from \"./ActivityResponseTime.svelte\";\r\nimport ActivitySuccessRate from \"./ActivitySuccessRate.svelte\";\r\nexport let data, period;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Activity</div>\r\n  <ActivityRequests {data} {period} />\r\n  <ActivityResponseTime {data} {period} />\r\n  <ActivitySuccessRate {data} {period} />\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    margin: 0;\r\n    width: 100%;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport periodToDays from \"../../../lib/period\";\r\nfunction daysAgo(date) {\r\n    let now = new Date();\r\n    return Math.floor((now.getTime() - date.getTime()) / (24 * 60 * 60 * 1000));\r\n}\r\nfunction setSuccessRate() {\r\n    let success = {};\r\n    let minDate = Number.POSITIVE_INFINITY;\r\n    for (let i = 1; i < data.length; i++) {\r\n        let date = new Date(data[i][7]);\r\n        date.setHours(0, 0, 0, 0);\r\n        let dateStr = date.toDateString();\r\n        if (!(dateStr in success)) {\r\n            success[dateStr] = { total: 0, successful: 0 };\r\n        }\r\n        if (data[i][5] >= 200 && data[i][5] <= 299) {\r\n            success[dateStr].successful++;\r\n        }\r\n        success[dateStr].total++;\r\n        if (date < minDate) {\r\n            minDate = date;\r\n        }\r\n    }\r\n    let days = periodToDays(period);\r\n    if (days == null) {\r\n        days = daysAgo(minDate);\r\n    }\r\n    let successArr = new Array(days).fill(-0.1); // -0.1 -> 0\r\n    for (let date in success) {\r\n        let idx = daysAgo(new Date(date));\r\n        successArr[successArr.length - 1 - idx] =\r\n            success[date].successful / success[date].total;\r\n    }\r\n    successRate = successArr;\r\n}\r\nfunction build() {\r\n    setSuccessRate();\r\n}\r\nlet successRate;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: successRate;\r\n$: data && mounted && build();\r\nexport let data, period;\r\n</script>\r\n\r\n<div class=\"success-rate-container\">\r\n  {#if successRate != undefined}\r\n    <div class=\"success-rate-title\">Success rate</div>\r\n    <div class=\"errors\">\r\n      {#each successRate as value}\r\n        <div\r\n          class=\"error level-{Math.floor(value * 10) + 1}\"\r\n          title=\"Success rate: {value >= 0\r\n            ? (value * 100).toFixed(1) + '%'\r\n            : 'No requests'}\"\r\n        />\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .errors {\r\n    display: flex;\r\n    margin-top: 8px;\r\n    margin: 0 10px 0 35px;\r\n  }\r\n  .error {\r\n    background: var(--highlight);\r\n    flex: 1;\r\n    height: 40px;\r\n    margin: 0 0.1%;\r\n    border-radius: 1px;\r\n  }\r\n  .success-rate-container {\r\n    text-align: left;\r\n    font-size: 0.9em;\r\n    color: var(--dim-text);\r\n  }\r\n  .success-rate-title {\r\n    margin: 0 0 4px 43px;\r\n  }\r\n  .success-rate-container {\r\n    margin: 1.5em 2.5em 2em;\r\n  }\r\n  .level-0 {\r\n    background: rgb(40, 40, 40);\r\n  }\r\n  .level-1 {\r\n    background: #e46161;\r\n  }\r\n  .level-2 {\r\n    background: #f18359;\r\n  }\r\n  .level-3 {\r\n    background: #f5a65a;\r\n  }\r\n  .level-4 {\r\n    background: #f3c966;\r\n  }\r\n  .level-5 {\r\n    background: #ebeb81;\r\n  }\r\n  .level-6 {\r\n    background: #c7e57d;\r\n  }\r\n  .level-7 {\r\n    background: #a1df7e;\r\n  }\r\n  .level-8 {\r\n    background: #77d884;\r\n  }\r\n  .level-9 {\r\n    background: #3fcf8e;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction getBrowser(userAgent) {\r\n    if (userAgent == null) {\r\n        return \"Unknown\";\r\n    }\r\n    if (userAgent.match(/curl\\//)) {\r\n        return \"Curl\";\r\n    }\r\n    else if (userAgent.match(/PostmanRuntime\\//)) {\r\n        return \"Postman\";\r\n    }\r\n    else if (userAgent.match(/insomnia\\//)) {\r\n        return \"Insomnia\";\r\n    }\r\n    else if (userAgent.match(/python-requests\\//)) {\r\n        return \"Python requests\";\r\n    }\r\n    else if (userAgent.match(/node-fetch\\//)) {\r\n        return \"Nodejs fetch\";\r\n    }\r\n    else if (userAgent.match(/go-http-client\\//)) {\r\n        return \"Go http\";\r\n    }\r\n    else if (userAgent.match(/Java\\//)) {\r\n        return \"Java\";\r\n    }\r\n    else if (userAgent.match(/Seamonkey\\//)) {\r\n        return \"Seamonkey\";\r\n    }\r\n    else if (userAgent.match(/Firefox\\//)) {\r\n        return \"Firefox\";\r\n    }\r\n    else if (userAgent.match(/Chrome\\//)) {\r\n        return \"Chrome\";\r\n    }\r\n    else if (userAgent.match(/Chromium\\//)) {\r\n        return \"Chromium\";\r\n    }\r\n    else if (userAgent.match(/Safari\\//)) {\r\n        return \"Safari\";\r\n    }\r\n    else if (userAgent.match(/Edg\\//)) {\r\n        return \"Edge\";\r\n    }\r\n    else if (userAgent.match(/OPR\\//) || userAgent.match(/Opera\\//)) {\r\n        return \"Opera\";\r\n    }\r\n    else if (userAgent.match(/; MSIE /) || userAgent.match(/Trident\\//)) {\r\n        return \"Internet Explorer\";\r\n    }\r\n    else {\r\n        return \"Other\";\r\n    }\r\n}\r\nfunction browserPlotLayout() {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 30);\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 35, l: 70, t: 20, b: 20, pad: 0 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 180,\r\n        width: 411,\r\n        yaxis: {\r\n            title: { text: \"Requests\" },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nlet colors = [\r\n    \"#3FCF8E\",\r\n    \"#5784BA\",\r\n    \"#EBEB81\",\r\n    \"#218B82\",\r\n    \"#FFD6A5\",\r\n    \"#F9968B\",\r\n    \"#B1A2CA\",\r\n    \"#E46161\", // Red\r\n];\r\nfunction pieChart() {\r\n    let browserCount = {};\r\n    for (let i = 1; i < data.length; i++) {\r\n        let browser = getBrowser(data[i][2]);\r\n        if (!(browser in browserCount)) {\r\n            browserCount[browser] = 0;\r\n        }\r\n        browserCount[browser]++;\r\n    }\r\n    let browsers = [];\r\n    let count = [];\r\n    for (let browser in browserCount) {\r\n        browsers.push(browser);\r\n        count.push(browserCount[browser]);\r\n    }\r\n    return [\r\n        {\r\n            values: count,\r\n            labels: browsers,\r\n            type: \"pie\",\r\n            marker: {\r\n                colors: colors,\r\n            },\r\n        },\r\n    ];\r\n}\r\nfunction browserPlotData() {\r\n    return {\r\n        data: pieChart(),\r\n        layout: browserPlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = browserPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && genPlot();\r\nexport let data;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import Client from \"./Client.svelte\";\r\nimport OperatingSystem from \"./OperatingSystem.svelte\";\r\nimport DeviceType from \"./DeviceType.svelte\";\r\nfunction setBtn(target) {\r\n    activeBtn = target;\r\n    // Resize window to trigger new plot resize to match current card size\r\n    window.dispatchEvent(new Event(\"resize\"));\r\n}\r\nlet activeBtn = \"client\";\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">\r\n    Device\r\n    <div class=\"toggle\">\r\n      <button\r\n        class:active={activeBtn == \"client\"}\r\n        on:click={() => {\r\n          setBtn(\"client\");\r\n        }}>Client</button\r\n      >\r\n      <button\r\n        class:active={activeBtn == \"os\"}\r\n        on:click={() => {\r\n          setBtn(\"os\");\r\n        }}>OS</button\r\n      >\r\n      <button\r\n        class:active={activeBtn == \"device\"}\r\n        on:click={() => {\r\n          setBtn(\"device\");\r\n        }}>Device</button\r\n      >\r\n    </div>\r\n  </div>\r\n  <div class=\"client\" style={activeBtn == \"client\" ? \"display: initial\" : \"\"}>\r\n    <Client {data} />\r\n  </div>\r\n  <div class=\"os\" style={activeBtn == \"os\" ? \"display: initial\" : \"\"}>\r\n    <OperatingSystem {data} />\r\n  </div>\r\n  <div class=\"device\" style={activeBtn == \"device\" ? \"display: initial\" : \"\"}>\r\n    <DeviceType {data} />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    margin: 2em 0 2em 1em;\r\n    padding-bottom: 1em;\r\n    width: 420px;\r\n  }\r\n  .card-title {\r\n    display: flex;\r\n  }\r\n  .toggle {\r\n    margin-left: auto;\r\n  }\r\n  .active {\r\n    background: var(--highlight);\r\n  }\r\n  .os,\r\n  .client,\r\n  .device {\r\n    display: none;\r\n  }\r\n  button {\r\n    border: none;\r\n    border-radius: 4px;\r\n    background: rgb(68, 68, 68);\r\n    cursor: pointer;\r\n    padding: 2px 6px;\r\n    margin-left: 5px;\r\n  }\r\n  @media screen and (max-width: 1600px) {\r\n    .card {\r\n      margin: 0 0 2em;\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction getDevice(userAgent) {\r\n    if (userAgent == null) {\r\n        return \"Unknown\";\r\n    }\r\n    else if (userAgent.match(/iPhone/)) {\r\n        return \"iPhone\";\r\n    }\r\n    else if (userAgent.match(/Android/)) {\r\n        return \"Android\";\r\n    }\r\n    else if (userAgent.match(/Tizen\\//)) {\r\n        return \"Samsung\";\r\n    }\r\n    else {\r\n        return \"Other\";\r\n    }\r\n}\r\nfunction devicePlotLayout() {\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 180,\r\n        width: 411,\r\n        yaxis: {\r\n            title: { text: \"Requests\" },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nlet colors = [\r\n    \"#3FCF8E\",\r\n    \"#E46161\",\r\n    \"#EBEB81\", // Yellow\r\n];\r\nfunction pieChart() {\r\n    let deviceCount = {};\r\n    for (let i = 1; i < data.length; i++) {\r\n        let browser = getDevice(data[i][2]);\r\n        if (!(browser in deviceCount)) {\r\n            deviceCount[browser] = 0;\r\n        }\r\n        deviceCount[browser]++;\r\n    }\r\n    let device = [];\r\n    let count = [];\r\n    for (let browser in deviceCount) {\r\n        device.push(browser);\r\n        count.push(deviceCount[browser]);\r\n    }\r\n    return [\r\n        {\r\n            values: count,\r\n            labels: device,\r\n            type: \"pie\",\r\n            marker: {\r\n                colors: colors,\r\n            },\r\n        },\r\n    ];\r\n}\r\nfunction devicePlotData() {\r\n    return {\r\n        data: pieChart(),\r\n        layout: devicePlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = devicePlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && genPlot();\r\nexport let data;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction getOS(userAgent) {\r\n    if (userAgent == null) {\r\n        return \"Unknown\";\r\n    }\r\n    else if (userAgent.match(/Win16/)) {\r\n        return \"Windows 3.11\";\r\n    }\r\n    else if (userAgent.match(/(Windows 95)|(Win95)|(Windows_95)/)) {\r\n        return \"Windows 95\";\r\n    }\r\n    else if (userAgent.match(/(Windows 98)|(Win98)/)) {\r\n        return \"Windows 98\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 5.0)|(Windows 2000)/)) {\r\n        return \"Windows 2000\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 5.1)|(Windows XP)/)) {\r\n        return \"Windows XP\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 5.2)/)) {\r\n        return \"Windows Server 2003\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 6.0)/)) {\r\n        return \"Windows Vista\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 6.1)/)) {\r\n        return \"Windows 7\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 6.2)/)) {\r\n        return \"Windows 8\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 10.0)/)) {\r\n        return \"Windows 10\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 4.0)|(WinNT4.0)|(WinNT)|(Windows NT)/)) {\r\n        return \"Windows NT 4.0\";\r\n    }\r\n    else if (userAgent.match(/Windows ME/)) {\r\n        return \"Windows ME\";\r\n    }\r\n    else if (userAgent.match(/OpenBSD/)) {\r\n        return \"OpenBSE\";\r\n    }\r\n    else if (userAgent.match(/SunOS/)) {\r\n        return \"SunOS\";\r\n    }\r\n    else if (userAgent.match(/(Linux)|(X11)/)) {\r\n        return \"Linux\";\r\n    }\r\n    else if (userAgent.match(/(Mac_PowerPC)|(Macintosh)/)) {\r\n        return \"MacOS\";\r\n    }\r\n    else if (userAgent.match(/QNX/)) {\r\n        return \"QNX\";\r\n    }\r\n    else if (userAgent.match(/BeOS/)) {\r\n        return \"BeOS\";\r\n    }\r\n    else if (userAgent.match(/OS\\/2/)) {\r\n        return \"OS/2\";\r\n    }\r\n    else if (userAgent.match(/(APIs-Google)|(AdsBot)|(nuhk)|(Googlebot)|(Storebot)|(Google-Site-Verification)|(Mediapartners)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/)) {\r\n        return \"Search Bot\";\r\n    }\r\n    else {\r\n        return \"Unknown\";\r\n    }\r\n}\r\nfunction osPlotLayout() {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 30);\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 35, l: 70, t: 20, b: 20, pad: 0 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 180,\r\n        width: 411,\r\n        yaxis: {\r\n            title: { text: \"Requests\" },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nlet colors = [\r\n    \"#3FCF8E\",\r\n    \"#5784BA\",\r\n    \"#EBEB81\",\r\n    \"#218B82\",\r\n    \"#FFD6A5\",\r\n    \"#F9968B\",\r\n    \"#B1A2CA\",\r\n    \"#E46161\", // Red\r\n];\r\nfunction pieChart() {\r\n    let osCount = {};\r\n    for (let i = 1; i < data.length; i++) {\r\n        let os = getOS(data[i][2]);\r\n        if (!(os in osCount)) {\r\n            osCount[os] = 0;\r\n        }\r\n        osCount[os]++;\r\n    }\r\n    let os = [];\r\n    let count = [];\r\n    for (let browser in osCount) {\r\n        os.push(browser);\r\n        count.push(osCount[browser]);\r\n    }\r\n    return [\r\n        {\r\n            values: count,\r\n            labels: os,\r\n            type: \"pie\",\r\n            marker: {\r\n                colors: colors,\r\n            },\r\n        },\r\n    ];\r\n}\r\nfunction osPlotData() {\r\n    return {\r\n        data: pieChart(),\r\n        layout: osPlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = osPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && genPlot();\r\nexport let data;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import codeStyle from \"svelte-highlight/styles/a11y-dark\";\r\nimport frameworkExamples from \"../../lib/framework\";\r\nfunction setFramework(value) {\r\n    currentFramework = value;\r\n}\r\nlet frameworks = [\r\n    [\"python\", \"FastAPI\"],\r\n    [\"python\", \"Flask\"],\r\n    [\"python\", \"Django\"],\r\n    [\"python\", \"Tornado\"],\r\n    [\"javascript\", \"Express\"],\r\n    [\"javascript\", \"Fastify\"],\r\n    [\"javascript\", \"Koa\"],\r\n    [\"go\", \"Gin\"],\r\n    [\"go\", \"Echo\"],\r\n    [\"go\", \"Fiber\"],\r\n    [\"go\", \"Chi\"],\r\n    [\"rust\", \"Actix\"],\r\n    [\"rust\", \"Axum\"],\r\n    [\"rust\", \"Rocket\"],\r\n    [\"ruby\", \"Rails\"],\r\n    [\"ruby\", \"Sinatra\"],\r\n];\r\nlet currentFramework = frameworks[0][1];\r\n</script>\r\n\r\n<svelte:head>\r\n  <link href=\"prism.css\" rel=\"stylesheet\" />\r\n  <script src=\"prism.js\"></script>\r\n  {@html codeStyle}\r\n</svelte:head>\r\n\r\n<div class=\"gradient-container\">\r\n  <div class=\"left-gradient gradient\" />\r\n  <div class=\"right-gradient gradient\" />\r\n  <div class=\"radial-dimmer dimmer\" />\r\n  <div class=\"linear-dimmer dimmer\" />\r\n</div>\r\n<div class=\"add-middleware\">\r\n  <div class=\"add-middleware-title\">Getting Started</div>\r\n  <div class=\"frameworks\">\r\n    {#each frameworks as [language, framework]}\r\n      <button\r\n        class=\"framework {language}\"\r\n        class:active={currentFramework == framework}\r\n        on:click={() => {\r\n          setFramework(framework);\r\n        }}>{framework}</button\r\n      >\r\n    {/each}\r\n  </div>\r\n  <div class=\"add-middleware-content\">\r\n    <div class=\"instructions-container\">\r\n      <div class=\"instructions\">\r\n        <div class=\"subtitle\">Install</div>\r\n        <code class=\"installation\"\r\n          >{frameworkExamples[currentFramework].install}</code\r\n        >\r\n        <div class=\"subtitle\">Add middleware to API</div>\r\n        <!-- Render all code snippets to apply one-time syntax highlighting -->\r\n        <!-- TODO: dynamic syntax highlight rendering to only render the \r\n            frameworks clicked on and reduce this code to one line -->\r\n        <div class=\"code-file\">\r\n          {frameworkExamples[currentFramework].codeFile}\r\n        </div>\r\n        {#each frameworks as [language, framework]}\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-{language}\"\r\n            style=\"{currentFramework == framework ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[framework].example}</code\r\n          >\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .gradient-container {\r\n    position: relative;\r\n    display: flex;\r\n    height: 800px;\r\n    z-index: 1;\r\n    margin-top: -15em;\r\n  }\r\n  .gradient {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: conic-gradient(\r\n      from 270deg,\r\n      var(--highlight),\r\n      var(--dark-background)\r\n    );\r\n    filter: brightness(1.05);\r\n  }\r\n  .left-gradient {\r\n    margin-left: auto;\r\n    transform: scale(-1, 1);\r\n    margin-right: -1px;\r\n  }\r\n  .right-gradient {\r\n    margin-right: auto;\r\n    margin-left: -1px;\r\n  }\r\n  .dimmer {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .radial-dimmer {\r\n    background: radial-gradient(transparent, var(--background));\r\n  }\r\n  .linear-dimmer {\r\n    background: linear-gradient(\r\n      var(--background),\r\n      transparent,\r\n      var(--background)\r\n    );\r\n  }\r\n\r\n  .landing-page {\r\n    display: flex;\r\n    place-items: center;\r\n    padding-bottom: 6em;\r\n  }\r\n  .landing-page-container {\r\n    display: grid;\r\n    margin: 0 12% 0 15%;\r\n    min-height: 100vh;\r\n  }\r\n  .left {\r\n    flex: 1;\r\n    text-align: left;\r\n  }\r\n  .right {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .logo {\r\n    max-width: 1400px;\r\n    width: 700px;\r\n    margin-bottom: -50px;\r\n  }\r\n\r\n  .links {\r\n    color: var(--dim-text);\r\n    display: flex;\r\n    margin-top: 30px;\r\n    text-align: left;\r\n  }\r\n  .link {\r\n    width: fit-content;\r\n    margin-right: 20px;\r\n    font-size: 0.9;\r\n  }\r\n  .link:hover {\r\n    background: #31aa73;\r\n  }\r\n\r\n  .secondary {\r\n    background: var(--background);\r\n    border: 3px solid var(--highlight);\r\n    color: var(--highlight);\r\n  }\r\n  .secondary:hover {\r\n    background: var(--dark-green);\r\n  }\r\n\r\n  .lightning-top {\r\n    height: 65px;\r\n  }\r\n\r\n  .dashboard-title-container {\r\n    display: flex;\r\n    margin: 2em 4em;\r\n  }\r\n\r\n  .italic {\r\n    font-style: italic;\r\n  }\r\n  .dashboard {\r\n    border: 3px solid var(--highlight);\r\n    width: 80%;\r\n    border-radius: 10px;\r\n    margin: auto;\r\n    margin-bottom: 8em;\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n  .dashboard-title {\r\n    font-size: 2.5em;\r\n    text-align: left;\r\n    margin: 0.2em 1em auto 1em;\r\n  }\r\n  .dashboard-title-container {\r\n    place-content: center;\r\n  }\r\n  .dashboard-img {\r\n    width: 81%;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 24px 120px -25px var(--highlight);\r\n    margin-bottom: -1%;\r\n  }\r\n  .dashboard-content {\r\n    text-align: left;\r\n    color: white;\r\n    margin: 0 5em 4em;\r\n  }\r\n  .dashboard-content-text {\r\n    font-size: 1.1em;\r\n    text-align: center;\r\n  }\r\n  .dashboard-btn-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 2em;\r\n  }\r\n  .dashboard-btn-text {\r\n    text-align: center;\r\n  }\r\n\r\n  .add-middleware-title {\r\n    color: var(--highlight);\r\n    color: var(--background);\r\n    font-size: 2.5em;\r\n    font-weight: 700;\r\n    margin-bottom: 1.5em;\r\n  }\r\n  .add-middleware {\r\n    margin: auto;\r\n    margin-bottom: 7em;\r\n    border-radius: 6px;\r\n    margin-top: -480px;\r\n    z-index: 2;\r\n    position: relative;\r\n  }\r\n\r\n  .frameworks {\r\n    margin: 0 25%;\r\n    overflow-x: auto;\r\n  }\r\n  .framework {\r\n    color: var(--faint-text);\r\n    /* color: black; */\r\n    background: transparent;\r\n    border: none;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    padding: 8px 13px;\r\n    height: auto;\r\n    width: auto;\r\n    border: 3px solid transparent;\r\n    border-radius: 4px;\r\n  }\r\n  .active {\r\n    color: white;\r\n  }\r\n  .active.python {\r\n    border: 3px solid #4b8bbe;\r\n  }\r\n  .active.go {\r\n    border: 3px solid #00a7d0;\r\n  }\r\n  .active.javascript {\r\n    border: 3px solid #edd718;\r\n  }\r\n  .active.rust {\r\n    border: 3px solid #ef4900;\r\n  }\r\n  .active.ruby {\r\n    border: 3px solid #cd0000;\r\n  }\r\n  .active.php {\r\n    border: 3px solid #7377ad;\r\n  }\r\n  .subtitle {\r\n    color: var(--faint-text);\r\n    margin: 10px 0 2px 16px;\r\n    font-size: 0.85em;\r\n  }\r\n  .instructions-container {\r\n    padding: 1.5em 2em 2em;\r\n    width: 850px;\r\n    margin: auto;\r\n  }\r\n  .instructions {\r\n    text-align: left;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n  }\r\n  code {\r\n    background: var(--dark-background);\r\n    padding: 1.4em 2em;\r\n    border-radius: 0.5em;\r\n    margin: 5px;\r\n    color: #dcdfe4;\r\n    white-space: pre-wrap;\r\n    overflow: auto;\r\n  }\r\n  .code {\r\n    display: none;\r\n  }\r\n  .code-file {\r\n    position: absolute;\r\n    font-size: 0.8em;\r\n    top: 160px;\r\n    color: rgb(97, 97, 97);\r\n    text-align: right;\r\n    right: 2.5em;\r\n    margin-bottom: -2em;\r\n  }\r\n\r\n  .animated {\r\n    transition: all 10s ease-in-out;\r\n  }\r\n\r\n  @media screen and (min-width: 1700px) {\r\n    .frameworks {\r\n      margin: 0 10%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1500px) {\r\n    .landing-page-container {\r\n      margin: 0 6% 0 7%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1300px) {\r\n    .landing-page-container {\r\n      margin: 0 5% 0 6%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    .landing-page {\r\n      flex-direction: column-reverse;\r\n    }\r\n    .landing-page-container {\r\n      margin: 0 2em;\r\n    }\r\n    .dashboard {\r\n      width: 90%;\r\n      margin-bottom: 4em;\r\n    }\r\n    .logo {\r\n      width: 100%;\r\n    }\r\n    .instructions-container {\r\n      width: auto;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 900px) {\r\n    .home {\r\n      font-size: 0.85em;\r\n    }\r\n    .code-file {\r\n      top: 140px;\r\n    }\r\n    .add-middleware {\r\n      margin-top: -465px;\r\n    }\r\n    .frameworks {\r\n      margin: 0 5%;\r\n    }\r\n    .gradient-container {\r\n      margin-top: -18em;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    .home {\r\n      font-size: 0.8em;\r\n    }\r\n    .right {\r\n      margin-top: 2em;\r\n    }\r\n    .gradient-container {\r\n      margin-top: -22em;\r\n    }\r\n  }\r\n  @media screen and (max-width: 700px) {\r\n    .landing-page-container {\r\n      min-height: unset;\r\n    }\r\n    .landing-page {\r\n      padding-bottom: 8em;\r\n    }\r\n    .lightning-top {\r\n      height: 40px;\r\n      margin-top: auto;\r\n    }\r\n    .dashboard-title {\r\n      margin: 0.2em 0.5em auto 1em;\r\n    }\r\n    .dashboard-img {\r\n      margin-bottom: -3%;\r\n    }\r\n    .dashboard-content {\r\n      margin: 0 2em 4em;\r\n    }\r\n    .add-middleware-title {\r\n      margin-bottom: 1em;\r\n    }\r\n    .instructions-container {\r\n      padding: 0 4%;\r\n    }\r\n    .logo {\r\n      margin-bottom: 0;\r\n    }\r\n    .gradient-container {\r\n      margin-top: -18em;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .add-middleware {\r\n      margin-top: -460px;\r\n      font-size: 0.8em;\r\n    }\r\n    .left-gradient {\r\n      width: 90%;\r\n      margin-left: -40%;\r\n    }\r\n    .right-gradient {\r\n      width: 90%;\r\n      margin-right: -40%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    .gradient-container {\r\n      margin-top: -18em;\r\n      overflow: hidden;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">export let title, description, img, path, button;\r\n</script>\r\n\r\n<div class=\"dashboard\">\r\n  <div class=\"dashboard-title-container\">\r\n    <img class=\"lightning-top\" src=\"img/logo.png\" alt=\"\" />\r\n    <h1 class=\"dashboard-title\">{title}</h1>\r\n  </div>\r\n  <div class=\"dashboard-content\">\r\n    <div class=\"dashboard-content-text\">\r\n      {description}\r\n    </div>\r\n    <div class=\"dashboard-btn-container\">\r\n      <a href={path} class=\"dashboard-btn secondary\">\r\n        <div class=\"dashboard-btn-text\">{button}</div>\r\n      </a>\r\n    </div>\r\n  </div>\r\n  <img class=\"dashboard-img\" src=\"img/{img}\" alt=\"\" />\r\n</div>\r\n\r\n<style scoped>\r\n  h1 {\r\n    font-size: 3.4em;\r\n  }\r\n\r\n  .secondary {\r\n    background: var(--background);\r\n    border: 3px solid var(--highlight);\r\n    color: var(--highlight);\r\n  }\r\n  .secondary:hover {\r\n    background: var(--dark-green);\r\n  }\r\n\r\n  .lightning-top {\r\n    height: 65px;\r\n  }\r\n\r\n  .dashboard-title-container {\r\n    display: flex;\r\n    margin: 2em 4em;\r\n  }\r\n\r\n  a {\r\n    background: var(--highlight);\r\n    color: black;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .dashboard {\r\n    border: 3px solid var(--highlight);\r\n    width: 80%;\r\n    border-radius: 10px;\r\n    margin: auto;\r\n    margin-bottom: 8em;\r\n    overflow: hidden;\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n  .dashboard-title {\r\n    font-size: 2.5em;\r\n    text-align: left;\r\n    margin: 0.2em 1em auto 1em;\r\n  }\r\n  .dashboard-title-container {\r\n    place-content: center;\r\n  }\r\n  .dashboard-img {\r\n    width: 81%;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 24px 120px -25px var(--highlight);\r\n    margin-bottom: -1%;\r\n  }\r\n  .dashboard-content {\r\n    text-align: left;\r\n    color: white;\r\n    margin: 0 5em 4em;\r\n  }\r\n  .dashboard-content-text {\r\n    font-size: 1.1em;\r\n    text-align: center;\r\n  }\r\n  .dashboard-btn-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 2em;\r\n  }\r\n  .dashboard-btn-text {\r\n    text-align: center;\r\n  }\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    .dashboard {\r\n      width: 90%;\r\n      margin-bottom: 4em;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    h1 {\r\n      font-size: 2.5em;\r\n    }\r\n    .dashboard {\r\n      font-size: 0.8em;\r\n    }\r\n\r\n    .lightning-top {\r\n      height: 40px;\r\n      margin-top: auto;\r\n    }\r\n    .dashboard-title {\r\n      margin: 0.2em 0.5em auto 0.7em;\r\n    }\r\n    .dashboard-img {\r\n      margin-bottom: -3%;\r\n    }\r\n    .dashboard-content {\r\n      margin: 0 2em 4em;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction animate() {\r\n    translation = -translation;\r\n    let el = document.getElementById(\"hover-1\");\r\n    el.style.transform = `translateY(${translation}%)`;\r\n    let el2 = document.getElementById(\"hover-2\");\r\n    el2.style.transform = `translateY(${-translation}%)`;\r\n    setTimeout(animate, 9000);\r\n}\r\nlet translation = 3.7;\r\nonMount(() => {\r\n    setTimeout(animate, 10);\r\n});\r\n</script>\r\n\r\n<div class=\"landing-page-container\">\r\n  <div class=\"landing-page\">\r\n    <div class=\"left\">\r\n      <h1>API Analytics</h1>\r\n      <h2>Monitoring and analytics for API frameworks.</h2>\r\n      <div class=\"links\">\r\n        <a href=\"/generate\" class=\"link\">\r\n          <div class=\"text\">\r\n            Try now – it's <span class=\"italic\">free</span>\r\n          </div></a\r\n        >\r\n        <a href=\"/dashboard/demo\" class=\"link secondary\">\r\n          <div class=\"text\">Demo</div></a\r\n        >\r\n      </div>\r\n    </div>\r\n    <div style=\"position: relative\" class=\"right\">\r\n      <img class=\"logo\" src=\"img/home-logo2.png\" alt=\"\" />\r\n      <img\r\n        id=\"hover-1\"\r\n        style=\"position: absolute;\"\r\n        class=\"logo animated\"\r\n        src=\"img/animated5.png\"\r\n        alt=\"\"\r\n      />\r\n      <img\r\n        id=\"hover-2\"\r\n        style=\"position: absolute;\"\r\n        class=\"logo animated\"\r\n        src=\"img/animated6.png\"\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .landing-page {\r\n    display: flex;\r\n    place-items: center;\r\n    padding-bottom: 6em;\r\n  }\r\n  .landing-page-container {\r\n    display: grid;\r\n    margin: 0 12% 0 15%;\r\n    min-height: 100vh;\r\n  }\r\n  .left {\r\n    flex: 1;\r\n    text-align: left;\r\n  }\r\n  .right {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .logo {\r\n    max-width: 1400px;\r\n    width: 700px;\r\n    margin-bottom: -50px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 3.4em;\r\n  }\r\n\r\n  h2 {\r\n    color: white;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  .links {\r\n    color: var(--dim-text);\r\n    display: flex;\r\n    margin-top: 30px;\r\n    text-align: left;\r\n  }\r\n  .link {\r\n    width: fit-content;\r\n    margin-right: 20px;\r\n    font-size: 0.9;\r\n  }\r\n  .link:hover {\r\n    background: #31aa73;\r\n  }\r\n\r\n  .secondary {\r\n    background: var(--background);\r\n    border: 3px solid var(--highlight);\r\n    color: var(--highlight);\r\n  }\r\n  .secondary:hover {\r\n    background: var(--dark-green);\r\n  }\r\n\r\n  a {\r\n    background: var(--highlight);\r\n    color: black;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n  }\r\n  .italic {\r\n    font-style: italic;\r\n  }\r\n\r\n  #hover-1 {\r\n    transform: translateY(3.7%);\r\n  }\r\n  #hover-2 {\r\n    transform: translateY(-3.7%);\r\n  }\r\n\r\n  .animated {\r\n    transition: all 10s ease-in-out;\r\n  }\r\n\r\n  @media screen and (max-width: 1500px) {\r\n    .landing-page-container {\r\n      margin: 0 6% 0 7%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1300px) {\r\n    .landing-page-container {\r\n      margin: 0 5% 0 6%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    .landing-page {\r\n      flex-direction: column-reverse;\r\n    }\r\n    .landing-page-container {\r\n      margin: 0 2em;\r\n    }\r\n\r\n    .logo {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    .right {\r\n      margin-top: 2em;\r\n    }\r\n  }\r\n  @media screen and (max-width: 700px) {\r\n    h1 {\r\n      font-size: 2.5em;\r\n    }\r\n    h2 {\r\n      font-size: 1.2em;\r\n    }\r\n    .landing-page-container {\r\n      min-height: unset;\r\n      font-size: 0.8em;\r\n    }\r\n    .landing-page {\r\n      padding-bottom: 8em;\r\n    }\r\n\r\n    .logo {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport ResponseTime from \"./ResponseTime.svelte\";\r\nasync function deleteMonitor() {\r\n    delete data[url];\r\n    data = data; // Trigger reactivity to update display\r\n    try {\r\n        let response = await fetch(\"https://www.apianalytics-server.com/api/monitor/delete\", {\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                user_id: userID,\r\n                url: url,\r\n            }),\r\n        });\r\n        if (response.status != 201) {\r\n            console.log(\"Error\", response.status);\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\nfunction setUptime() {\r\n    let success = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < samples.length; i++) {\r\n        if (samples[i].label === \"no-request\") {\r\n            continue;\r\n        }\r\n        if (samples[i].label === \"success\" || samples[i].label === \"delay\") {\r\n            success++;\r\n        }\r\n        total++;\r\n    }\r\n    let per = (success / total) * 100;\r\n    if (per === 100) {\r\n        uptime = \"100\";\r\n    }\r\n    else {\r\n        uptime = per.toFixed(1);\r\n    }\r\n}\r\nfunction periodToMarkers(period) {\r\n    switch (period) {\r\n        case \"24h\":\r\n            return 38;\r\n        case \"7d\":\r\n            return 84;\r\n        case \"30d\":\r\n        case \"60d\":\r\n            return 120;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction periodSample() {\r\n    /* Sample ping recordings at regular intervals if number of bars fewer than\r\n    total recordings the current period length */\r\n    let sample = [];\r\n    switch (period) {\r\n        case \"30d\":\r\n            // Sample 1 in 4\r\n            for (let i = 0; i < data[url].length; i++) {\r\n                if (i % 4 == 0) {\r\n                    sample.push(data[url][i]);\r\n                }\r\n            }\r\n            break;\r\n        case \"60d\":\r\n            // Sample 1 in 8\r\n            for (let i = 0; i < data[url].length; i++) {\r\n                if (i % 8 == 0) {\r\n                    sample.push(data[url][i]);\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            sample = data[url];\r\n    }\r\n    return sample;\r\n}\r\nfunction setSamples() {\r\n    let markers = periodToMarkers(period);\r\n    samples = Array(markers).fill({ label: \"no-request\", responseTime: 0 });\r\n    let sampledData = periodSample();\r\n    let start = markers - sampledData.length;\r\n    for (let i = 0; i < sampledData.length; i++) {\r\n        samples[i + start] = {\r\n            label: \"no-request\",\r\n            status: sampledData[i].status,\r\n            responseTime: sampledData[i].responseTime,\r\n        };\r\n        if (sampledData[i].status >= 200 && sampledData[i].status <= 299) {\r\n            samples[i + start].label = \"success\";\r\n        }\r\n        else if (sampledData[i].status != null) {\r\n            samples[i + start].label = \"error\";\r\n        }\r\n    }\r\n}\r\nfunction setError() {\r\n    if (samples[samples.length - 1].label == null) {\r\n        error = null; // Website not live\r\n    }\r\n    else {\r\n        error = samples[samples.length - 1].label === \"error\";\r\n    }\r\n    anyError = anyError || error;\r\n}\r\nfunction build() {\r\n    setSamples();\r\n    setError();\r\n    setUptime();\r\n}\r\nlet uptime = \"\";\r\nlet error = false;\r\nlet samples;\r\nonMount(() => {\r\n    build();\r\n});\r\n$: period && build();\r\nexport let url, data, userID, period, anyError;\r\n</script>\r\n\r\n<div class=\"card\" class:card-error={error}>\r\n  <div class=\"card-text\">\r\n    <div class=\"card-text-left\">\r\n      <div class=\"card-status\">\r\n        {#if error == null}\r\n          <div class=\"indicator grey-light\" />\r\n        {:else if error}\r\n          <div class=\"indicator red-light\" />\r\n        {:else}\r\n          <div class=\"indicator green-light\" />\r\n        {/if}\r\n      </div>\r\n      <a href=\"http://{url}\" class=\"endpoint\"\r\n        ><span style=\"color: var(--dim-text)\">http://</span>{url}</a\r\n      >\r\n      <button class=\"delete\" on:click={deleteMonitor}\r\n        ><img class=\"bin-icon\" src=\"../img/bin.png\" alt=\"\" /></button\r\n      >\r\n    </div>\r\n    <div class=\"card-text-right\">\r\n      <div class=\"uptime\">Uptime: {uptime}%</div>\r\n    </div>\r\n  </div>\r\n  {#if samples != undefined}\r\n    <div class=\"measurements\">\r\n      {#each samples as sample}\r\n        <div\r\n          class=\"measurement {sample.label}\"\r\n          title=\"Status {sample.status}\"\r\n        />\r\n      {/each}\r\n    </div>\r\n    <div class=\"response-time\">\r\n      <ResponseTime data={samples} {period} />\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: min(100%, 1000px);\r\n    border: 1px solid #2e2e2e;\r\n    margin: 2.2em auto;\r\n  }\r\n  .card-error {\r\n    box-shadow: rgba(228, 98, 98, 0.5) 0px 15px 110px 0px,\r\n      rgba(0, 0, 0, 0.4) 0px 30px 60px -30px;\r\n    border: 2px solid rgba(228, 98, 98, 1);\r\n  }\r\n  .card-text {\r\n    display: flex;\r\n    margin: 2em 2em 0;\r\n    font-size: 0.9em;\r\n  }\r\n  .card-text-left {\r\n    flex-grow: 1;\r\n    display: flex;\r\n  }\r\n  .endpoint {\r\n    margin-left: 10px;\r\n    letter-spacing: 0.01em;\r\n    color: white;\r\n  }\r\n  .measurements {\r\n    display: flex;\r\n    padding: 1em 2em 2em;\r\n  }\r\n  .measurement {\r\n    margin: 0 0.1%;\r\n    flex: 1;\r\n    height: 3em;\r\n    border-radius: 1px;\r\n    background: var(--highlight);\r\n    background: rgb(40, 40, 40);\r\n  }\r\n  .success {\r\n    background: var(--highlight);\r\n  }\r\n  .delayed {\r\n    background: rgb(199, 229, 125);\r\n  }\r\n  .error {\r\n    background: rgb(228, 98, 98);\r\n  }\r\n  .no-request {\r\n    color: var(--dim-text);\r\n  }\r\n  .uptime {\r\n    color: var(--dim-text);\r\n  }\r\n  .indicator {\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 5px;\r\n    margin-right: 5px;\r\n    margin-bottom: 1px;\r\n  }\r\n  .card-status {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .green-light {\r\n    background: var(--highlight);\r\n    box-shadow: 0 1px 1px #fff, 0 0 6px 3px var(--highlight);\r\n  }\r\n  .red-light {\r\n    background: var(--red);\r\n    box-shadow: 0 1px 1px #fff, 0 0 6px 3px var(--red);\r\n  }\r\n  .grey-light {\r\n    background: grey;\r\n    box-shadow: 0 0 1px 1px #fff;\r\n  }\r\n  .delete {\r\n    background: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n    padding: 2px 4px 1px;\r\n    border-radius: 4px;\r\n  }\r\n  .delete:hover {\r\n    background: var(--red);\r\n  }\r\n  .bin-icon {\r\n    width: 12px;\r\n    filter: invert(0.3);\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">async function postMonitor() {\r\n    try {\r\n        let response = await fetch(`https://www.apianalytics-server.com/api/monitor/add`, {\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                user_id: userID,\r\n                url: url,\r\n                ping: pingType === \"simple-ping\",\r\n                secure: false,\r\n            }),\r\n        });\r\n        if (response.status != 201) {\r\n            console.log(\"Error\", response.status);\r\n        }\r\n        showTrackNew = false;\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\nfunction setPingType(value) {\r\n    pingType = value;\r\n}\r\nlet url;\r\nlet pingType = \"simple-ping\";\r\nexport let userID, showTrackNew;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-text\">\r\n    <div class=\"url\">\r\n      <div class=\"start\">http://</div>\r\n      <input type=\"text\" placeholder=\"example.com/endpoint/\" bind:value={url} />\r\n      <button class=\"add\" on:click={postMonitor}>Add</button>\r\n    </div>\r\n    <div class=\"ping-types\">\r\n      <button\r\n        class=\"ping-type\"\r\n        on:click={() => setPingType(\"simple-ping\")}\r\n        class:active={pingType == \"simple-ping\"}\r\n      >\r\n        Ping\r\n      </button>\r\n      <button\r\n        class=\"ping-type\"\r\n        on:click={() => setPingType(\"get-request\")}\r\n        class:active={pingType == \"get-request\"}\r\n      >\r\n        GET\r\n      </button>\r\n    </div>\r\n    <div class=\"detail\">\r\n      Endpoints are pinged by our servers every 30 mins and response <b\r\n        >status</b\r\n      >\r\n      and response <b>time</b> are logged.\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: min(100%, 1000px);\r\n    border: 1px solid #2e2e2e;\r\n    margin: 2.2em auto;\r\n  }\r\n  .card-text {\r\n    margin: 2em 2em 1.9em;\r\n  }\r\n  input {\r\n    background: var(--background);\r\n    border-radius: 4px;\r\n    border: none;\r\n    margin: 0 10px;\r\n    width: 100%;\r\n    text-align: left;\r\n    height: auto;\r\n    padding: 6px 15px;\r\n    color: white;\r\n  }\r\n  .url {\r\n    display: flex;\r\n  }\r\n  .start {\r\n    margin: auto;\r\n    color: var(--dim-text);\r\n  }\r\n  .detail {\r\n    margin-top: 30px;\r\n    color: var(--dim-text);\r\n    font-weight: 400;\r\n    font-size: 0.85em;\r\n  }\r\n  button {\r\n    border: none;\r\n    border-radius: 4px;\r\n    background: var(--light-background);\r\n    cursor: pointer;\r\n  }\r\n  .add {\r\n    background: var(--highlight);\r\n    padding: 5px 20px;\r\n  }\r\n  .ping-types {\r\n    margin-top: 20px;\r\n  }\r\n  .ping-type {\r\n    color: var(--dim-text);\r\n    border: 1px solid #2e2e2e;\r\n    padding: 5px 20px;\r\n    width: 80px;\r\n  }\r\n  .active {\r\n    background: var(--highlight);\r\n    color: black;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport Requests from \"../components/dashboard/Requests.svelte\";\r\nimport Logo from \"../components/dashboard/Logo.svelte\";\r\nimport ResponseTimes from \"../components/dashboard/ResponseTimes.svelte\";\r\nimport Users from \"../components/dashboard/Users.svelte\";\r\nimport Endpoints from \"../components/dashboard/Endpoints.svelte\";\r\nimport Footer from \"../components/Footer.svelte\";\r\nimport SuccessRate from \"../components/dashboard/SuccessRate.svelte\";\r\nimport Activity from \"../components/dashboard/activity/Activity.svelte\";\r\nimport Version from \"../components/dashboard/Version.svelte\";\r\nimport UsageTime from \"../components/dashboard/UsageTime.svelte\";\r\nimport Location from \"../components/dashboard/Location.svelte\";\r\nimport Device from \"../components/dashboard/device/Device.svelte\";\r\nimport periodToDays from \"../lib/period\";\r\nimport genDemoData from \"../lib/demo\";\r\nimport formatUUID from \"../lib/uuid\";\r\nfunction inPeriod(date, days) {\r\n    let periodAgo = new Date();\r\n    periodAgo.setDate(periodAgo.getDate() - days);\r\n    return date > periodAgo;\r\n}\r\nfunction allTimePeriod(date) {\r\n    return true;\r\n}\r\nfunction setPeriodData() {\r\n    let days = periodToDays(currentPeriod);\r\n    let counted = allTimePeriod;\r\n    if (days != null) {\r\n        counted = (date) => {\r\n            return inPeriod(date, days);\r\n        };\r\n    }\r\n    let dataSubset = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n        if (disable404 && data[i][5] == 404) {\r\n            continue;\r\n        }\r\n        let date = new Date(data[i][7]);\r\n        if (counted(date)) {\r\n            dataSubset.push(data[i]);\r\n        }\r\n    }\r\n    periodData = dataSubset;\r\n}\r\nfunction inPrevPeriod(date, days) {\r\n    let startPeriodAgo = new Date();\r\n    startPeriodAgo.setDate(startPeriodAgo.getDate() - days * 2);\r\n    let endPeriodAgo = new Date();\r\n    endPeriodAgo.setDate(endPeriodAgo.getDate() - days);\r\n    return startPeriodAgo < date && date < endPeriodAgo;\r\n}\r\nfunction setPrevPeriodData() {\r\n    let days = periodToDays(currentPeriod);\r\n    let inPeriod = allTimePeriod;\r\n    if (days != null) {\r\n        inPeriod = (date) => {\r\n            return inPrevPeriod(date, days);\r\n        };\r\n    }\r\n    let dataSubset = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n        if (disable404 && data[i][5] == 404) {\r\n            continue;\r\n        }\r\n        let date = new Date(data[i][7]);\r\n        if (inPeriod(date)) {\r\n            dataSubset.push(data[i]);\r\n        }\r\n    }\r\n    prevPeriodData = dataSubset;\r\n}\r\nfunction setPeriod(value) {\r\n    currentPeriod = value;\r\n    setPeriodData();\r\n    setPrevPeriodData();\r\n}\r\nfunction toggleEnable404() {\r\n    disable404 = !disable404;\r\n    // Allow button to toggle colour responsively\r\n    setTimeout(() => {\r\n        setPeriodData();\r\n        setPrevPeriodData();\r\n    }, 10);\r\n}\r\nasync function fetchData() {\r\n    userID = formatUUID(userID);\r\n    try {\r\n        const response = await fetch(`https://www.apianalytics-server.com/api/requests/${userID}`);\r\n        if (response.status === 200) {\r\n            const json = await response.json();\r\n            data = json;\r\n            console.log(data);\r\n            setPeriod(currentPeriod);\r\n        }\r\n    }\r\n    catch (e) {\r\n        failed = true;\r\n    }\r\n}\r\nlet data;\r\nlet periodData;\r\nlet prevPeriodData;\r\nlet timePeriods = [\r\n    { name: \"24-hours\", label: \"24 hours\" },\r\n    { name: \"week\", label: \"Week\" },\r\n    { name: \"month\", label: \"Month\" },\r\n    { name: \"3-months\", label: \"3 months\" },\r\n    { name: \"6-months\", label: \"6 months\" },\r\n    { name: \"year\", label: \"Year\" },\r\n    { name: \"all-time\", label: \"All time\" },\r\n];\r\nlet currentPeriod = timePeriods[2].name;\r\nlet failed = false;\r\nlet disable404 = false;\r\nonMount(() => {\r\n    if (demo) {\r\n        data = genDemoData();\r\n        setPeriod(currentPeriod);\r\n    }\r\n    else {\r\n        fetchData();\r\n    }\r\n});\r\nexport let userID, demo;\r\n</script>\r\n\r\n{#if periodData != undefined}\r\n  <div class=\"dashboard\">\r\n    <div class=\"button-nav\">\r\n      <div class=\"nav-btn enable-404\">\r\n        <button\r\n          class=\"enable-404-btn\"\r\n          on:click={toggleEnable404}\r\n          class:time-period-btn-active={disable404}>Disable 404</button\r\n        >\r\n      </div>\r\n      <div class=\"nav-btn time-period\">\r\n        {#each timePeriods as period}\r\n          <button\r\n            class=\"time-period-btn\"\r\n            class:time-period-btn-active={currentPeriod === period.name}\r\n            on:click={() => {\r\n              setPeriod(period.name);\r\n            }}\r\n          >\r\n            {period.label}\r\n          </button>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n    <div class=\"dashboard-content\">\r\n      <div class=\"left\">\r\n        <div class=\"row\">\r\n          <Logo />\r\n          <SuccessRate data={periodData} />\r\n        </div>\r\n        <div class=\"row\">\r\n          <Requests\r\n            data={periodData}\r\n            prevData={prevPeriodData}\r\n            period={currentPeriod}\r\n          />\r\n          <Users\r\n            data={periodData}\r\n            prevData={prevPeriodData}\r\n            period={currentPeriod}\r\n          />\r\n        </div>\r\n        <ResponseTimes data={periodData} />\r\n        <Endpoints data={periodData} />\r\n        <Version data={periodData} />\r\n      </div>\r\n      <div class=\"right\">\r\n        <Activity data={periodData} period={currentPeriod} />\r\n        <div class=\"grid-row\">\r\n          <!-- <Growth data={periodData} prevData={prevPeriodData} /> -->\r\n          <Location data={periodData} />\r\n          <Device data={periodData} />\r\n        </div>\r\n        <UsageTime data={periodData} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n{:else if failed}\r\n  <img class=\"no-requests\" src=\"../img/no-requests-logged.png\" alt=\"\" />\r\n{:else}\r\n  <div class=\"placeholder\" style=\"min-height: 85vh;\">\r\n    <div class=\"spinner\">\r\n      <div class=\"loader\" />\r\n    </div>\r\n  </div>\r\n{/if}\r\n<Footer />\r\n\r\n<style scoped>\r\n  .dashboard {\r\n    min-height: 90vh;\r\n  }\r\n  .dashboard {\r\n    margin: 1.4em 5em 5em;\r\n  }\r\n  .dashboard-content {\r\n    margin-top: 1.4em;\r\n    display: flex;\r\n    position: relative;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    margin-bottom: 2em;\r\n  }\r\n  .grid-row {\r\n    display: flex;\r\n  }\r\n  .no-requests {\r\n    width: 350px;\r\n    margin: 20vh 0;\r\n  }\r\n  .left {\r\n    margin: 0 2em;\r\n  }\r\n  .right {\r\n    flex-grow: 1;\r\n    margin-right: 2em;\r\n  }\r\n  .placeholder {\r\n    min-height: 85vh;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .button-nav {\r\n    margin: 2.5em 2em 0;\r\n    display: flex;\r\n  }\r\n  .nav-btn {\r\n    margin-left: auto;\r\n  }\r\n  .enable-404 {\r\n    text-align: right;\r\n    flex-grow: 1;\r\n    margin-right: 1.5em;\r\n    width: fit-content;\r\n  }\r\n  .time-period {\r\n    display: flex;\r\n    border: 1px solid #2e2e2e;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n  }\r\n  .enable-404-btn,\r\n  .time-period-btn {\r\n    background: var(--light-background);\r\n    padding: 3px 12px;\r\n    border: none;\r\n    color: var(--dim-text);\r\n    cursor: pointer;\r\n  }\r\n  .enable-404-btn {\r\n    border: 1px solid #2e2e2e;\r\n    padding: 3px 12px;\r\n    border-radius: 4px;\r\n  }\r\n  .time-period-btn-active {\r\n    background: var(--highlight);\r\n    color: black;\r\n  }\r\n  @media screen and (max-width: 1600px) {\r\n    .grid-row {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1300px) {\r\n    .dashboard {\r\n      margin: 0;\r\n    }\r\n    .dashboard-content {\r\n      margin: 1.4em 1em 3.5em;\r\n    }\r\n    .button-nav {\r\n      margin: 2.5em 3em 0;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    .dashboard-content {\r\n      flex-direction: column;\r\n    }\r\n    .right,\r\n    .left {\r\n      margin: 0 2em;\r\n    }\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    .button-nav {\r\n      flex-direction: column;\r\n    }\r\n    .enable-404 {\r\n      margin: 0 0 1em auto;\r\n    }\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    .right,\r\n    .left {\r\n      margin: 0 1em;\r\n    }\r\n    .time-period {\r\n      right: 1em;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">let state = \"delete\";\r\nlet apiKey = \"\";\r\nasync function genAPIKey() {\r\n    setState(\"loading\");\r\n    const response = await fetch(`https://www.apianalytics-server.com/api/delete/${apiKey}`);\r\n    if (response.status === 200) {\r\n        setState(\"deleted\");\r\n    }\r\n    else {\r\n        setState(\"error\");\r\n    }\r\n}\r\nfunction setState(value) {\r\n    state = value;\r\n}\r\n</script>\r\n\r\n<div class=\"generate\">\r\n  <div class=\"content\">\r\n    <h2>Delete account</h2>\r\n    <input type=\"text\" bind:value={apiKey} placeholder=\"Enter API key\" />\r\n    <button\r\n      id=\"formBtn\"\r\n      on:click={genAPIKey}\r\n      class:no-display={state != \"delete\"}>Delete</button\r\n    >\r\n    <button id=\"formBtn\" class:no-display={state != \"loading\"}>\r\n      <div class=\"spinner\">\r\n        <div class=\"loader\" />\r\n      </div>\r\n    </button>\r\n    <button\r\n      id=\"formBtn\"\r\n      class=\"copied-btn\"\r\n      class:no-display={state != \"deleted\"}>Deleted</button\r\n    >\r\n    <button id=\"formBtn\" class:no-display={state != \"error\"}>Error</button>\r\n  </div>\r\n  <div class=\"details\">\r\n    <div class=\"keep-secure\">Keep your API key safe and secure.</div>\r\n    <div class=\"highlight logo\">API Analytics</div>\r\n    <img class=\"footer-logo\" src=\"img/logo.png\" alt=\"\" />\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .spinner {\r\n    height: auto;\r\n  }\r\n  .loader {\r\n    border: 3px solid #343434;\r\n    border-top: 3px solid var(--highlight);\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n</style>\r\n",
    "<div class=\"error\">\r\n  <div class=\"error-code\">\r\n    <div class=\"green-cover\">\r\n      <img src=\"img/logo.png\" alt=\"\" />\r\n    </div>\r\n    404\r\n  </div>\r\n  <div class=\"message\">Page not found</div>\r\n</div>\r\n\r\n<style scoped>\r\n  .error {\r\n    margin-top: 8%;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .error-code {\r\n    font-size: 15em;\r\n    font-weight: 900;\r\n    color: var(--highlight);\r\n    position: relative;\r\n    width: fit-content;\r\n  }\r\n  .green-cover {\r\n    background: var(--highlight);\r\n    width: 0.3em;\r\n    height: 0.6em;\r\n    position: absolute;\r\n    top: 30%;\r\n    right: 40%;\r\n  }\r\n  img {\r\n    filter: brightness(0.12);\r\n    width: 0.32em;\r\n    position: absolute;\r\n    right: 5%;\r\n    top: 5%;\r\n  }\r\n  .message {\r\n    color: var(--highlight);\r\n    font-size: 1.4em;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    .error {\r\n      font-size: 0.5em;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">let state = \"generate\";\r\nlet generatedKey = false;\r\nlet apiKey = \"\";\r\nasync function genAPIKey() {\r\n    if (!generatedKey) {\r\n        setState(\"loading\");\r\n        try {\r\n            const response = await fetch(\"https://www.apianalytics-server.com/api/generate-api-key\");\r\n            if (response.status == 200) {\r\n                const data = await response.json();\r\n                generatedKey = true;\r\n                apiKey = data;\r\n                setState(\"copy\");\r\n            }\r\n            else {\r\n                setState(\"error\");\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            setState(\"generate\");\r\n        }\r\n    }\r\n}\r\nfunction setState(value) {\r\n    state = value;\r\n}\r\nfunction copyToClipboard() {\r\n    navigator.clipboard.writeText(apiKey);\r\n    setState(\"copied\");\r\n}\r\n</script>\r\n\r\n<div class=\"generate\">\r\n  <div class=\"content\">\r\n    <h2>Generate API key</h2>\r\n    <input type=\"text\" readonly bind:value={apiKey} />\r\n    <button\r\n      id=\"formBtn\"\r\n      on:click={genAPIKey}\r\n      class:no-display={state != \"generate\"}>Generate</button\r\n    >\r\n    <button id=\"formBtn\" class:no-display={state != \"loading\"}>\r\n      <div class=\"spinner\">\r\n        <div class=\"loader\" />\r\n      </div>\r\n    </button>\r\n    <button\r\n      id=\"formBtn\"\r\n      on:click={copyToClipboard}\r\n      class:no-display={state != \"copy\"}\r\n      ><img class=\"copy-icon\" src=\"img/copy.png\" alt=\"\" /></button\r\n    >\r\n    <button\r\n      id=\"formBtn\"\r\n      class=\"copied-btn\"\r\n      on:click={copyToClipboard}\r\n      class:no-display={state != \"copied\"}>Copied</button\r\n    >\r\n    <button id=\"formBtn\" class:no-display={state != \"error\"}>Error</button>\r\n  </div>\r\n  <div class=\"details\">\r\n    <div class=\"keep-secure\">Keep your API key safe and secure.</div>\r\n    <div class=\"highlight logo\">API Analytics</div>\r\n    <img class=\"footer-logo\" src=\"img/logo.png\" alt=\"\" />\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .copy-icon {\r\n    height: 18px;\r\n  }\r\n  .copied-btn {\r\n    cursor: default;\r\n  }\r\n  .spinner {\r\n    height: auto;\r\n  }\r\n  .loader {\r\n    border: 3px solid #343434;\r\n    border-top: 3px solid var(--highlight);\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport Footer from \"../components/Footer.svelte\";\r\nimport Card from \"../components/monitoring/Card.svelte\";\r\nimport TrackNew from \"../components/monitoring/TrackNew.svelte\";\r\nimport formatUUID from \"../lib/uuid\";\r\nasync function fetchData() {\r\n    userID = formatUUID(userID);\r\n    try {\r\n        const response = await fetch(`https://www.apianalytics-server.com/api/monitor/pings/${userID}`);\r\n        if (response.status === 200) {\r\n            data = await response.json();\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\nfunction setPeriod(value) {\r\n    period = value;\r\n    error = false;\r\n}\r\nfunction toggleShowTrackNew() {\r\n    showTrackNew = !showTrackNew;\r\n}\r\nfunction groupByUrl() {\r\n    let group = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (!(data[i].url in group)) {\r\n            group[data[i].url] = [];\r\n        }\r\n        group[data[i].url].push({\r\n            status: data[i].status,\r\n            responseTime: data[i].response_time,\r\n        });\r\n    }\r\n    return group;\r\n}\r\nlet error = false;\r\nlet periods = [\"24h\", \"7d\", \"30d\", \"60d\"];\r\nlet period = periods[1];\r\nlet data;\r\nlet monitorData;\r\nlet showTrackNew = false;\r\nonMount(async () => {\r\n    await fetchData();\r\n    monitorData = groupByUrl();\r\n    console.log(monitorData);\r\n});\r\nexport let userID;\r\n</script>\r\n\r\n<div class=\"monitoring\">\r\n  <div class=\"status\">\r\n    {#if monitorData != undefined && Object.keys(monitorData).length == 0}\r\n      <div class=\"status-image\">\r\n        <img id=\"status-image\" src=\"/img/logo.png\" alt=\"\" />\r\n        <div class=\"status-text\">Setup required</div>\r\n      </div>\r\n    {:else if error}\r\n      <div class=\"status-image\">\r\n        <img id=\"status-image\" src=\"/img/bigcross.png\" alt=\"\" />\r\n        <div class=\"status-text\">Systems down</div>\r\n      </div>\r\n    {:else}\r\n      <div class=\"status-image\">\r\n        <img id=\"status-image\" src=\"/img/bigtick.png\" alt=\"\" />\r\n        <div class=\"status-text\">Systems Online</div>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n  <div class=\"cards-container\">\r\n    <div class=\"controls\">\r\n      <div class=\"add-new\">\r\n        <button\r\n          class=\"add-new-btn\"\r\n          class:active={showTrackNew}\r\n          on:click={toggleShowTrackNew}\r\n          ><div class=\"add-new-text\">\r\n            <span class=\"plus\">+</span>\r\n          </div>\r\n        </button>\r\n      </div>\r\n      <div class=\"period-controls-container\">\r\n        <div class=\"period-controls\">\r\n          {#each periods as p}\r\n            <button\r\n              class=\"period-btn\"\r\n              class:active={period === p}\r\n              on:click={() => {\r\n                setPeriod(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </button>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {#if monitorData != undefined}\r\n      {#if showTrackNew || Object.keys(monitorData).length == 0}\r\n        <TrackNew {userID} {showTrackNew} />\r\n      {/if}\r\n      {#each Object.keys(monitorData) as url}\r\n        <Card\r\n          {url}\r\n          bind:data={monitorData}\r\n          {userID}\r\n          {period}\r\n          bind:anyError={error}\r\n        />\r\n      {/each}\r\n    {:else}\r\n      <div class=\"spinner\">\r\n        <div class=\"loader\" />\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</div>\r\n<Footer />\r\n\r\n<style scoped>\r\n  .monitoring {\r\n    font-weight: 600;\r\n  }\r\n  .status {\r\n    margin: 13vh 0 9vh;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  #status-image {\r\n    height: 130px;\r\n    margin-bottom: 1em;\r\n    filter: saturate(1.3);\r\n  }\r\n  .status-text {\r\n    font-size: 2.2em;\r\n    font-weight: 700;\r\n    color: white;\r\n  }\r\n\r\n  .cards-container {\r\n    width: 60%;\r\n    margin: auto;\r\n    padding-bottom: 1em;\r\n  }\r\n\r\n  .controls {\r\n    margin: auto;\r\n    width: 60%;\r\n\r\n    width: min(100%, 1000px);\r\n    display: flex;\r\n  }\r\n  .add-new {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: left;\r\n  }\r\n  .period-controls {\r\n    margin-left: auto;\r\n    display: flex;\r\n    justify-content: right;\r\n  }\r\n\r\n  .period-controls {\r\n    border: 1px solid #2e2e2e;\r\n    width: fit-content;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n  }\r\n  .period-controls-container {\r\n    margin-top: auto;\r\n  }\r\n\r\n  button {\r\n    background: var(--light-background);\r\n    color: var(--dim-text);\r\n    border: none;\r\n    padding: 3px 12px;\r\n    cursor: pointer;\r\n  }\r\n  .add-new-btn {\r\n    border: 1px solid #2e2e2e;\r\n    border-radius: 4px;\r\n    padding: 0;\r\n    height: 35px;\r\n    color: var(--highlight);\r\n    width: 35px;\r\n  }\r\n  .add-new-text {\r\n    display: flex;\r\n    font-size: 2em;\r\n    justify-content: center;\r\n  }\r\n  .active {\r\n    background: var(--highlight);\r\n    color: black !important;\r\n  }\r\n  .spinner {\r\n    margin: 3em 0 10em;\r\n  }\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    .cards-container {\r\n      width: 95%;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">let state = \"sign-in\";\r\nlet apiKey = \"\";\r\nasync function genAPIKey() {\r\n    setState(\"loading\");\r\n    try {\r\n        const response = await fetch(`https://www.apianalytics-server.com/api/user-id/${apiKey}`);\r\n        if (response.status === 200) {\r\n            const userID = await response.json();\r\n            window.location.href = `/${page}/${userID.replaceAll(\"-\", \"\")}`;\r\n        }\r\n        else {\r\n            setState(\"sign-in\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n        setState(\"sign-in\");\r\n    }\r\n}\r\nfunction setState(value) {\r\n    state = value;\r\n}\r\nexport let page;\r\n</script>\r\n\r\n<div class=\"generate\">\r\n  <div class=\"content\">\r\n    {#if page == \"dashboard\"}\r\n      <h2>Dashboard</h2>\r\n    {:else if page == \"monitoring\"}\r\n      <h2>Monitoring</h2>\r\n    {/if}\r\n    <input type=\"text\" bind:value={apiKey} placeholder=\"Enter API key\" />\r\n    <button\r\n      id=\"formBtn\"\r\n      on:click={genAPIKey}\r\n      class:no-display={state != \"sign-in\"}>Load</button\r\n    >\r\n    <button id=\"formBtn\" class:no-display={state != \"loading\"}>\r\n      <div class=\"spinner\">\r\n        <div class=\"loader\" />\r\n      </div>\r\n    </button>\r\n  </div>\r\n  <div class=\"details\">\r\n    <div class=\"keep-secure\">Keep your API key safe and secure.</div>\r\n    <div class=\"highlight logo\">API Analytics</div>\r\n    <img class=\"footer-logo\" src=\"img/logo.png\" alt=\"\" />\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .spinner {\r\n    height: auto;\r\n  }\r\n  .loader {\r\n    border: 3px solid #343434;\r\n    border-top: 3px solid var(--highlight);\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AASE,mBAAM,CACJ,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,WAAW,CACxB,CACA,qBAAQ,CACN,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,GAClB,CACA,0BAAa,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,IAAI,CAAC,CACpB,aAAa,CAAE,IACjB;ACuHA,mBAAM,CACJ,UAAU,CAAE,KACd,CACA,yBAAY,CACV,OAAO,CAAE,IACX,CACA,qBAAQ,CACN,WAAW,CAAE,IACf,CACA,qBAAQ,CACN,UAAU,CAAE,IAAI,WAAW,CAC7B,CACA,oBAAO,CACL,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAC3B,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,WAAW,CAAE,GACf,CACA,wBAAW,CACT,MAAM,CAAE,KAAK,CAAC,IAAI,CAAC,KACrB,CACA,uBAAU,CACR,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,KAAK,CAAE,IAAI,kBAAkB,CAAC,CAC9B,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,IACT,CACA,mBAAM,CACJ,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,CAAC,CACZ,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,GAAG,CAAC,IACf,CACA,iCAAoB,CAClB,OAAO,CAAE,IACX,CACA,sBAAS,CACP,UAAU,CAAE,IAAI,WAAW,CAC7B,CACA,kBAAK,CACH,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAC/B,CACA,oBAAO,CACL,UAAU,CAAE,IAAI,KAAK,CACvB,CACA,yBAAY,CACV,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,kBAAkB,CAAC,CAC9B,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CACP,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,mBAAM,CACJ,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAClB,CACF;ACnIA,oBAAM,CACJ,IAAI,CAAE,GAAG,CACT,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CACtB,CACA,oBAAM,CACJ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GACzB,CAEA,6BAAe,CACb,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CAAC,GAAG,CACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAClB,CAEA,4BAAc,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACf,CACA,iCAAmB,CACjB,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,OACT,CAEA,mBAAK,CACH,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,CACb,CAEA,yBAAW,CACT,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,aAAa,CAAE,GACjB,CACA,qBAAO,CACL,WAAW,CAAE,GACf,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,oBAAM,CACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,CAAC,CAAC,GAChB,CACF;ACtHA,oBAAM,CACJ,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACjB,UAAU,CAAE,WAAW,CACvB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACf,CACA,kBAAI,CACF,KAAK,CAAE,IACT,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,oBAAM,CACJ,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAClB,CACF;ACiHA,mBAAM,CACJ,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACjB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,MACZ,CACA,oBAAO,CACL,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,KAAK,CAAE,WAAW,CAClB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GACf,CACA,gCAAmB,CACjB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,IAAI,CACT,SAAS,CAAE,KACb,CACA,uBAAU,CACR,KAAK,CAAE,IAAI,WAAW,CACxB,CACA,uBAAU,CACR,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CACxB,CAEA,uBAAU,CACR,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GACf,CACA,oBAAO,CACL,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,KACf,CACA,oBAAO,CACL,MAAM,CAAE,IACV,CACA,qBAAQ,CACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,CAAC,CAAC,GACZ,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,mBAAM,CACJ,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAClB,CACF;AChGA,sBAAQ,CACN,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GACf,CACA,sBAAO,CACP,sBAAQ,CACN,MAAM,CAAE,CAAC,CAAC,MACZ,CACA,qBAAO,CACL,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GACrB,CACA,sBAAQ,CACN,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,UAAU,CACvB,CACA,qBAAO,CACL,IAAI,CAAE,CACR,CAEA,4BAAc,CACZ,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GACf,CAEA,sBAAQ,CACN,SAAS,CAAE,GACb,CACA,8BAAe,CACf,8BAAgB,CACd,SAAS,CAAE,GAAG,CACd,cAAc,CAAE,CAClB,CAEA,mBAAK,CACH,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CACpB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,QACZ,CACA,yBAAW,CACT,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GACzB,CACA,0BAAY,CACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAC/B,CACA,uBAAS,CACP,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAC1B,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAC7B,CACA,sBAAQ,CACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,IAAI,CAAE,CACR,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,oBAAM,CACJ,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAClB,CACF;AC5DA,oBAAM,CACJ,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CACjB,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MACZ,CACA,qBAAO,CACL,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,KAAK,CAAE,WAAW,CAClB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,IAAI,QAAQ,CAAC,CACpB,QAAQ,CAAE,OAAO,CACjB,OAAO,CAAE,CACX,CACA,mBAAK,CACH,KAAK,CAAE,IAAI,KAAK,CAClB,CACA,sBAAQ,CACN,KAAK,CAAE,IAAI,QAAQ,CACrB,CACA,qBAAO,CACL,KAAK,CAAE,IAAI,WAAW,CACxB,CACA,sBAAQ,CACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,CAAC,CAAC,GAAG,CACb,OAAO,CAAE,CACX,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,oBAAM,CACJ,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,CACR,CACF;AC7DA,mBAAM,CACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CACV;AC2DA,mBAAM,CACJ,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CACjB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,MACZ,CACA,oBAAO,CACL,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,KAAK,CAAE,WAAW,CAClB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,QAAQ,CAAE,OAAO,CACjB,OAAO,CAAE,CACX,CACA,gCAAmB,CACjB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,IAAI,CACT,SAAS,CAAE,KACb,CACA,uBAAU,CACR,KAAK,CAAE,IAAI,WAAW,CACxB,CACA,uBAAU,CACR,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CACxB,CAEA,uBAAU,CACR,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GACf,CACA,oBAAO,CACL,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,KACf,CACA,oBAAO,CACL,MAAM,CAAE,IACV,CACA,qBAAQ,CACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,CAAC,CAAC,GACZ,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,mBAAM,CACJ,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAChB,CACF;ACvFA,mBAAM,CACJ,MAAM,CAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACnB,cAAc,CAAE,GAAG,CACnB,IAAI,CAAE,CACR,CACA,sBAAS,CACP,YAAY,CAAE,IAChB,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,mBAAM,CACJ,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAClB,CACF;AClHA,oBAAM,CACJ,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IACT;ACiDA,qBAAQ,CACN,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IACnB,CACA,oBAAO,CACL,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,aAAa,CAAE,GACjB,CACA,qCAAwB,CACtB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,UAAU,CACvB,CACA,iCAAoB,CAClB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAClB,CACA,qCAAwB,CACtB,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,GACtB,CACA,sBAAS,CACP,UAAU,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAC5B,CACA,sBAAS,CACP,UAAU,CAAE,OACd,CACA,sBAAS,CACP,UAAU,CAAE,OACd,CACA,sBAAS,CACP,UAAU,CAAE,OACd,CACA,sBAAS,CACP,UAAU,CAAE,OACd,CACA,sBAAS,CACP,UAAU,CAAE,OACd,CACA,sBAAS,CACP,UAAU,CAAE,OACd,CACA,sBAAS,CACP,UAAU,CAAE,OACd,CACA,sBAAS,CACP,UAAU,CAAE,OACd,CACA,sBAAS,CACP,UAAU,CAAE,OACd;AC8BA,uBAAS,CACP,YAAY,CAAE,IAChB;ACtGA,mBAAM,CACJ,MAAM,CAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CACrB,cAAc,CAAE,GAAG,CACnB,KAAK,CAAE,KACT,CACA,yBAAY,CACV,OAAO,CAAE,IACX,CACA,qBAAQ,CACN,WAAW,CAAE,IACf,CACA,qBAAQ,CACN,UAAU,CAAE,IAAI,WAAW,CAC7B,CACA,iBAAG,CACH,qBAAO,CACP,qBAAQ,CACN,OAAO,CAAE,IACX,CACA,oBAAO,CACL,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAC3B,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,WAAW,CAAE,GACf,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,mBAAM,CACJ,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACf,KAAK,CAAE,IACT,CACF;ACuBA,uBAAS,CACP,YAAY,CAAE,IAChB;AC0DA,uBAAS,CACP,YAAY,CAAE,IAChB;ACtFA,kCAAoB,CAClB,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,KACd,CACA,wBAAU,CACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE;AAChB,MAAM,IAAI,CAAC,MAAM,CAAC;AAClB,MAAM,IAAI,WAAW,CAAC,CAAC;AACvB,MAAM,IAAI,iBAAiB,CAAC;AAC5B,KAAK,CACD,MAAM,CAAE,WAAW,IAAI,CACzB,CACA,6BAAe,CACb,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CACvB,YAAY,CAAE,IAChB,CACA,8BAAgB,CACd,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IACf,CACA,sBAAQ,CACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACV,CACA,6BAAe,CACb,UAAU,CAAE,gBAAgB,WAAW,CAAC,CAAC,IAAI,YAAY,CAAC,CAC5D,CACA,6BAAe,CACb,UAAU,CAAE;AAChB,MAAM,IAAI,YAAY,CAAC,CAAC;AACxB,MAAM,WAAW,CAAC;AAClB,MAAM,IAAI,YAAY,CAAC;AACvB,KACE,CAEA,4BAAc,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,GAClB,CACA,sCAAwB,CACtB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CACnB,UAAU,CAAE,KACd,CACA,oBAAM,CACJ,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,IACd,CACA,qBAAO,CACL,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACf,CACA,oBAAM,CACJ,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,KACjB,CAEA,qBAAO,CACL,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,IACd,CACA,oBAAM,CACJ,KAAK,CAAE,WAAW,CAClB,YAAY,CAAE,IAAI,CAClB,SAAS,CAAE,GACb,CACA,oBAAK,MAAO,CACV,UAAU,CAAE,OACd,CAEA,yBAAW,CACT,UAAU,CAAE,IAAI,YAAY,CAAC,CAC7B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CAClC,KAAK,CAAE,IAAI,WAAW,CACxB,CACA,yBAAU,MAAO,CACf,UAAU,CAAE,IAAI,YAAY,CAC9B,CAEA,6BAAe,CACb,MAAM,CAAE,IACV,CAEA,yCAA2B,CACzB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,GACd,CAEA,sBAAQ,CACN,UAAU,CAAE,MACd,CACA,yBAAW,CACT,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CAClC,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QACZ,CACA,+BAAiB,CACf,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GACzB,CACA,yCAA2B,CACzB,aAAa,CAAE,MACjB,CACA,6BAAe,CACb,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CACjD,aAAa,CAAE,GACjB,CACA,iCAAmB,CACjB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,GAChB,CACA,sCAAwB,CACtB,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,MACd,CACA,uCAAyB,CACvB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,GACd,CACA,kCAAoB,CAClB,UAAU,CAAE,MACd,CAEA,oCAAsB,CACpB,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,KAAK,CAAE,IAAI,YAAY,CAAC,CACxB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,aAAa,CAAE,KACjB,CACA,8BAAgB,CACd,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,QACZ,CAEA,0BAAY,CACV,MAAM,CAAE,CAAC,CAAC,GAAG,CACb,UAAU,CAAE,IACd,CACA,yBAAW,CACT,KAAK,CAAE,IAAI,YAAY,CAAC,CAExB,UAAU,CAAE,WAAW,CACvB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CAC7B,aAAa,CAAE,GACjB,CACA,sBAAQ,CACN,KAAK,CAAE,KACT,CACA,OAAO,sBAAQ,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACpB,CACA,OAAO,kBAAI,CACT,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACpB,CACA,OAAO,0BAAY,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACpB,CACA,OAAO,oBAAM,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACpB,CACA,OAAO,oBAAM,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACpB,CACA,OAAO,mBAAK,CACV,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACpB,CACA,wBAAU,CACR,KAAK,CAAE,IAAI,YAAY,CAAC,CACxB,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CACvB,SAAS,CAAE,MACb,CACA,sCAAwB,CACtB,OAAO,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CACtB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IACV,CACA,4BAAc,CACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,QAAQ,CAAE,QACZ,CACA,mBAAK,CACH,UAAU,CAAE,IAAI,iBAAiB,CAAC,CAClC,OAAO,CAAE,KAAK,CAAC,GAAG,CAClB,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,QAAQ,CACrB,QAAQ,CAAE,IACZ,CACA,oBAAM,CACJ,OAAO,CAAE,IACX,CACA,yBAAW,CACT,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,KAAK,CAChB,GAAG,CAAE,KAAK,CACV,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACtB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,IACjB,CAEA,wBAAU,CACR,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,WACtB,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,0BAAY,CACV,MAAM,CAAE,CAAC,CAAC,GACZ,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,sCAAwB,CACtB,MAAM,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACjB,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,sCAAwB,CACtB,MAAM,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACjB,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,4BAAc,CACZ,cAAc,CAAE,cAClB,CACA,sCAAwB,CACtB,MAAM,CAAE,CAAC,CAAC,GACZ,CACA,yBAAW,CACT,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,GACjB,CACA,oBAAM,CACJ,KAAK,CAAE,IACT,CACA,sCAAwB,CACtB,KAAK,CAAE,IACT,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,oBAAM,CACJ,SAAS,CAAE,MACb,CACA,yBAAW,CACT,GAAG,CAAE,KACP,CACA,8BAAgB,CACd,UAAU,CAAE,MACd,CACA,0BAAY,CACV,MAAM,CAAE,CAAC,CAAC,EACZ,CACA,kCAAoB,CAClB,UAAU,CAAE,KACd,CACF,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,oBAAM,CACJ,SAAS,CAAE,KACb,CACA,qBAAO,CACL,UAAU,CAAE,GACd,CACA,kCAAoB,CAClB,UAAU,CAAE,KACd,CACF,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,sCAAwB,CACtB,UAAU,CAAE,KACd,CACA,4BAAc,CACZ,cAAc,CAAE,GAClB,CACA,6BAAe,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IACd,CACA,+BAAiB,CACf,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAC3B,CACA,6BAAe,CACb,aAAa,CAAE,GACjB,CACA,iCAAmB,CACjB,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,GAChB,CACA,oCAAsB,CACpB,aAAa,CAAE,GACjB,CACA,sCAAwB,CACtB,OAAO,CAAE,CAAC,CAAC,EACb,CACA,oBAAM,CACJ,aAAa,CAAE,CACjB,CACA,kCAAoB,CAClB,UAAU,CAAE,KAAK,CACjB,QAAQ,CAAE,MACZ,CAEA,8BAAgB,CACd,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KACb,CACA,6BAAe,CACb,KAAK,CAAE,GAAG,CACV,WAAW,CAAE,IACf,CACA,8BAAgB,CACd,KAAK,CAAE,GAAG,CACV,YAAY,CAAE,IAChB,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,kCAAoB,CAClB,UAAU,CAAE,KAAK,CACjB,QAAQ,CAAE,MACZ,CACF;AC9ZA,iBAAG,CACD,SAAS,CAAE,KACb,CAEA,yBAAW,CACT,UAAU,CAAE,IAAI,YAAY,CAAC,CAC7B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CAClC,KAAK,CAAE,IAAI,WAAW,CACxB,CACA,yBAAU,MAAO,CACf,UAAU,CAAE,IAAI,YAAY,CAC9B,CAEA,6BAAe,CACb,MAAM,CAAE,IACV,CAEA,yCAA2B,CACzB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,GACd,CAEA,gBAAE,CACA,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,aAAa,CAAE,GACjB,CAEA,yBAAW,CACT,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CAClC,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CACX,CACA,+BAAiB,CACf,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GACzB,CACA,yCAA2B,CACzB,aAAa,CAAE,MACjB,CACA,6BAAe,CACb,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CACjD,aAAa,CAAE,GACjB,CACA,iCAAmB,CACjB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,GAChB,CACA,sCAAwB,CACtB,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,MACd,CACA,uCAAyB,CACvB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,GACd,CACA,kCAAoB,CAClB,UAAU,CAAE,MACd,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,yBAAW,CACT,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,GACjB,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,iBAAG,CACD,SAAS,CAAE,KACb,CACA,yBAAW,CACT,SAAS,CAAE,KACb,CAEA,6BAAe,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IACd,CACA,+BAAiB,CACf,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAC3B,CACA,6BAAe,CACb,aAAa,CAAE,GACjB,CACA,iCAAmB,CACjB,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,GAChB,CACF;ACrEA,4BAAc,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,GAClB,CACA,sCAAwB,CACtB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CACnB,UAAU,CAAE,KACd,CACA,oBAAM,CACJ,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,IACd,CACA,qBAAO,CACL,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACf,CACA,oBAAM,CACJ,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,KACjB,CAEA,iBAAG,CACD,SAAS,CAAE,KACb,CAEA,iBAAG,CACD,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,KACb,CAEA,qBAAO,CACL,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,IACd,CACA,oBAAM,CACJ,KAAK,CAAE,WAAW,CAClB,YAAY,CAAE,IAAI,CAClB,SAAS,CAAE,GACb,CACA,oBAAK,MAAO,CACV,UAAU,CAAE,OACd,CAEA,yBAAW,CACT,UAAU,CAAE,IAAI,YAAY,CAAC,CAC7B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CAClC,KAAK,CAAE,IAAI,WAAW,CACxB,CACA,yBAAU,MAAO,CACf,UAAU,CAAE,IAAI,YAAY,CAC9B,CAEA,gBAAE,CACA,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,aAAa,CAAE,GACjB,CACA,sBAAQ,CACN,UAAU,CAAE,MACd,CAEA,uBAAS,CACP,SAAS,CAAE,WAAW,IAAI,CAC5B,CACA,uBAAS,CACP,SAAS,CAAE,WAAW,KAAK,CAC7B,CAEA,wBAAU,CACR,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,WACtB,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,sCAAwB,CACtB,MAAM,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACjB,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,sCAAwB,CACtB,MAAM,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACjB,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,4BAAc,CACZ,cAAc,CAAE,cAClB,CACA,sCAAwB,CACtB,MAAM,CAAE,CAAC,CAAC,GACZ,CAEA,oBAAM,CACJ,KAAK,CAAE,IACT,CACF,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,qBAAO,CACL,UAAU,CAAE,GACd,CACF,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,iBAAG,CACD,SAAS,CAAE,KACb,CACA,iBAAG,CACD,SAAS,CAAE,KACb,CACA,sCAAwB,CACtB,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,KACb,CACA,4BAAc,CACZ,cAAc,CAAE,GAClB,CAEA,oBAAM,CACJ,aAAa,CAAE,CACjB,CACF;ACXA,mBAAM,CACJ,KAAK,CAAE,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CACxB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,MAAM,CAAE,KAAK,CAAC,IAChB,CACA,yBAAY,CACV,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AAC1D,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CACxC,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACvC,CACA,wBAAW,CACT,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CACjB,SAAS,CAAE,KACb,CACA,6BAAgB,CACd,SAAS,CAAE,CAAC,CACZ,OAAO,CAAE,IACX,CACA,uBAAU,CACR,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,KACT,CACA,2BAAc,CACZ,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GACnB,CACA,0BAAa,CACX,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,UAAU,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAC5B,CACA,sBAAS,CACP,UAAU,CAAE,IAAI,WAAW,CAC7B,CACA,sBAAS,CACP,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAC/B,CACA,oBAAO,CACL,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAC7B,CACA,yBAAY,CACV,KAAK,CAAE,IAAI,UAAU,CACvB,CACA,qBAAQ,CACN,KAAK,CAAE,IAAI,UAAU,CACvB,CACA,wBAAW,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GACjB,CACA,0BAAa,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACf,CACA,0BAAa,CACX,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,WAAW,CACzD,CACA,wBAAW,CACT,UAAU,CAAE,IAAI,KAAK,CAAC,CACtB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,CACnD,CACA,yBAAY,CACV,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAC1B,CACA,qBAAQ,CACN,UAAU,CAAE,WAAW,CACvB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CACpB,aAAa,CAAE,GACjB,CACA,qBAAO,MAAO,CACZ,UAAU,CAAE,IAAI,KAAK,CACvB,CACA,uBAAU,CACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,OAAO,GAAG,CACpB;AC7LA,oBAAM,CACJ,KAAK,CAAE,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CACxB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,MAAM,CAAE,KAAK,CAAC,IAChB,CACA,yBAAW,CACT,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,KAClB,CACA,oBAAM,CACJ,UAAU,CAAE,IAAI,YAAY,CAAC,CAC7B,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,KAAK,CAAE,KACT,CACA,mBAAK,CACH,OAAO,CAAE,IACX,CACA,qBAAO,CACL,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,UAAU,CACvB,CACA,sBAAQ,CACN,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MACb,CACA,qBAAO,CACL,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,kBAAkB,CAAC,CACnC,MAAM,CAAE,OACV,CACA,mBAAK,CACH,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,OAAO,CAAE,GAAG,CAAC,IACf,CACA,0BAAY,CACV,UAAU,CAAE,IACd,CACA,yBAAW,CACT,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,KAAK,CAAE,IACT,CACA,sBAAQ,CACN,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,KAAK,CAAE,KACT;AC2EA,yBAAW,CACT,UAAU,CAAE,IACd,CACA,yBAAW,CACT,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,GACpB,CACA,iCAAmB,CACjB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,QACZ,CACA,mBAAK,CACH,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GACjB,CACA,wBAAU,CACR,OAAO,CAAE,IACX,CACA,2BAAa,CACX,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CAAC,CACf,CACA,oBAAM,CACJ,MAAM,CAAE,CAAC,CAAC,GACZ,CACA,qBAAO,CACL,SAAS,CAAE,CAAC,CACZ,YAAY,CAAE,GAChB,CACA,2BAAa,CACX,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACf,CACA,0BAAY,CACV,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CACnB,OAAO,CAAE,IACX,CACA,uBAAS,CACP,WAAW,CAAE,IACf,CACA,0BAAY,CACV,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,CAAC,CACZ,YAAY,CAAE,KAAK,CACnB,KAAK,CAAE,WACT,CACA,2BAAa,CACX,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MACZ,CACA,8BAAe,CACf,+BAAiB,CACf,UAAU,CAAE,IAAI,kBAAkB,CAAC,CACnC,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,MAAM,CAAE,OACV,CACA,8BAAgB,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,aAAa,CAAE,GACjB,CACA,sCAAwB,CACtB,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,KAAK,CAAE,KACT,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,wBAAU,CACR,cAAc,CAAE,MAClB,CACF,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,yBAAW,CACT,MAAM,CAAE,CACV,CACA,iCAAmB,CACjB,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,KACpB,CACA,0BAAY,CACV,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,CACpB,CACF,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,iCAAmB,CACjB,cAAc,CAAE,MAClB,CACA,qBAAM,CACN,oBAAM,CACJ,MAAM,CAAE,CAAC,CAAC,GACZ,CACF,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,0BAAY,CACV,cAAc,CAAE,MAClB,CACA,0BAAY,CACV,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAClB,CACF,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,qBAAM,CACN,oBAAM,CACJ,MAAM,CAAE,CAAC,CAAC,GACZ,CACA,2BAAa,CACX,KAAK,CAAE,GACT,CACF;ACpQA,uBAAS,CACP,MAAM,CAAE,IACV,CACA,sBAAQ,CACN,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CACtC,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IACT;AC3CA,oBAAO,CACL,UAAU,CAAE,EAAE,CACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACf,CACA,yBAAY,CACV,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,WACT,CACA,0BAAa,CACX,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,GACT,CACA,iBAAI,CACF,MAAM,CAAE,WAAW,IAAI,CAAC,CACxB,KAAK,CAAE,MAAM,CACb,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,EAAE,CACT,GAAG,CAAE,EACP,CACA,sBAAS,CACP,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,SAAS,CAAE,KACb,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,oBAAO,CACL,SAAS,CAAE,KACb,CACF;ACuBA,wBAAW,CACT,MAAM,CAAE,IACV,CACA,yBAAY,CACV,MAAM,CAAE,OACV,CACA,sBAAS,CACP,MAAM,CAAE,IACV,CACA,qBAAQ,CACN,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CACtC,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IACT;ACsCA,yBAAY,CACV,WAAW,CAAE,GACf,CACA,qBAAQ,CACN,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACf,CACA,2BAAc,CACZ,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,SAAS,GAAG,CACtB,CACA,0BAAa,CACX,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,KACT,CAEA,8BAAiB,CACf,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,GAClB,CAEA,uBAAU,CACR,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CAEV,KAAK,CAAE,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CACxB,OAAO,CAAE,IACX,CACA,sBAAS,CACP,SAAS,CAAE,CAAC,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,IACnB,CACA,8BAAiB,CACf,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,KACnB,CAEA,8BAAiB,CACf,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,KAAK,CAAE,WAAW,CAClB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MACZ,CACA,wCAA2B,CACzB,UAAU,CAAE,IACd,CAEA,oBAAO,CACL,UAAU,CAAE,IAAI,kBAAkB,CAAC,CACnC,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,OACV,CACA,0BAAa,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,KAAK,CAAE,IACT,CACA,2BAAc,CACZ,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CACd,eAAe,CAAE,MACnB,CACA,qBAAQ,CACN,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,KAAK,CAAE,KAAK,CAAC,UACf,CACA,sBAAS,CACP,MAAM,CAAE,GAAG,CAAC,CAAC,CAAC,IAChB,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,8BAAiB,CACf,KAAK,CAAE,GACT,CACF;AC1JA,uBAAS,CACP,MAAM,CAAE,IACV,CACA,sBAAQ,CACN,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,CACtC,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IACT"
}