{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Footer.svelte",
    "Endpoints.svelte",
    "Growth.svelte",
    "Requests.svelte",
    "RequestsPerHour.svelte",
    "ResponseTimes.svelte",
    "SuccessRate.svelte",
    "UsageTime.svelte",
    "Version.svelte",
    "Welcome.svelte",
    "Activity.svelte",
    "ActivitySuccessRate.svelte",
    "Browser.svelte",
    "Device.svelte",
    "DeviceType.svelte",
    "OperatingSystem.svelte",
    "Card.svelte",
    "TrackNew.svelte",
    "Dashboard.svelte",
    "Delete.svelte",
    "Generate.svelte",
    "Home.svelte",
    "Monitoring.svelte",
    "SignIn.svelte"
  ],
  "sourcesContent": [
    "<div class=\"footer\">\r\n  <a class=\"github-link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/tom-draper/api-analytics\">\r\n    <img class=\"github-logo\" height=\"30px\" src=\"../img/github.png\" alt=\"\" />\r\n  </a>\r\n  <div class=\"logo\">API Analytics</div>\r\n  <img class=\"footer-logo\" src=\"../img/logo.png\" alt=\"\" />\r\n</div>\r\n\r\n<style scoped>\r\n  .logo {\r\n    font-size: 0.9em;\r\n    color: var(--highlight);\r\n  }\r\n  .footer {\r\n    margin: 1.5em 0 3em;\r\n  }\r\n  .github-logo {\r\n    height: 30px;\r\n    filter: invert(0.24);\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nlet methodMap = [\"GET\", \"POST\"];\r\nfunction endpointFreq() {\r\n    let freq = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let endpointID = data[i].path + data[i].status;\r\n        if (!(endpointID in freq)) {\r\n            freq[endpointID] = {\r\n                path: `${methodMap[data[i].method]}  ${data[i].path}`,\r\n                status: data[i].status,\r\n                count: 0,\r\n            };\r\n        }\r\n        freq[endpointID].count++;\r\n    }\r\n    return freq;\r\n}\r\nfunction build() {\r\n    let freq = endpointFreq();\r\n    let freqArr = [];\r\n    maxCount = 0;\r\n    for (let endpointID in freq) {\r\n        freqArr.push(freq[endpointID]);\r\n        if (freq[endpointID].count > maxCount) {\r\n            maxCount = freq[endpointID].count;\r\n        }\r\n    }\r\n    freqArr.sort((a, b) => {\r\n        return b.count - a.count;\r\n    });\r\n    endpoints = freqArr;\r\n    setTimeout(setEndpointLabels, 50);\r\n}\r\nfunction setEndpointLabelVisibility(idx) {\r\n    let endpoint = document.getElementById(`endpoint-label-${idx}`);\r\n    let endpointPath = document.getElementById(`endpoint-path-${idx}`);\r\n    let endpointCount = document.getElementById(`endpoint-count-${idx}`);\r\n    let externalLabel = document.getElementById(`external-label-${idx}`);\r\n    if (endpoint.clientWidth <\r\n        endpointPath.clientWidth + endpointCount.clientWidth) {\r\n        externalLabel.style.display = \"flex\";\r\n        endpointPath.style.display = \"none\";\r\n    }\r\n    if (endpoint.clientWidth < endpointCount.clientWidth) {\r\n        endpointCount.style.display = \"none\";\r\n    }\r\n}\r\nfunction setEndpointLabels() {\r\n    for (let i = 0; i < endpoints.length; i++) {\r\n        setEndpointLabelVisibility(i);\r\n    }\r\n}\r\nlet endpoints;\r\nlet maxCount;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Endpoints</div>\r\n  {#if endpoints != undefined}\r\n    <div class=\"endpoints\">\r\n      {#each endpoints as endpoint, i}\r\n        <div class=\"endpoint-container\">\r\n          <div\r\n            class=\"endpoint\"\r\n            id=\"endpoint-{i}\"\r\n            title={endpoint.count}\r\n            style=\"width: {(endpoint.count / maxCount) *\r\n              100}%; background: {endpoint.status >= 200 &&\r\n            endpoint.status <= 299\r\n              ? 'var(--highlight)'\r\n              : '#e46161'}\"\r\n          >\r\n            <div class=\"endpoint-label\" id=\"endpoint-label-{i}\">\r\n              <div class=\"path\" id=\"endpoint-path-{i}\">\r\n                {endpoint.path}\r\n              </div>\r\n              <div class=\"count\" id=\"endpoint-count-{i}\">{endpoint.count}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"external-label\" id=\"external-label-{i}\">\r\n            <div class=\"external-label-path\">\r\n              {endpoint.path}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    min-height: 361px;\r\n  }\r\n  .endpoints {\r\n    margin: 0.9em 20px 0.6em;\r\n  }\r\n  .endpoint {\r\n    border-radius: 3px;\r\n    margin: 5px 0;\r\n    color: var(--light-background);\r\n    text-align: left;\r\n    position: relative;\r\n    font-size: 0.85em;\r\n  }\r\n  .endpoint-label {\r\n    display: flex;\r\n  }\r\n  .path,\r\n  .count {\r\n    padding: 3px 15px;\r\n  }\r\n  .count {\r\n    margin-left: auto;\r\n  }\r\n  .path {\r\n    flex-grow: 1;\r\n    white-space: nowrap;\r\n  }\r\n  .endpoint-container {\r\n    display: flex;\r\n  }\r\n  .external-label {\r\n    padding: 3px 15px;\r\n    left: 40px;\r\n    top: 0;\r\n    margin: 5px 0;\r\n    color: #707070;\r\n    display: none;\r\n    font-size: 0.85em;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction periodData(data) {\r\n    let period = { requests: 0, success: 0, responseTime: 0 };\r\n    for (let i = 0; i < data.length; i++) {\r\n        // @ts-ignore\r\n        period.requests++;\r\n        if (data[i].status >= 200 && data[i].status <= 299) {\r\n            period.success++;\r\n        }\r\n        period.responseTime += data[i].response_time;\r\n    }\r\n    return period;\r\n}\r\nfunction buildWeek() {\r\n    let thisPeriod = periodData(data);\r\n    let lastPeriod = periodData(prevData);\r\n    let requestsChange = ((thisPeriod.requests + 1) / (lastPeriod.requests + 1)) * 100 - 100;\r\n    let successChange = (((thisPeriod.success + 1) / (thisPeriod.requests + 1) + 1) /\r\n        ((lastPeriod.success + 1) / (lastPeriod.requests + 1) + 1)) *\r\n        100 -\r\n        100;\r\n    let responseTimeChange = (((thisPeriod.responseTime + 1) / (thisPeriod.requests + 1) + 1) /\r\n        ((lastPeriod.responseTime + 1) / (lastPeriod.requests + 1) + 1)) *\r\n        100 -\r\n        100;\r\n    change = {\r\n        requests: requestsChange,\r\n        success: successChange,\r\n        responseTime: responseTimeChange,\r\n    };\r\n}\r\nlet change;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && buildWeek();\r\nexport let data, prevData;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Growth</div>\r\n  <div class=\"values\">\r\n    {#if change != undefined}\r\n      <div class=\"tile\">\r\n        <div class=\"tile-value\">\r\n          <span\r\n            style=\"color: {change.requests > 0\r\n              ? 'var(--highlight)'\r\n              : 'var(--red)'}\"\r\n            >{change.requests > 0 ? \"+\" : \"\"}{change.requests.toFixed(1)}%</span\r\n          >\r\n        </div>\r\n        <div class=\"tile-label\">Requests</div>\r\n      </div>\r\n      <!-- {#if requestsChange != undefined}\r\n        <div class=\"tile\">\r\n          <div class=\"tile-value\">\r\n            <span\r\n              style=\"color: {requestsChange > 0\r\n                ? 'var(--highlight)'\r\n                : 'var(--red)'}\">+{requestsChange}%</span\r\n            >\r\n          </div>\r\n          <div class=\"tile-label\">Users</div>\r\n        </div>\r\n    {/if} -->\r\n      <div class=\"tile\">\r\n        <div class=\"tile-value\">\r\n          <span\r\n            style=\"color: {change.success > 0\r\n              ? 'var(--highlight)'\r\n              : 'var(--red)'}\"\r\n            >{change.success > 0 ? \"+\" : \"\"}{change.success.toFixed(1)}%</span\r\n          >\r\n        </div>\r\n        <div class=\"tile-label\">Success rate</div>\r\n      </div>\r\n      <div class=\"tile\">\r\n        <div class=\"tile-value\">\r\n          <span\r\n            style=\"color: {change.responseTime < 0\r\n              ? 'var(--highlight)'\r\n              : 'var(--red)'}\"\r\n            >{change.responseTime > 0 ? \"+\" : \"\"}{change.responseTime.toFixed(\r\n              1\r\n            )}%</span\r\n          >\r\n        </div>\r\n        <div class=\"tile-label\">Response time</div>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    /* width: 100%; */\r\n    flex: 1.2;\r\n    margin: 2em 1em 2em 0;\r\n  }\r\n  .values {\r\n    margin: 30px 30px;\r\n    display: flex;\r\n  }\r\n  .tile-value {\r\n    font-size: 1.4em;\r\n    margin-bottom: 5px;\r\n  }\r\n  .tile-label {\r\n    font-size: 0.8em;\r\n  }\r\n  .tile {\r\n    background: #282828;\r\n    /* border: 1px solid var(--highlight); */\r\n    flex: 1;\r\n    padding: 30px 10px;\r\n    border-radius: 6px;\r\n    margin: 10px;\r\n  }\r\n  @media screen and (max-width: 1580px) {\r\n    .card {\r\n      width: 100%;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1580px) {\r\n    .card {\r\n      margin: 2em 0 2em;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction setPercentageChange() {\r\n    if (prevData.length == 0) {\r\n        percentageChange = null;\r\n    }\r\n    else {\r\n        percentageChange = (data.length / prevData.length) * 100 - 100;\r\n    }\r\n}\r\nlet percentageChange;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && setPercentageChange();\r\nexport let data, prevData;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Total\">\r\n  {#if percentageChange != null}\r\n    <div\r\n      class=\"percentage-change\"\r\n      class:positive={percentageChange > 0}\r\n      class:negative={percentageChange < 0}\r\n    >\r\n      ({percentageChange > 0 ? \"+\" : \"\"}{percentageChange.toFixed(1)}%)\r\n    </div>\r\n  {/if}\r\n  <div class=\"card-title\">Requests</div>\r\n  <div class=\"value\">{data.length.toLocaleString()}</div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: calc(200px - 1em);\r\n    margin: 0 1em 0 2em;\r\n    position: relative;\r\n  }\r\n  .value {\r\n    margin: 20px 0;\r\n    font-size: 1.8em;\r\n    font-weight: 600;\r\n  }\r\n  .percentage-change {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n    font-size: 0.8em;\r\n  }\r\n  .positive {\r\n    color: var(--highlight);\r\n  }\r\n  .negative {\r\n    color: rgb(228, 97, 97);\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport periodToDays from \"../../lib/period\";\r\nfunction build() {\r\n    let totalRequests = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n        totalRequests++;\r\n    }\r\n    if (totalRequests > 0) {\r\n        let days = periodToDays(period);\r\n        if (days != null) {\r\n            requestsPerHour = (totalRequests / (24 * days)).toFixed(2);\r\n        }\r\n    }\r\n    else {\r\n        requestsPerHour = \"0\";\r\n    }\r\n}\r\nlet mounted = false;\r\nlet requestsPerHour;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data, period;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Last week\">\r\n  <div class=\"card-title\">\r\n    Requests <span class=\"per-hour\">/ hour</span>\r\n  </div>\r\n  {#if requestsPerHour != undefined}\r\n    <div class=\"value\">{requestsPerHour}</div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: calc(200px - 1em);\r\n    margin: 0 2em 0 1em;\r\n  }\r\n  .value {\r\n    margin: 20px 0;\r\n    font-size: 1.8em;\r\n    font-weight: 600;\r\n  }\r\n  .per-hour {\r\n    color: var(--dim-text);\r\n    font-size: 0.8em;\r\n    margin-left: 4px;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\n// Median and quartiles from StackOverflow answer\r\n// https://stackoverflow.com/a/55297611/8851732\r\nconst asc = (arr) => arr.sort((a, b) => a - b);\r\nconst sum = (arr) => arr.reduce((a, b) => a + b, 0);\r\nconst mean = (arr) => sum(arr) / arr.length;\r\n// sample standard deviation\r\nfunction std(arr) {\r\n    const mu = mean(arr);\r\n    const diffArr = arr.map((a) => (a - mu) ** 2);\r\n    return Math.sqrt(sum(diffArr) / (arr.length - 1));\r\n}\r\nfunction quantile(arr, q) {\r\n    const sorted = asc(arr);\r\n    const pos = (sorted.length - 1) * q;\r\n    const base = Math.floor(pos);\r\n    const rest = pos - base;\r\n    if (sorted[base + 1] != undefined) {\r\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\r\n    }\r\n    else if (sorted[base] != undefined) {\r\n        return sorted[base];\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nfunction markerPosition(x) {\r\n    let position = Math.log10(x) * 125 - 300;\r\n    if (position < 0) {\r\n        return 0;\r\n    }\r\n    else if (position > 100) {\r\n        return 100;\r\n    }\r\n    else {\r\n        return position;\r\n    }\r\n}\r\nfunction setMarkerPosition(median) {\r\n    let position = markerPosition(median);\r\n    marker.style.left = `${position}%`;\r\n}\r\nfunction build() {\r\n    let responseTimes = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n        responseTimes.push(data[i].response_time);\r\n    }\r\n    LQ = quantile(responseTimes, 0.25);\r\n    median = quantile(responseTimes, 0.5);\r\n    UQ = quantile(responseTimes, 0.75);\r\n    setMarkerPosition(median);\r\n}\r\nlet median;\r\nlet LQ;\r\nlet UQ;\r\nlet marker;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">\r\n    Response times <span class=\"milliseconds\">(ms)</span>\r\n  </div>\r\n  <div class=\"values\">\r\n    <div class=\"value lower-quartile\">{LQ}</div>\r\n    <div class=\"value median\">{median}</div>\r\n    <div class=\"value upper-quartile\">{UQ}</div>\r\n  </div>\r\n  <div class=\"labels\">\r\n    <div class=\"label\">25%</div>\r\n    <div class=\"label\">Median</div>\r\n    <div class=\"label\">75%</div>\r\n  </div>\r\n  <div class=\"bar\">\r\n    <div class=\"bar-green\" />\r\n    <div class=\"bar-yellow\" />\r\n    <div class=\"bar-red\" />\r\n    <div class=\"marker\" bind:this={marker} />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .values {\r\n    display: flex;\r\n    color: var(--highlight);\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n  }\r\n  .values,\r\n  .labels {\r\n    margin: 0 0.5rem;\r\n  }\r\n  .value {\r\n    flex: 1;\r\n    font-size: 1.1em;\r\n    padding: 20px 20px 4px;\r\n  }\r\n  .labels {\r\n    display: flex;\r\n    font-size: 0.8em;\r\n    color: var(--dim-text);\r\n  }\r\n  .label {\r\n    flex: 1;\r\n  }\r\n\r\n  .milliseconds {\r\n    color: var(--dim-text);\r\n    font-size: 0.8em;\r\n    margin-left: 4px;\r\n  }\r\n\r\n  .median {\r\n    font-size: 1em;\r\n  }\r\n  .upper-quartile,\r\n  .lower-quartile {\r\n    font-size: 1em;\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  .bar {\r\n    padding: 20px 0 20px;\r\n    display: flex;\r\n    height: 30px;\r\n    width: 85%;\r\n    margin: auto;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  .bar-green {\r\n    background: var(--highlight);\r\n    width: 75%;\r\n    height: 10px;\r\n    border-radius: 2px 0 0 2px;\r\n  }\r\n  .bar-yellow {\r\n    width: 15%;\r\n    height: 10px;\r\n    background: rgb(235, 235, 129);\r\n  }\r\n  .bar-red {\r\n    width: 20%;\r\n    height: 10px;\r\n    border-radius: 0 2px 2px 0;\r\n    background: rgb(228, 97, 97);\r\n  }\r\n  .marker {\r\n    position: absolute;\r\n    height: 30px;\r\n    width: 5px;\r\n    background: white;\r\n    border-radius: 2px;\r\n    left: 0; /* Changed during runtime to reflect median */\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction build() {\r\n    let totalRequests = 0;\r\n    let successfulRequests = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].status >= 200 && data[i].status <= 299) {\r\n            successfulRequests++;\r\n        }\r\n        totalRequests++;\r\n    }\r\n    if (totalRequests > 0) {\r\n        successRate = (successfulRequests / totalRequests) * 100;\r\n    }\r\n    else {\r\n        successRate = 100;\r\n    }\r\n}\r\nlet mounted = false;\r\nlet successRate;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && build();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Last week\">\r\n  <div class=\"card-title\">Success rate</div>\r\n  {#if successRate != undefined}\r\n    <div\r\n      class=\"value\"\r\n      style=\"color: {successRate <= 75 ? 'var(--red)' : ''}{successRate > 75 &&\r\n      successRate < 90\r\n        ? 'var(--yellow)'\r\n        : ''}{successRate >= 90 ? 'var(--highlight)' : ''}\"\r\n    >\r\n      {successRate.toFixed(1)}%\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: calc(200px - 1em);\r\n    margin: 0 0 2em 1em;\r\n  }\r\n\r\n  .value {\r\n    margin: 20px 0;\r\n    font-size: 1.8em;\r\n    font-weight: 600;\r\n    color: var(--yellow);\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction defaultLayout() {\r\n    return {\r\n        font: { size: 12 },\r\n        paper_bgcolor: \"transparent\",\r\n        height: 500,\r\n        margin: { r: 35, l: 70, t: 20, b: 50, pad: 0 },\r\n        polar: {\r\n            bargap: 0,\r\n            bgcolor: \"transparent\",\r\n            angularaxis: { direction: \"clockwise\", showgrid: false },\r\n            radialaxis: { gridcolor: \"#303030\" },\r\n        },\r\n    };\r\n}\r\nfunction bars() {\r\n    let responseTimes = Array(24).fill(0);\r\n    for (let i = 0; i < data.length; i++) {\r\n        let date = new Date(data[i].created_at);\r\n        let time = date.getHours();\r\n        // @ts-ignore\r\n        responseTimes[time]++;\r\n    }\r\n    let requestFreqArr = [];\r\n    for (let i = 0; i < 24; i++) {\r\n        let point = [i, responseTimes[i]];\r\n        requestFreqArr.push(point);\r\n    }\r\n    requestFreqArr.sort((a, b) => {\r\n        return a[0] - b[0];\r\n    });\r\n    let dates = [];\r\n    let requests = [];\r\n    for (let i = 0; i < requestFreqArr.length; i++) {\r\n        dates.push(requestFreqArr[i][0].toString() + \":00\");\r\n        requests.push(requestFreqArr[i][1]);\r\n    }\r\n    return [\r\n        {\r\n            r: requests,\r\n            theta: dates,\r\n            marker: { color: \"#3fcf8e\" },\r\n            type: \"barpolar\",\r\n            hovertemplate: `<b>%{r}</b> requests at <b>%{theta}</b><extra></extra>`,\r\n        },\r\n    ];\r\n}\r\nfunction buildPlotData() {\r\n    return {\r\n        data: bars(),\r\n        layout: defaultLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && genPlot();\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Usage time</div>\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction setVersions() {\r\n    let v = new Set();\r\n    for (let i = 0; i < data.length; i++) {\r\n        let match = data[i].path.match(/[^a-z0-9](v\\d)[^a-z0-9]/i);\r\n        if (match) {\r\n            v.add(match[1]);\r\n        }\r\n    }\r\n    versions = v;\r\n    if (versions.size > 1) {\r\n        setTimeout(genPlot, 1000);\r\n    }\r\n}\r\nfunction versionPlotLayout() {\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 180,\r\n        yaxis: {\r\n            title: { text: \"Requests\" },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nlet colors = [\r\n    \"#3FCF8E\",\r\n    \"#5784BA\",\r\n    \"#EBEB81\",\r\n    \"#218B82\",\r\n    \"#FFD6A5\",\r\n    \"#F9968B\",\r\n    \"#B1A2CA\",\r\n    \"#E46161\", // Red\r\n];\r\nfunction pieChart() {\r\n    let versionCount = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let match = data[i].path.match(/[^a-z0-9](v\\d)[^a-z0-9]/i);\r\n        if (match) {\r\n            let version = match[0];\r\n            if (!(version in versionCount)) {\r\n                versionCount[version] = 0;\r\n            }\r\n            versionCount[version]++;\r\n        }\r\n    }\r\n    let versions = [];\r\n    let count = [];\r\n    for (let version in versionCount) {\r\n        versions.push(version);\r\n        count.push(versionCount[version]);\r\n    }\r\n    return [\r\n        {\r\n            values: count,\r\n            labels: versions,\r\n            type: \"pie\",\r\n            marker: {\r\n                colors: colors,\r\n            },\r\n        },\r\n    ];\r\n}\r\nfunction versionPlotData() {\r\n    return {\r\n        data: pieChart(),\r\n        layout: versionPlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = versionPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet versions;\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && setVersions();\r\nexport let data;\r\n</script>\r\n\r\n{#if versions != undefined && versions.size > 1}\r\n  <div class=\"card\">\r\n    <div class=\"card-title\">Version</div>\r\n    <div id=\"plotly\">\r\n      <div id=\"plotDiv\" bind:this={plotDiv}>\r\n        <!-- Plotly chart will be drawn inside this DIV -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .card {\r\n    margin: 2em 0 2em 2em;\r\n    padding-bottom: 1em;\r\n    flex: 1;\r\n  }\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n\r\n</style>\r\n",
    "<div class=\"card\" title=\"API Analytics\">\r\n  <img src=\"../img/logo.png\" alt=\"\" />\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: calc(200px - 1em);\r\n    margin: 0 1em 2em 2em;\r\n    background: transparent;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  img {\r\n    width: 25px;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import ActivityRequests from \"./ActivityRequests.svelte\";\r\nimport ActivityResponseTime from \"./ActivityResponseTime.svelte\";\r\nimport ActivitySuccessRate from \"./ActivitySuccessRate.svelte\";\r\nexport let data, period;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Activity</div>\r\n  <ActivityRequests {data} {period} />\r\n  <ActivityResponseTime {data} {period} />\r\n  <ActivitySuccessRate {data} {period} />\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    margin: 0;\r\n    width: 100%;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport periodToDays from \"../../../lib/period\";\r\nfunction daysAgo(date) {\r\n    let now = new Date();\r\n    return Math.floor((now.getTime() - date.getTime()) / (24 * 60 * 60 * 1000));\r\n}\r\nfunction setSuccessRate() {\r\n    let success = {};\r\n    let minDate = Number.POSITIVE_INFINITY;\r\n    for (let i = 0; i < data.length; i++) {\r\n        let date = new Date(data[i].created_at);\r\n        date.setHours(0, 0, 0, 0);\r\n        // @ts-ignore\r\n        if (!(date in success)) {\r\n            // @ts-ignore\r\n            success[date] = { total: 0, successful: 0 };\r\n        }\r\n        if (data[i].status >= 200 && data[i].status <= 299) {\r\n            // @ts-ignore\r\n            success[date].successful++;\r\n        }\r\n        // @ts-ignore\r\n        success[date].total++;\r\n        if (date < minDate) {\r\n            minDate = date;\r\n        }\r\n    }\r\n    let days = periodToDays(period);\r\n    if (days == null) {\r\n        days = daysAgo(minDate);\r\n    }\r\n    let successArr = new Array(days).fill(-0.1); // -0.1 -> 0\r\n    for (let date in success) {\r\n        let idx = daysAgo(new Date(date));\r\n        successArr[successArr.length - 1 - idx] =\r\n            success[date].successful / success[date].total;\r\n    }\r\n    successRate = successArr;\r\n}\r\nfunction build() {\r\n    setSuccessRate();\r\n}\r\nlet successRate;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: successRate;\r\n$: data && mounted && build();\r\nexport let data, period;\r\n</script>\r\n\r\n<div class=\"success-rate-container\">\r\n  {#if successRate != undefined}\r\n    <div class=\"success-rate-title\">Success rate</div>\r\n    <div class=\"errors\">\r\n      {#each successRate as value}\r\n        <div\r\n          class=\"error level-{Math.floor(value * 10) + 1}\"\r\n          title={value >= 0 ? (value * 100).toFixed(1) + \"%\" : \"No requests\"}\r\n        />\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .errors {\r\n    display: flex;\r\n    margin-top: 8px;\r\n    margin: 0 10px 0 40px;\r\n  }\r\n  .error {\r\n    background: var(--highlight);\r\n    flex: 1;\r\n    height: 40px;\r\n    margin: 0 0.1%;\r\n    border-radius: 1px;\r\n  }\r\n  .success-rate-container {\r\n    text-align: left;\r\n    font-size: 0.9em;\r\n    color: #707070;\r\n  }\r\n  .success-rate-title {\r\n    margin: 0 0 4px 43px;\r\n  }\r\n  .success-rate-container {\r\n    margin: 1.5em 2.5em 2em;\r\n  }\r\n  .level-0 {\r\n    background: rgb(40, 40, 40);\r\n  }\r\n  .level-1 {\r\n    background: #e46161;\r\n  }\r\n  .level-2 {\r\n    background: #f18359;\r\n  }\r\n  .level-3 {\r\n    background: #f5a65a;\r\n  }\r\n  .level-4 {\r\n    background: #f3c966;\r\n  }\r\n  .level-5 {\r\n    background: #ebeb81;\r\n  }\r\n  .level-6 {\r\n    background: #c7e57d;\r\n  }\r\n  .level-7 {\r\n    background: #a1df7e;\r\n  }\r\n  .level-8 {\r\n    background: #77d884;\r\n  }\r\n  .level-9 {\r\n    background: #3fcf8e;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction getBrowser(userAgent) {\r\n    if (userAgent.match(/Seamonkey\\//)) {\r\n        return \"Seamonkey\";\r\n    }\r\n    else if (userAgent.match(/Firefox\\//)) {\r\n        return \"Firefox\";\r\n    }\r\n    else if (userAgent.match(/Chrome\\//)) {\r\n        return \"Chrome\";\r\n    }\r\n    else if (userAgent.match(/Chromium\\//)) {\r\n        return \"Chromium\";\r\n    }\r\n    else if (userAgent.match(/Safari\\//)) {\r\n        return \"Safari\";\r\n    }\r\n    else if (userAgent.match(/Edg\\//)) {\r\n        return \"Edge\";\r\n    }\r\n    else if (userAgent.match(/OPR\\//) || userAgent.match(/Opera\\//)) {\r\n        return \"Opera\";\r\n    }\r\n    else if (userAgent.match(/; MSIE /) || userAgent.match(/Trident\\//)) {\r\n        return \"Internet Explorer\";\r\n    }\r\n    else if (userAgent.match(/curl\\//)) {\r\n        return \"Curl\";\r\n    }\r\n    else if (userAgent.match(/PostmanRuntime\\//)) {\r\n        return \"Postman\";\r\n    }\r\n    else if (userAgent.match(/insomnia\\//)) {\r\n        return \"Insomnia\";\r\n    }\r\n    else {\r\n        return \"Other\";\r\n    }\r\n}\r\nfunction browserPlotLayout() {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 30);\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 35, l: 70, t: 20, b: 20, pad: 0 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 180,\r\n        width: 411,\r\n        yaxis: {\r\n            title: { text: \"Requests\" },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nlet colors = [\r\n    \"#3FCF8E\",\r\n    \"#5784BA\",\r\n    \"#EBEB81\",\r\n    \"#218B82\",\r\n    \"#FFD6A5\",\r\n    \"#F9968B\",\r\n    \"#B1A2CA\",\r\n    \"#E46161\", // Red\r\n];\r\nfunction pieChart() {\r\n    let browserCount = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let browser = getBrowser(data[i].user_agent);\r\n        if (!(browser in browserCount)) {\r\n            browserCount[browser] = 0;\r\n        }\r\n        browserCount[browser]++;\r\n    }\r\n    let browsers = [];\r\n    let count = [];\r\n    for (let browser in browserCount) {\r\n        browsers.push(browser);\r\n        count.push(browserCount[browser]);\r\n    }\r\n    return [\r\n        {\r\n            values: count,\r\n            labels: browsers,\r\n            type: \"pie\",\r\n            marker: {\r\n                colors: colors,\r\n            },\r\n        },\r\n    ];\r\n}\r\nfunction browserPlotData() {\r\n    return {\r\n        data: pieChart(),\r\n        layout: browserPlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = browserPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && genPlot();\r\nexport let data;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import Browser from \"./Browser.svelte\";\r\nimport OperatingSystem from \"./OperatingSystem.svelte\";\r\nimport DeviceType from \"./DeviceType.svelte\";\r\nfunction setBtn(target) {\r\n    activeBtn = target;\r\n    // Resize window to trigger new plot resize to match current card size\r\n    window.dispatchEvent(new Event(\"resize\"));\r\n}\r\nlet activeBtn = \"os\";\r\nexport let data;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Last week\">\r\n  <div class=\"card-title\">\r\n    Device\r\n\r\n    <div class=\"toggle\">\r\n      <button\r\n        class={activeBtn == \"os\" ? \"active\" : \"\"}\r\n        on:click={() => {\r\n          setBtn(\"os\");\r\n        }}>OS</button\r\n      >\r\n      <button\r\n        class={activeBtn == \"browser\" ? \"active\" : \"\"}\r\n        on:click={() => {\r\n          setBtn(\"browser\");\r\n        }}>Browser</button\r\n      >\r\n      <button\r\n        class={activeBtn == \"device\" ? \"active\" : \"\"}\r\n        on:click={() => {\r\n          setBtn(\"device\");\r\n        }}>Device</button\r\n      >\r\n    </div>\r\n  </div>\r\n  <div class=\"os\" style={activeBtn == \"os\" ? \"display: initial\" : \"\"}>\r\n    <OperatingSystem {data} />\r\n  </div>\r\n  <div class=\"browser\" style={activeBtn == \"browser\" ? \"display: initial\" : \"\"}>\r\n    <Browser {data} />\r\n  </div>\r\n  <div class=\"device\" style={activeBtn == \"device\" ? \"display: initial\" : \"\"}>\r\n    <DeviceType {data} />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    margin: 2em 0 2em 1em;\r\n    padding-bottom: 1em;\r\n    width: 420px;\r\n  }\r\n  .card-title {\r\n    display: flex;\r\n  }\r\n  .toggle {\r\n    margin-left: auto;\r\n  }\r\n  .active {\r\n    background: var(--highlight);\r\n  }\r\n  .os,\r\n  .browser,\r\n  .device {\r\n    display: none;\r\n  }\r\n  button {\r\n    border: none;\r\n    border-radius: 4px;\r\n    background: rgb(68, 68, 68);\r\n    cursor: pointer;\r\n    padding: 2px 6px;\r\n    margin-left: 5px;\r\n  }\r\n  @media screen and (max-width: 1580px) {\r\n    .card {\r\n      margin: 0 0 2em;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction getDevice(userAgent) {\r\n    if (userAgent.match(/iPhone/)) {\r\n        return \"iPhone\";\r\n    }\r\n    else if (userAgent.match(/Android/)) {\r\n        return \"Android\";\r\n    }\r\n    else if (userAgent.match(/Tizen\\//)) {\r\n        return \"Samsung\";\r\n    }\r\n    else {\r\n        return \"Other\";\r\n    }\r\n}\r\nfunction devicePlotLayout() {\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 180,\r\n        width: 411,\r\n        yaxis: {\r\n            title: { text: \"Requests\" },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nlet colors = [\r\n    \"#3FCF8E\",\r\n    \"#E46161\",\r\n    \"#EBEB81\", // Yellow\r\n];\r\nfunction pieChart() {\r\n    let deviceCount = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let browser = getDevice(data[i].user_agent);\r\n        if (!(browser in deviceCount)) {\r\n            deviceCount[browser] = 0;\r\n        }\r\n        deviceCount[browser]++;\r\n    }\r\n    let device = [];\r\n    let count = [];\r\n    for (let browser in deviceCount) {\r\n        device.push(browser);\r\n        count.push(deviceCount[browser]);\r\n    }\r\n    return [\r\n        {\r\n            values: count,\r\n            labels: device,\r\n            type: \"pie\",\r\n            marker: {\r\n                colors: colors,\r\n            },\r\n        },\r\n    ];\r\n}\r\nfunction devicePlotData() {\r\n    return {\r\n        data: pieChart(),\r\n        layout: devicePlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = devicePlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && genPlot();\r\nexport let data;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nfunction getOS(userAgent) {\r\n    if (userAgent.match(/Win16/)) {\r\n        return \"Windows 3.11\";\r\n    }\r\n    else if (userAgent.match(/(Windows 95)|(Win95)|(Windows_95)/)) {\r\n        return \"Windows 95\";\r\n    }\r\n    else if (userAgent.match(/(Windows 98)|(Win98)/)) {\r\n        return \"Windows 98\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 5.0)|(Windows 2000)/)) {\r\n        return \"Windows 2000\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 5.1)|(Windows XP)/)) {\r\n        return \"Windows XP\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 5.2)/)) {\r\n        return \"Windows Server 2003\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 6.0)/)) {\r\n        return \"Windows Vista\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 6.1)/)) {\r\n        return \"Windows 7\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 6.2)/)) {\r\n        return \"Windows 8\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 10.0)/)) {\r\n        return \"Windows 10\";\r\n    }\r\n    else if (userAgent.match(/(Windows NT 4.0)|(WinNT4.0)|(WinNT)|(Windows NT)/)) {\r\n        return \"Windows NT 4.0\";\r\n    }\r\n    else if (userAgent.match(/Windows ME/)) {\r\n        return \"Windows ME\";\r\n    }\r\n    else if (userAgent.match(/OpenBSD/)) {\r\n        return \"OpenBSE\";\r\n    }\r\n    else if (userAgent.match(/SunOS/)) {\r\n        return \"SunOS\";\r\n    }\r\n    else if (userAgent.match(/(Linux)|(X11)/)) {\r\n        return \"Linux\";\r\n    }\r\n    else if (userAgent.match(/(Mac_PowerPC)|(Macintosh)/)) {\r\n        return \"MacOS\";\r\n    }\r\n    else if (userAgent.match(/QNX/)) {\r\n        return \"QNX\";\r\n    }\r\n    else if (userAgent.match(/BeOS/)) {\r\n        return \"BeOS\";\r\n    }\r\n    else if (userAgent.match(/OS\\/2/)) {\r\n        return \"OS/2\";\r\n    }\r\n    else if (userAgent.match(/(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/)) {\r\n        return \"Search Bot\";\r\n    }\r\n    else {\r\n        return \"Unknown\";\r\n    }\r\n}\r\nfunction osPlotLayout() {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 30);\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 35, l: 70, t: 20, b: 20, pad: 0 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"transparent\",\r\n        paper_bgcolor: \"transparent\",\r\n        height: 180,\r\n        width: 411,\r\n        yaxis: {\r\n            title: { text: \"Requests\" },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            fixedrange: true,\r\n        },\r\n        xaxis: {\r\n            visible: false,\r\n        },\r\n        dragmode: false,\r\n    };\r\n}\r\nlet colors = [\r\n    \"#3FCF8E\",\r\n    \"#5784BA\",\r\n    \"#EBEB81\",\r\n    \"#218B82\",\r\n    \"#FFD6A5\",\r\n    \"#F9968B\",\r\n    \"#B1A2CA\",\r\n    \"#E46161\", // Red\r\n];\r\nfunction pieChart() {\r\n    let osCount = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let os = getOS(data[i].user_agent);\r\n        if (!(os in osCount)) {\r\n            osCount[os] = 0;\r\n        }\r\n        osCount[os]++;\r\n    }\r\n    let os = [];\r\n    let count = [];\r\n    for (let browser in osCount) {\r\n        os.push(browser);\r\n        count.push(osCount[browser]);\r\n    }\r\n    return [\r\n        {\r\n            values: count,\r\n            labels: os,\r\n            type: \"pie\",\r\n            marker: {\r\n                colors: colors,\r\n            },\r\n        },\r\n    ];\r\n}\r\nfunction osPlotData() {\r\n    return {\r\n        data: pieChart(),\r\n        layout: osPlotLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n}\r\nfunction genPlot() {\r\n    let plotData = osPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\r\n}\r\nlet plotDiv;\r\nlet mounted = false;\r\nonMount(() => {\r\n    mounted = true;\r\n});\r\n$: data && mounted && genPlot();\r\nexport let data;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport ResponseTime from \"./ResponseTime.svelte\";\r\nfunction setUptime() {\r\n    let success = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < measurements.length; i++) {\r\n        if (measurements[i].status == \"success\" ||\r\n            measurements[i].status == \"delay\") {\r\n            success++;\r\n        }\r\n        total++;\r\n    }\r\n    let per = (success / total) * 100;\r\n    if (per == 100) {\r\n        uptime = \"100\";\r\n    }\r\n    else {\r\n        uptime = per.toFixed(1);\r\n    }\r\n}\r\nfunction periodToMarkers(period) {\r\n    if (period == \"24h\") {\r\n        return 24 * 2;\r\n    }\r\n    else if (period == \"7d\") {\r\n        return 12 * 7;\r\n    }\r\n    else if (period == \"30d\") {\r\n        return 30 * 4;\r\n    }\r\n    else if (period == \"60d\") {\r\n        return 60 * 2;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nfunction setMeasurements() {\r\n    let markers = periodToMarkers(period);\r\n    measurements = Array(markers).fill({ status: null, response_time: 0 });\r\n    let start = markers - data.measurements.length;\r\n    for (let i = 0; i < data.measurements.length; i++) {\r\n        measurements[i + start] = data.measurements[i];\r\n    }\r\n}\r\nfunction setError() {\r\n    error = measurements[measurements.length - 1].status == \"error\";\r\n    anyError = anyError || error;\r\n}\r\nfunction build() {\r\n    setMeasurements();\r\n    setError();\r\n    setUptime();\r\n}\r\nlet uptime = \"\";\r\nlet error = false;\r\nlet measurements;\r\nonMount(() => {\r\n    build();\r\n});\r\n$: period && build();\r\nexport let data, period, anyError;\r\n</script>\r\n\r\n<div class=\"card\" class:card-error={error}>\r\n  <div class=\"card-text\">\r\n    <div class=\"card-text-left\">\r\n      <div class=\"card-status\">\r\n        {#if error}\r\n          <img src=\"/img/smallcross.png\" alt=\"\" />\r\n        {:else}\r\n          <img src=\"/img/smalltick.png\" alt=\"\" />\r\n        {/if}\r\n      </div>\r\n      <div class=\"endpoint\">{data.name}</div>\r\n    </div>\r\n    <div class=\"card-text-right\">\r\n      <div class=\"uptime\">Uptime: {uptime}%</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"measurements\">\r\n    {#each measurements as measurement}\r\n      <div class=\"measurement {measurement.status}\" />\r\n    {/each}\r\n  </div>\r\n  <div class=\"response-time\">\r\n    <ResponseTime data={measurements} {period} />\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: min(100%, 1000px);\r\n    border: 1px solid #2e2e2e;\r\n    margin: 2.2em auto;\r\n  }\r\n  .card-error {\r\n    box-shadow: rgba(228, 98, 98, 0.5) 0px 15px 110px 0px,\r\n      rgba(0, 0, 0, 0.4) 0px 30px 60px -30px;\r\n    border: 2px solid rgba(228, 98, 98, 1);\r\n  }\r\n  .card-text {\r\n    display: flex;\r\n    margin: 2em 2em 0;\r\n    font-size: 0.9em;\r\n  }\r\n  .card-text-left {\r\n    flex-grow: 1;\r\n    display: flex;\r\n  }\r\n  .endpoint {\r\n    margin-left: 10px;\r\n    letter-spacing: 0.01em;\r\n  }\r\n  .measurements {\r\n    display: flex;\r\n    padding: 1em 2em 2em;\r\n  }\r\n  .measurement {\r\n    margin: 0 0.1%;\r\n    flex: 1;\r\n    height: 3em;\r\n    border-radius: 1px;\r\n    background: var(--highlight);\r\n    background: rgb(40, 40, 40);\r\n  }\r\n  .success {\r\n    background: var(--highlight);\r\n  }\r\n  .delayed {\r\n    background: rgb(199, 229, 125);\r\n  }\r\n  .error {\r\n    background: rgb(228, 98, 98);\r\n  }\r\n  .null {\r\n    color: #707070;\r\n  }\r\n  .uptime {\r\n    color: #707070;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\"></script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-text\">\r\n    <div class=\"url\">\r\n      <div class=\"url-text\">URL</div>\r\n      <input type=\"text\" />\r\n      <button>Add</button>\r\n    </div>\r\n    <div class=\"detail\">\r\n      Endpoints are pinged by our servers every 30 mins and response <b\r\n        >status</b\r\n      >\r\n      and response <b>time</b> are logged.\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .card {\r\n    width: min(100%, 1000px);\r\n    border: 1px solid #2e2e2e;\r\n    margin: 2.2em auto;\r\n  }\r\n  .card-text {\r\n    margin: 2em 2em 1.9em;\r\n  }\r\n  input {\r\n    background: #1c1c1c;\r\n    border-radius: 4px;\r\n    border: none;\r\n    margin: 0 10px;\r\n    width: 100%;\r\n    padding: 0 5px;\r\n    color: white;\r\n  }\r\n  .url {\r\n    display: flex;\r\n  }\r\n  .url-text {\r\n    margin: auto;\r\n  }\r\n  .detail {\r\n    margin-top: 30px;\r\n    color: #707070;\r\n    font-weight: 500;\r\n    font-size: 0.9em;\r\n  }\r\n  button {\r\n    background: var(--highlight);\r\n    padding: 5px 20px;\r\n    border-radius: 4px;\r\n    border: none;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport Requests from \"../components/dashboard/Requests.svelte\";\r\nimport Welcome from \"../components/dashboard/Welcome.svelte\";\r\nimport RequestsPerHour from \"../components/dashboard/RequestsPerHour.svelte\";\r\nimport ResponseTimes from \"../components/dashboard/ResponseTimes.svelte\";\r\nimport Endpoints from \"../components/dashboard/Endpoints.svelte\";\r\nimport Footer from \"../components/Footer.svelte\";\r\nimport SuccessRate from \"../components/dashboard/SuccessRate.svelte\";\r\nimport Activity from \"../components/dashboard/activity/Activity.svelte\";\r\nimport Version from \"../components/dashboard/Version.svelte\";\r\nimport UsageTime from \"../components/dashboard/UsageTime.svelte\";\r\nimport Growth from \"../components/dashboard/Growth.svelte\";\r\nimport Device from \"../components/dashboard/device/Device.svelte\";\r\nimport periodToDays from \"../lib/period\";\r\nimport genDemoData from \"../lib/demo\";\r\nfunction formatUUID(userID) {\r\n    return `${userID.slice(0, 8)}-${userID.slice(8, 12)}-${userID.slice(12, 16)}-${userID.slice(16, 20)}-${userID.slice(20)}`;\r\n}\r\nfunction inPeriod(date, days) {\r\n    let periodAgo = new Date();\r\n    periodAgo.setDate(periodAgo.getDate() - days);\r\n    return date > periodAgo;\r\n}\r\nfunction allTimePeriod(date) {\r\n    return true;\r\n}\r\nfunction setPeriodData() {\r\n    let days = periodToDays(period);\r\n    let counted = allTimePeriod;\r\n    if (days != null) {\r\n        counted = (date) => {\r\n            return inPeriod(date, days);\r\n        };\r\n    }\r\n    let dataSubset = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n        let date = new Date(data[i].created_at);\r\n        if (counted(date)) {\r\n            dataSubset.push(data[i]);\r\n        }\r\n    }\r\n    let count = 0;\r\n    for (let i = 0; i < dataSubset.length; i++) {\r\n        if (dataSubset[i].status >= 400 && dataSubset[i].status < 500) {\r\n            count++;\r\n        }\r\n    }\r\n    console.log(count);\r\n    periodData = dataSubset;\r\n}\r\nfunction inPrevPeriod(date, days) {\r\n    let startPeriodAgo = new Date();\r\n    startPeriodAgo.setDate(startPeriodAgo.getDate() - days * 2);\r\n    let endPeriodAgo = new Date();\r\n    endPeriodAgo.setDate(endPeriodAgo.getDate() - days);\r\n    return startPeriodAgo < date && date < endPeriodAgo;\r\n}\r\nfunction setPrevPeriodData() {\r\n    let days = periodToDays(period);\r\n    let inPeriod = allTimePeriod;\r\n    if (days != null) {\r\n        inPeriod = (date) => {\r\n            return inPrevPeriod(date, days);\r\n        };\r\n    }\r\n    let dataSubset = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n        let date = new Date(data[i].created_at);\r\n        if (inPeriod(date)) {\r\n            dataSubset.push(data[i]);\r\n        }\r\n    }\r\n    prevPeriodData = dataSubset;\r\n}\r\nfunction setPeriod(value) {\r\n    period = value;\r\n    setPeriodData();\r\n    setPrevPeriodData();\r\n}\r\nasync function fetchData() {\r\n    userID = formatUUID(userID);\r\n    // Fetch page ID\r\n    try {\r\n        const response = await fetch(`https://api-analytics-server.vercel.app/api/user-data/${userID}`);\r\n        if (response.status == 200) {\r\n            const json = await response.json();\r\n            data = json.value;\r\n            console.log(data);\r\n            setPeriod(\"month\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        failed = true;\r\n    }\r\n}\r\nlet data;\r\nlet periodData;\r\nlet prevPeriodData;\r\nlet period = \"month\";\r\nlet failed = false;\r\nonMount(() => {\r\n    if (demo) {\r\n        data = genDemoData();\r\n        setPeriod(\"month\");\r\n    }\r\n    else {\r\n        fetchData();\r\n    }\r\n});\r\nexport let userID, demo;\r\n</script>\r\n\r\n{#if periodData != undefined}\r\n  <div class=\"dashboard\">\r\n    <div class=\"time-period\">\r\n      <button\r\n        class=\"time-period-btn {period == '24-hours'\r\n          ? 'time-period-btn-active'\r\n          : ''}\"\r\n        on:click={() => {\r\n          setPeriod(\"24-hours\");\r\n        }}\r\n      >\r\n        24 hours\r\n      </button>\r\n      <button\r\n        class=\"time-period-btn {period == 'week'\r\n          ? 'time-period-btn-active'\r\n          : ''}\"\r\n        on:click={() => {\r\n          setPeriod(\"week\");\r\n        }}\r\n      >\r\n        Week\r\n      </button>\r\n      <button\r\n        class=\"time-period-btn {period == 'month'\r\n          ? 'time-period-btn-active'\r\n          : ''}\"\r\n        on:click={() => {\r\n          setPeriod(\"month\");\r\n        }}\r\n      >\r\n        Month\r\n      </button>\r\n      <button\r\n        class=\"time-period-btn {period == '3-months'\r\n          ? 'time-period-btn-active'\r\n          : ''}\"\r\n        on:click={() => {\r\n          setPeriod(\"3-months\");\r\n        }}\r\n      >\r\n        3 months\r\n      </button>\r\n      <button\r\n        class=\"time-period-btn {period == '6-months'\r\n          ? 'time-period-btn-active'\r\n          : ''}\"\r\n        on:click={() => {\r\n          setPeriod(\"6-months\");\r\n        }}\r\n      >\r\n        6 months\r\n      </button>\r\n      <button\r\n        class=\"time-period-btn {period == 'year'\r\n          ? 'time-period-btn-active'\r\n          : ''}\"\r\n        on:click={() => {\r\n          setPeriod(\"year\");\r\n        }}\r\n      >\r\n        Year\r\n      </button>\r\n      <button\r\n        class=\"time-period-btn {period == 'all-time'\r\n          ? 'time-period-btn-active'\r\n          : ''}\"\r\n        on:click={() => {\r\n          setPeriod(\"all-time\");\r\n        }}\r\n      >\r\n        All time\r\n      </button>\r\n    </div>\r\n    <div class=\"left\">\r\n      <div class=\"row\">\r\n        <Welcome />\r\n        <SuccessRate data={periodData} />\r\n      </div>\r\n      <div class=\"row\">\r\n        <Requests data={periodData} prevData={prevPeriodData} />\r\n        <RequestsPerHour data={periodData} {period} />\r\n      </div>\r\n      <ResponseTimes data={periodData} />\r\n      <Endpoints data={periodData} />\r\n      <Version data={periodData} />\r\n    </div>\r\n    <div class=\"right\">\r\n      <Activity data={periodData} {period} />\r\n      <div class=\"grid-row\">\r\n        <Growth data={periodData} prevData={prevPeriodData} />\r\n        <Device data={periodData} />\r\n      </div>\r\n      <UsageTime data={periodData} />\r\n    </div>\r\n  </div>\r\n{:else if failed}\r\n  <div class=\"no-requests\">No requests currently logged.</div>\r\n{:else}\r\n  <div class=\"placeholder\" style=\"min-height: 85vh;\">\r\n    <div class=\"spinner\">\r\n      <div class=\"loader\" />\r\n    </div>\r\n  </div>\r\n{/if}\r\n<Footer />\r\n\r\n<style>\r\n  .dashboard {\r\n    min-height: 90vh;\r\n  }\r\n  .dashboard {\r\n    margin: 5em;\r\n    display: flex;\r\n    position: relative;\r\n  }\r\n  .row {\r\n    display: flex;\r\n  }\r\n  .grid-row {\r\n    display: flex;\r\n  }\r\n  .right {\r\n    flex-grow: 1;\r\n    margin-right: 2em;\r\n  }\r\n  .no-requests {\r\n    height: 70vh;\r\n    font-size: 1.5em;\r\n    display: grid;\r\n    place-items: center;\r\n    color: var(--highlight);\r\n  }\r\n  .placeholder {\r\n    min-height: 85vh;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .time-period {\r\n    position: absolute;\r\n    display: flex;\r\n    right: 2em;\r\n    top: -2.2em;\r\n    border: 1px solid #2e2e2e;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n  }\r\n  .time-period-btn {\r\n    background: #232323;\r\n    padding: 3px 12px;\r\n    border: none;\r\n    color: #707070;\r\n    cursor: pointer;\r\n  }\r\n  .time-period-btn-active {\r\n    background: var(--highlight);\r\n    color: black;\r\n  }\r\n  @media screen and (max-width: 1580px) {\r\n    .grid-row {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1100px) {\r\n    .dashboard {\r\n      margin: 2em 0;\r\n    }\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">let apiKey = \"\";\r\nlet loading = false;\r\nlet message = \"\";\r\nasync function genAPIKey() {\r\n    loading = true;\r\n    // Fetch page ID\r\n    const response = await fetch(`https://api-analytics-server.vercel.app/api/delete/${apiKey}`);\r\n    if (response.status == 200) {\r\n        message = \"Deleted successfully\";\r\n    }\r\n    else {\r\n        message = \"Error: API key invalid\";\r\n    }\r\n    loading = false;\r\n}\r\n</script>\r\n\r\n<div class=\"generate\">\r\n  <div class=\"content\">\r\n    <h2>Delete all stored data</h2>\r\n    <input type=\"text\" bind:value={apiKey} placeholder=\"Enter API key\" />\r\n    <button id=\"generateBtn\" on:click={genAPIKey}>Delete</button>\r\n    <div class=\"notification\">{message}</div>\r\n    <div class=\"spinner\">\r\n      <div class=\"loader\" style=\"display: {loading ? 'initial' : 'none'}\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"details\">\r\n    <!-- <div class=\"keep-secure\">Keep your API key safe and secure.</div> -->\r\n    <div class=\"highlight logo\">API Analytics</div>\r\n    <img class=\"footer-logo\" src=\"img/logo.png\" alt=\"\" />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .generate {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  h2 {\r\n    margin: 0 0 1em;\r\n    font-size: 2em;\r\n  }\r\n  .content {\r\n    width: fit-content;\r\n    background: #343434;\r\n    background: #1c1c1c;\r\n    padding: 3.5em 4em 4em;\r\n    border-radius: 9px;\r\n    margin: 20vh 0 2vh;\r\n    height: 400px;\r\n  }\r\n  input {\r\n    background: #1c1c1c;\r\n    background: #343434;\r\n    border: none;\r\n    padding: 0 20px;\r\n    width: 310px;\r\n    font-size: 1em;\r\n    text-align: center;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    margin-bottom: 2.5em;\r\n    color: white;\r\n    display: grid;\r\n  }\r\n  button {\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    padding: 0 20px;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100px;\r\n  }\r\n  .highlight {\r\n    color: #3fcf8e;\r\n  }\r\n  .details {\r\n    font-size: 0.8em;\r\n    margin-top: calc(15px + 1em);\r\n  }\r\n  .notification {\r\n    color: #3fcf8e;\r\n    margin-top: 32px;\r\n    height: 16px;\r\n  }\r\n  #generateBtn {\r\n    background: #3fcf8e;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">let loading = false;\r\nlet generatedKey = false;\r\nlet apiKey = \"\";\r\nlet generateBtn;\r\nlet copyBtn;\r\nlet copiedNotification;\r\nasync function genAPIKey() {\r\n    if (!generatedKey) {\r\n        loading = true;\r\n        const response = await fetch(\"https://api-analytics-server.vercel.app/api/generate-api-key\");\r\n        if (response.status == 200) {\r\n            const data = await response.json();\r\n            generatedKey = true;\r\n            apiKey = data.value;\r\n            generateBtn.style.display = \"none\";\r\n            copyBtn.style.display = \"grid\";\r\n        }\r\n        loading = false;\r\n    }\r\n}\r\nfunction copyToClipboard() {\r\n    navigator.clipboard.writeText(apiKey);\r\n    copyBtn.value = \"Copied\";\r\n    copiedNotification.style.visibility = \"visible\";\r\n}\r\n</script>\r\n\r\n<div class=\"generate\">\r\n  <div class=\"content\">\r\n    <h2>Generate API key</h2>\r\n    <input type=\"text\" readonly bind:value={apiKey} />\r\n    <button id=\"generateBtn\" on:click={genAPIKey} bind:this={generateBtn}\r\n      >Generate</button\r\n    >\r\n    <button id=\"copyBtn\" on:click={copyToClipboard} bind:this={copyBtn}\r\n      ><img class=\"copy-icon\" src=\"img/copy.png\" alt=\"\" /></button\r\n    >\r\n    <div id=\"copied\" bind:this={copiedNotification}>Copied!</div>\r\n\r\n    <div class=\"spinner\">\r\n      <div class=\"loader\" style=\"display: {loading ? 'initial' : 'none'}\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"details\">\r\n    <div class=\"keep-secure\">Keep your API key safe and secure.</div>\r\n    <div class=\"highlight logo\">API Analytics</div>\r\n    <img class=\"footer-logo\" src=\"img/logo.png\" alt=\"\" />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .generate {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  h2 {\r\n    margin: 0 0 1em;\r\n    font-size: 2em;\r\n  }\r\n  .content {\r\n    width: fit-content;\r\n    background: #343434;\r\n    background: #1c1c1c;\r\n    padding: 3.5em 4em 4em;\r\n    border-radius: 9px;\r\n    margin: 20vh 0 2vh;\r\n    height: 400px;\r\n  }\r\n  input {\r\n    background: #1c1c1c;\r\n    background: #343434;\r\n    border: none;\r\n    padding: 0 20px;\r\n    width: 310px;\r\n    font-size: 1em;\r\n    text-align: center;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    margin-bottom: 2.5em;\r\n    color: white;\r\n    display: grid;\r\n  }\r\n  button {\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    padding: 0 20px;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100px;\r\n  }\r\n  .highlight {\r\n    color: #3fcf8e;\r\n  }\r\n  .details {\r\n    font-size: 0.8em;\r\n  }\r\n  .keep-secure {\r\n    color: #5a5a5a;\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  #copyBtn {\r\n    background: #1c1c1c;\r\n    display: none;\r\n    background: #343434;\r\n    place-items: center;\r\n    margin: auto;\r\n  }\r\n  .copy-icon {\r\n    filter: contrast(0.3);\r\n    height: 20px;\r\n  }\r\n  #copied {\r\n    color: var(--highlight);\r\n    margin: 2em auto auto;\r\n    visibility: hidden;\r\n    height: 1em;\r\n  }\r\n\r\n  .spinner {\r\n    height: 7em;\r\n    /* margin-bottom: 5em; */\r\n  }\r\n  #generateBtn {\r\n    background: #3fcf8e;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import frameworkExamples from \"../lib/framework\";\r\nimport Footer from \"../components/Footer.svelte\";\r\nimport codeStyle from \"svelte-highlight/styles/a11y-dark\";\r\nimport { onMount } from \"svelte\";\r\nfunction setFramework(value) {\r\n    framework = value;\r\n}\r\nfunction animate() {\r\n    translation = -translation;\r\n    let el = document.getElementById('hover-1');\r\n    el.style.transform = `translateY(${translation}%)`;\r\n    let el2 = document.getElementById('hover-2');\r\n    el2.style.transform = `translateY(${-translation}%)`;\r\n    setTimeout(animate, 9000);\r\n}\r\nlet translation = 3.7;\r\nonMount(() => {\r\n    setTimeout(animate, 10);\r\n});\r\nlet framework = \"Django\";\r\n</script>\r\n\r\n<svelte:head>\r\n  {@html codeStyle}\r\n</svelte:head>\r\n\r\n<div class=\"home\">\r\n  <div class=\"landing-page-container\">\r\n    <div class=\"landing-page\">\r\n      <div class=\"left\">\r\n        <h1>API Analytics</h1>\r\n        <h2>Monitoring and analytics for API frameworks.</h2>\r\n        <div class=\"links\">\r\n          <a href=\"/generate\" class=\"link\">\r\n            <div class=\"text\">\r\n              Try now – it's <span class=\"italic\">free</span>\r\n            </div></a\r\n          >\r\n          <a href=\"/dashboard/demo\" class=\"link secondary\">\r\n            <div class=\"text\">Demo</div></a\r\n          >\r\n        </div>\r\n      </div>\r\n      <div style=\"position: relative\" class=\"right\">\r\n        <img class=\"logo\" src=\"img/home-logo2.png\" alt=\"\" />\r\n        <img id=\"hover-1\" style=\"position: absolute;\" class=\"logo\" src=\"img/animated5.png\" alt=\"\" />\r\n        <img id=\"hover-2\" style=\"position: absolute;\" class=\"logo\" src=\"img/animated6.png\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"dashboard\">\r\n    <div class=\"dashboard-title-container\">\r\n      <img class=\"lightning-top\" src=\"img/logo.png\" alt=\"\" />\r\n      <h1 class=\"dashboard-title\">Dashboard</h1>\r\n    </div>\r\n    <div class=\"dashboard-content\">\r\n      <div class=\"dashboard-content-text\">\r\n        An all-in-one analytics dashboard. Real-time insight into your API's\r\n        usage.\r\n      </div>\r\n      <div class=\"dashboard-btn-container\">\r\n        <a href=\"/dashboard\" class=\"dashboard-btn secondary\">\r\n          <div class=\"dashboard-btn-text\">Open</div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <img class=\"dashboard-img\" src=\"img/dashboard.png\" alt=\"\" />\r\n  </div>\r\n  <div class=\"dashboard\">\r\n    <div class=\"dashboard-title-container\">\r\n      <img class=\"lightning-top\" src=\"img/logo.png\" alt=\"\" />\r\n      <h1 class=\"dashboard-title\">Monitoring</h1>\r\n    </div>\r\n    <div class=\"dashboard-content\">\r\n      <div class=\"dashboard-content-text\">\r\n        Active monitoring and error notifications. Peace of mind.\r\n      </div>\r\n      <div class=\"dashboard-btn-container\">\r\n        <a href=\"/\" class=\"dashboard-btn secondary\">\r\n          <div class=\"dashboard-btn-text\">Coming Soon</div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <img class=\"dashboard-img\" src=\"img/monitoring.png\" alt=\"\" />\r\n  </div>\r\n  <div class=\"add-middleware\">\r\n    <div class=\"add-middleware-title\">Getting Started</div>\r\n    <div class=\"frameworks\">\r\n      <button\r\n        class=\"framework python\"\r\n        class:active={framework == \"Django\"}\r\n        on:click={() => {\r\n          setFramework(\"Django\");\r\n        }}>Django</button\r\n      >\r\n      <button\r\n        class=\"framework python\"\r\n        class:active={framework == \"Flask\"}\r\n        on:click={() => {\r\n          setFramework(\"Flask\");\r\n        }}>Flask</button\r\n      >\r\n      <button\r\n        class=\"framework python\"\r\n        class:active={framework == \"FastAPI\"}\r\n        on:click={() => {\r\n          setFramework(\"FastAPI\");\r\n        }}>FastAPI</button\r\n      >\r\n      <button\r\n        class=\"framework python\"\r\n        class:active={framework == \"Tornado\"}\r\n        on:click={() => {\r\n          setFramework(\"Tornado\");\r\n        }}>Tornado</button\r\n      >\r\n      <button\r\n        class=\"framework javascript\"\r\n        class:active={framework == \"Express\"}\r\n        on:click={() => {\r\n          setFramework(\"Express\");\r\n        }}>Express</button\r\n      >\r\n      <button\r\n        class=\"framework javascript\"\r\n        class:active={framework == \"Fastify\"}\r\n        on:click={() => {\r\n          setFramework(\"Fastify\");\r\n        }}>Fastify</button\r\n      >\r\n      <button\r\n        class=\"framework javascript\"\r\n        class:active={framework == \"Koa\"}\r\n        on:click={() => {\r\n          setFramework(\"Koa\");\r\n        }}>Koa</button\r\n      >\r\n      <button\r\n        class=\"framework golang\"\r\n        class:active={framework == \"Gin\"}\r\n        on:click={() => {\r\n          setFramework(\"Gin\");\r\n        }}>Gin</button\r\n      >\r\n      <button\r\n        class=\"framework golang\"\r\n        class:active={framework == \"Echo\"}\r\n        on:click={() => {\r\n          setFramework(\"Echo\");\r\n        }}>Echo</button\r\n      >\r\n      <button\r\n        class=\"framework golang\"\r\n        class:active={framework == \"Fiber\"}\r\n        on:click={() => {\r\n          setFramework(\"Fiber\");\r\n        }}>Fiber</button\r\n      >\r\n      <button\r\n        class=\"framework golang\"\r\n        class:active={framework == \"Chi\"}\r\n        on:click={() => {\r\n          setFramework(\"Chi\");\r\n        }}>Chi</button\r\n      >\r\n      <button\r\n        class=\"framework rust\"\r\n        class:active={framework == \"Actix\"}\r\n        on:click={() => {\r\n          setFramework(\"Actix\");\r\n        }}>Actix</button\r\n      >\r\n      <button\r\n        class=\"framework rust\"\r\n        class:active={framework == \"Axum\"}\r\n        on:click={() => {\r\n          setFramework(\"Axum\");\r\n        }}>Axum</button\r\n      >\r\n      <button\r\n        class=\"framework ruby\"\r\n        class:active={framework == \"Rails\"}\r\n        on:click={() => {\r\n          setFramework(\"Rails\");\r\n        }}>Rails</button\r\n      >\r\n      <button\r\n        class=\"framework ruby\"\r\n        class:active={framework == \"Sinatra\"}\r\n        on:click={() => {\r\n          setFramework(\"Sinatra\");\r\n        }}>Sinatra</button\r\n      >\r\n    </div>\r\n    <div class=\"add-middleware-content\">\r\n      <div class=\"instructions-container\">\r\n        <div class=\"instructions\">\r\n          <div class=\"subtitle\">Install</div>\r\n          <code class=\"installation\"\r\n            >{frameworkExamples[framework].install}</code\r\n          >\r\n          <div class=\"subtitle\">Add middleware to API</div>\r\n          <!-- Render all code snippets to apply one-time syntax highlighting -->\r\n          <!-- TODO: dynamic syntax highlight rendering to only render the \r\n            frameworks clicked on and reduce this code to one line -->\r\n          <div class=\"code-file\">{frameworkExamples[framework].codeFile}</div>\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-python\"\r\n            style=\"{framework == 'Django' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Django\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-python\"\r\n            style=\"{framework == 'FastAPI' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"FastAPI\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-python\"\r\n            style=\"{framework == 'Flask' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Flask\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-python\"\r\n            style=\"{framework == 'Tornado' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Tornado\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-javascript\"\r\n            style=\"{framework == 'Express' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Express\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-javascript\"\r\n            style=\"{framework == 'Fastify' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Fastify\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-javascript\"\r\n            style=\"{framework == 'Koa' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Koa\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-go\"\r\n            style=\"{framework == 'Gin' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Gin\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-go\"\r\n            style=\"{framework == 'Echo' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Echo\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-go\"\r\n            style=\"{framework == 'Fiber' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Fiber\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-go\"\r\n            style=\"{framework == 'Chi' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Chi\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-rust\"\r\n            style=\"{framework == 'Actix' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Actix\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-rust\"\r\n            style=\"{framework == 'Axum' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Axum\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-ruby\"\r\n            style=\"{framework == 'Rails' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Rails\"].example}</code\r\n          >\r\n          <code\r\n            id=\"code\"\r\n            class=\"code language-ruby\"\r\n            style=\"{framework == 'Sinatra' ? 'display: initial' : ''} \"\r\n            >{frameworkExamples[\"Sinatra\"].example}</code\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<Footer />\r\n\r\n<style scoped>\r\n  .landing-page {\r\n    display: flex;\r\n    place-items: center;\r\n    padding-bottom: 6em;\r\n  }\r\n  .landing-page-container {\r\n    display: grid;\r\n    margin: 0 12% 0 15%;\r\n    min-height: 100vh;\r\n  }\r\n  .left {\r\n    flex: 1;\r\n    text-align: left;\r\n  }\r\n  .right {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .logo {\r\n    max-width: 1400px;\r\n    width: 700px;\r\n    margin-bottom: -50px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 3.4em;\r\n  }\r\n\r\n  h2 {\r\n    color: white;\r\n  }\r\n\r\n  .links {\r\n    color: #707070;\r\n    display: flex;\r\n    margin-top: 30px;\r\n    text-align: left;\r\n  }\r\n  .link {\r\n    width: fit-content;\r\n    margin-right: 20px;\r\n    font-size: 0.9;\r\n  }\r\n  .link:hover {\r\n    background: #31aa73;\r\n  }\r\n\r\n  .secondary {\r\n    background: #1c1c1c;\r\n    border: 3px solid var(--highlight);\r\n    color: var(--highlight);\r\n  }\r\n  .secondary:hover {\r\n    background: #081d13;\r\n  }\r\n\r\n  .lightning-top {\r\n    height: 70px;\r\n  }\r\n\r\n  .dashboard-title-container {\r\n    display: flex;\r\n    margin: 2em 4em;\r\n  }\r\n\r\n  a {\r\n    background: var(--highlight);\r\n    color: black;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n  }\r\n  .italic {\r\n    font-style: italic;\r\n  }\r\n  .dashboard {\r\n    border: 3px solid var(--highlight);\r\n    width: 80%;\r\n    border-radius: 10px;\r\n    margin: auto;\r\n    margin-bottom: 8em;\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n  .dashboard-title {\r\n    font-size: 2.5em;\r\n    text-align: left;\r\n    margin: 0.2em 1em auto 1em;\r\n  }\r\n  .dashboard-title-container {\r\n    place-content: center;\r\n  }\r\n  .dashboard-img {\r\n    width: 81%;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 24px 120px -25px var(--highlight);\r\n    margin-bottom: -1%;\r\n  }\r\n  .dashboard-content {\r\n    text-align: left;\r\n    color: white;\r\n    margin: 0 5em 4em;\r\n  }\r\n  .dashboard-content-text {\r\n    font-size: 1.1em;\r\n    text-align: center;\r\n  }\r\n  .dashboard-btn-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 2em;\r\n  }\r\n  .dashboard-btn-text {\r\n    text-align: center;\r\n  }\r\n\r\n  .add-middleware-title {\r\n    color: var(--highlight);\r\n    font-size: 2.1em;\r\n    font-weight: 700;\r\n    margin-bottom: 1.5em;\r\n  }\r\n  .add-middleware {\r\n    margin: auto;\r\n    margin-bottom: 7em;\r\n    border-radius: 6px;\r\n  }\r\n\r\n  .frameworks {\r\n    margin: 0 10%;\r\n    overflow-x: auto;\r\n  }\r\n  .framework {\r\n    color: grey;\r\n    background: transparent;\r\n    border: none;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    padding: 10px 18px;\r\n    border-bottom: 3px solid transparent;\r\n  }\r\n  .active {\r\n    color: white;\r\n  }\r\n  .active.python {\r\n    border-bottom: 3px solid #4b8bbe;\r\n  }\r\n  .active.golang {\r\n    border-bottom: 3px solid #00a7d0;\r\n  }\r\n  .active.javascript {\r\n    border-bottom: 3px solid #edd718;\r\n  }\r\n  .active.rust {\r\n    border-bottom: 3px solid #ef4900;\r\n  }\r\n  .active.ruby {\r\n    border-bottom: 3px solid #cd0000;\r\n  }\r\n  .subtitle {\r\n    color: rgb(110, 110, 110);\r\n    margin: 10px 0 2px 20px;\r\n    font-size: 0.85em;\r\n  }\r\n  .instructions-container {\r\n    padding: 1.5em 2em 2em;\r\n    width: 850px;\r\n    margin: auto;\r\n  }\r\n  .instructions {\r\n    text-align: left;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n  }\r\n  code {\r\n    background: #151515;\r\n    padding: 1.4em 2em;\r\n    border-radius: 0.5em;\r\n    margin: 5px;\r\n    color: #dcdfe4;\r\n    white-space: pre-wrap;\r\n  }\r\n  .code {\r\n    display: none;\r\n  }\r\n  .code-file {\r\n    position: absolute;\r\n    font-size: 0.8em;\r\n    top: 160px;\r\n    color: rgb(97, 97, 97);\r\n    text-align: right;\r\n    right: 2.5em;\r\n    margin-bottom: -2em;\r\n  }\r\n\r\n  #hover-1 {\r\n    transform: translateY(3.7%);\r\n\r\n  }\r\n  #hover-2 {\r\n    transform: translateY(-3.7%);\r\n  }\r\n\r\n  img {\r\n   transition:all 10s ease-in-out;\r\n  }\r\n\r\n  @media screen and (max-width: 1500px) {\r\n    .landing-page-container {\r\n      margin: 0 6% 0 7%;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1300px) {\r\n    .landing-page-container {\r\n      margin: 0 5% 0 6%;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1200px) {\r\n    .landing-page {\r\n      flex-direction: column-reverse;\r\n    }\r\n    .landing-page-container {\r\n      margin: 0 2em;\r\n    }\r\n    .dashboard {\r\n      width: 90%;\r\n      margin-bottom: 4em;\r\n    }\r\n    .logo {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 900px) {\r\n    .home {\r\n      font-size: 0.85em;\r\n    }\r\n    .instructions-container {\r\n      width: auto;\r\n    }\r\n    .code-file {\r\n      top: 140px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    .home {\r\n      font-size: 0.8em;\r\n    }\r\n    .right {\r\n      margin-top: 2em;\r\n    }\r\n  }\r\n  @media screen and (max-width: 700px) {\r\n    h1 {\r\n      font-size: 2.5em;\r\n    }\r\n    h2 {\r\n      font-size: 1.2em;\r\n    }\r\n    .landing-page-container {\r\n      min-height: unset;\r\n    }\r\n    .landing-page {\r\n      padding-bottom: 8em;\r\n    }\r\n    .lightning-top {\r\n      height: 55px;\r\n    }\r\n    .dashboard-img {\r\n      margin-bottom: -3%;\r\n    }\r\n    .add-middleware-title {\r\n      margin-bottom: 0.5em;\r\n    }\r\n    .instructions-container {\r\n      padding-top: 0;\r\n    }\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport Footer from \"../components/Footer.svelte\";\r\nimport Card from \"../components/monitoring/Card.svelte\";\r\nimport TrackNew from \"../components/monitoring/TrackNew.svelte\";\r\nfunction formatUUID(userID) {\r\n    return `${userID.slice(0, 8)}-${userID.slice(8, 12)}-${userID.slice(12, 16)}-${userID.slice(16, 20)}-${userID.slice(20)}`;\r\n}\r\nasync function fetchData() {\r\n    userID = formatUUID(userID);\r\n    // Fetch page ID\r\n    try {\r\n        const response = await fetch(`https://api-analytics-server.vercel.app/api/user-data/${userID}`);\r\n        if (response.status == 200) {\r\n            const json = await response.json();\r\n            data = json.value;\r\n            console.log(data);\r\n        }\r\n    }\r\n    catch (e) {\r\n        failed = true;\r\n    }\r\n}\r\nfunction setPeriod(value) {\r\n    period = value;\r\n    error = false;\r\n}\r\nfunction toggleShowTrackNew() {\r\n    showTrackNew = !showTrackNew;\r\n}\r\nlet error = false;\r\nlet period = \"30d\";\r\nlet data;\r\nlet measurements = Array(3);\r\nlet failed = false;\r\nfor (let i = 0; i < measurements.length; i++) {\r\n    measurements[i] = {\r\n        name: \"persona-api.vercel.app/v1/england\",\r\n        measurements: [],\r\n    };\r\n    for (let j = 0; j < 140; j++) {\r\n        measurements[i].measurements.push({\r\n            status: \"success\",\r\n            response_time: Math.random() * 10 + 5,\r\n        });\r\n    }\r\n}\r\nfor (let i = 50; i < 58; i++) {\r\n    measurements[0].measurements[i] = { status: \"error\", response_time: 0 };\r\n}\r\nmeasurements[1].name = \"persona-api.vercel.app/v1/england/features\";\r\nlet showTrackNew = false;\r\nonMount(() => {\r\n    fetchData();\r\n});\r\nexport let userID;\r\n</script>\r\n\r\n<div class=\"monitoring\">\r\n  <div class=\"status\">\r\n    {#if error}\r\n      <div class=\"status-image\">\r\n        <img id=\"status-image\" src=\"/img/bigcross.png\" alt=\"\" />\r\n        <div class=\"status-text\">Systems down</div>\r\n      </div>\r\n    {:else}\r\n      <div class=\"status-image\">\r\n        <img id=\"status-image\" src=\"/img/bigtick.png\" alt=\"\" />\r\n        <div class=\"status-text\">Systems Online</div>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n  <div class=\"cards-container\">\r\n    <div class=\"controls\">\r\n      <div class=\"add-new\">\r\n        <button class=\"add-new-btn\" on:click={toggleShowTrackNew}\r\n          ><div class=\"add-new-text\">\r\n            <span class=\"plus\">+</span> New\r\n          </div>\r\n        </button>\r\n      </div>\r\n      <div class=\"period-controls-container\">\r\n        <div class=\"period-controls\">\r\n          <button\r\n            class=\"period-btn {period == '24h' ? 'active' : ''}\"\r\n            on:click={() => {\r\n              setPeriod(\"24h\");\r\n            }}\r\n          >\r\n            24h\r\n          </button>\r\n          <button\r\n            class=\"period-btn {period == '7d' ? 'active' : ''}\"\r\n            on:click={() => {\r\n              setPeriod(\"7d\");\r\n            }}\r\n          >\r\n            7d\r\n          </button>\r\n          <button\r\n            class=\"period-btn {period == '30d' ? 'active' : ''}\"\r\n            on:click={() => {\r\n              setPeriod(\"30d\");\r\n            }}\r\n          >\r\n            30d\r\n          </button>\r\n          <button\r\n            class=\"period-btn {period == '60d' ? 'active' : ''}\"\r\n            on:click={() => {\r\n              setPeriod(\"60d\");\r\n            }}\r\n          >\r\n            60d\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {#if showTrackNew || measurements.length == 0}\r\n      <TrackNew />\r\n    {/if}\r\n    <Card data={measurements[0]} {period} bind:anyError={error} />\r\n    <Card data={measurements[1]} {period} bind:anyError={error} />\r\n    <Card data={measurements[2]} {period} bind:anyError={error} />\r\n  </div>\r\n</div>\r\n<Footer />\r\n\r\n<style scoped>\r\n  .monitoring {\r\n    font-weight: 600;\r\n  }\r\n  .status {\r\n    margin: 13vh 0 9vh;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  #status-image {\r\n    width: 130px;\r\n    margin-bottom: 1em;\r\n    filter: saturate(1.3);\r\n  }\r\n  .status-text {\r\n    font-size: 2.2em;\r\n    font-weight: 700;\r\n    color: white;\r\n  }\r\n\r\n  .cards-container {\r\n    width: 60%;\r\n    margin: auto;\r\n    padding-bottom: 1em;\r\n  }\r\n\r\n  .controls {\r\n    margin: auto;\r\n    width: 60%;\r\n\r\n    width: min(100%, 1000px);\r\n    display: flex;\r\n  }\r\n  .add-new {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: left;\r\n  }\r\n  .period-controls {\r\n    margin-left: auto;\r\n    display: flex;\r\n    justify-content: right;\r\n  }\r\n\r\n  .period-controls {\r\n    border: 1px solid #2e2e2e;\r\n    width: fit-content;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  button {\r\n    background: #232323;\r\n    color: #707070;\r\n    border: none;\r\n    padding: 3px 12px;\r\n    cursor: pointer;\r\n  }\r\n  .add-new-btn {\r\n    border: 1px solid #2e2e2e;\r\n    border-radius: 4px;\r\n  }\r\n  .add-new-text {\r\n    display: flex;\r\n  }\r\n  .active {\r\n    background: var(--highlight);\r\n    color: black;\r\n  }\r\n  .plus {\r\n    padding-right: 0.6em;\r\n  }\r\n\r\n</style>\r\n",
    "<script lang=\"ts\">let apiKey = \"\";\r\nlet loading = false;\r\nasync function genAPIKey() {\r\n    loading = true;\r\n    // Fetch page ID\r\n    const response = await fetch(`https://api-analytics-server.vercel.app/api/user-id/${apiKey}`);\r\n    console.log(response);\r\n    if (response.status == 200) {\r\n        const data = await response.json();\r\n        window.location.href = `/dashboard/${data.value.replaceAll(\"-\", \"\")}`;\r\n    }\r\n    loading = false;\r\n}\r\n</script>\r\n\r\n<div class=\"generate\">\r\n  <div class=\"content\">\r\n    <h2>Dashboard</h2>\r\n    <input type=\"text\" bind:value={apiKey} placeholder=\"Enter API key\"/>\r\n    <button id=\"generateBtn\" on:click={genAPIKey}>Load</button>\r\n    <div class=\"spinner\">\r\n      <div class=\"loader\" style=\"display: {loading ? 'initial' : 'none'}\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"details\">\r\n    <div class=\"keep-secure\">Keep your API key safe and secure.</div>\r\n    <div class=\"highlight logo\">API Analytics</div>\r\n    <img class=\"footer-logo\" src=\"img/logo.png\" alt=\"\">\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .generate {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  h2 {\r\n    margin: 0 0 1em;\r\n    font-size: 2em;\r\n  }\r\n  .content {\r\n    width: fit-content;\r\n    background: #343434;\r\n    background: #1c1c1c;\r\n    padding: 3.5em 4em 4em;\r\n    border-radius: 9px;\r\n    margin: 20vh 0 2vh;\r\n    height: 400px;\r\n  }\r\n  input {\r\n    background: #1c1c1c;\r\n    background: #343434;\r\n    border: none;\r\n    padding: 0 20px;\r\n    width: 310px;\r\n    font-size: 1em;\r\n    text-align: center;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    margin-bottom: 2.5em;\r\n    color: white;\r\n    display: grid;\r\n  }\r\n  button {\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    padding: 0 20px;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100px;\r\n  }\r\n  .highlight {\r\n    color: #3fcf8e;\r\n  }\r\n  .details {\r\n    font-size: 0.8em;\r\n  }\r\n  .keep-secure {\r\n    color: #5a5a5a;\r\n    margin-bottom: 1em;\r\n  }\r\n  #generateBtn {\r\n    background: #3fcf8e;\r\n  }\r\n\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}