{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Router.svelte","../node_modules/svelte-routing/src/Route.svelte","../src/routes/Home.svelte","../src/routes/Generate.svelte","../src/routes/SignIn.svelte","../src/components/Requests.svelte","../src/components/Welcome.svelte","../src/components/RequestsPerHour.svelte","../src/components/ResponseTimes.svelte","../src/components/Endpoints.svelte","../src/components/Footer.svelte","../src/components/SuccessRate.svelte","../src/components/PastMonthRequests.svelte","../src/components/PastMonthResponseTime.svelte","../src/components/PastMonthSuccessRate.svelte","../src/components/PastMonth.svelte","../src/components/Browser.svelte","../src/components/OperatingSystem.svelte","../src/components/Version.svelte","../src/components/RequestTime.svelte","../src/routes/Dashboard.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.53.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","<div class=\"home\">\r\n<img class=\"logo\" src=\"img/home-logo2.png\" alt=\"\" />\r\n<h1>API Analytics</h1>\r\n\r\n<div class=\"links\">\r\n  <a href=\"/generate\" class=\"link\"> <div class=\"text\">API key</div></a>\r\n  <a href=\"/dashboard\" class=\"link\"> <div class=\"text\">Dashboard</div></a>\r\n</div>\r\n</div>\r\n\r\n<style scoped>\r\n  .home {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .logo {\r\n    max-width: 700px;\r\n    width: 90vw;\r\n    margin-bottom: -50px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 2.5em;\r\n  }\r\n\r\n  .links {\r\n    color: #707070;\r\n    display: flex;\r\n    width: 400px;\r\n    margin: 30px auto auto;\r\n    flex-direction: column;\r\n  }\r\n  .link {\r\n    width: fit-content;\r\n    margin: 10px auto;\r\n    color: #707070;\r\n    color: white;\r\n    font-size: 0.9;\r\n  }\r\n  .link:hover {\r\n    color: var(--highlight);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  let loading = false;\r\n  let generatedKey = false;\r\n  let apiKey = \"\";\r\n  let generateBtn: HTMLButtonElement;\r\n  let copyBtn: HTMLButtonElement;\r\n  let copiedNotification: HTMLDivElement;\r\n  async function genAPIKey() {\r\n    if (!generatedKey) {\r\n      loading = true;\r\n      const response = await fetch(\r\n        \"https://api-analytics-server.vercel.app/api/generate-api-key\"\r\n      );\r\n      if (response.status == 200) {\r\n        const data = await response.json();\r\n        generatedKey = true;\r\n        apiKey = data.value;\r\n        generateBtn.style.display = \"none\";\r\n        copyBtn.style.display = \"grid\";\r\n      }\r\n      loading = false;\r\n    }\r\n  }\r\n\r\n  function copyToClipboard() {\r\n    navigator.clipboard.writeText(apiKey);\r\n    copyBtn.value = \"Copied\";\r\n    copiedNotification.style.visibility = \"visible\";\r\n  }\r\n</script>\r\n\r\n<div class=\"generate\">\r\n  <div class=\"content\">\r\n    <h2>Generate API key</h2>\r\n    <input type=\"text\" readonly bind:value={apiKey} />\r\n    <button id=\"generateBtn\" on:click={genAPIKey} bind:this={generateBtn}\r\n      >Generate</button\r\n    >\r\n    <button id=\"copyBtn\" on:click={copyToClipboard} bind:this={copyBtn}\r\n      ><img class=\"copy-icon\" src=\"img/copy.png\" alt=\"\" /></button\r\n    >\r\n    <div id=\"copied\" bind:this={copiedNotification}>Copied!</div>\r\n\r\n    <div class=\"spinner\">\r\n      <div class=\"loader\" style=\"display: {loading ? 'initial' : 'none'}\" />\r\n    </div>\r\n\r\n    <div class=\"details\">\r\n      <div class=\"keep-secure\">Keep your API key safe and secure.</div>\r\n      <div class=\"highlight logo\">API Analytics</div>\r\n      <img class=\"footer-logo\" src=\"img/logo.png\" alt=\"\">\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .generate {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  h2 {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n    margin: 0 0 1em;\r\n    font-size: 2em;\r\n  }\r\n  .content {\r\n    width: fit-content;\r\n    background: #343434;\r\n    background: #1c1c1c;\r\n    padding: 3.5em 4em 4em;\r\n    border-radius: 9px;\r\n    margin: 20vh 0 2vh;\r\n  }\r\n  input {\r\n    background: #1c1c1c;\r\n    background: #343434;\r\n    border: none;\r\n    padding: 0 20px;\r\n    width: 300px;\r\n    font-size: 1em;\r\n    text-align: center;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    margin-bottom: 2.5em;\r\n    color: white;\r\n    display: grid;\r\n  }\r\n  button {\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    padding: 0 20px;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100px;\r\n  }\r\n  .highlight {\r\n    color: #3fcf8e;\r\n  }\r\n  .details {\r\n    font-size: 0.8em;\r\n  }\r\n  .keep-secure {\r\n    color: #5a5a5a;\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  #copyBtn {\r\n    background: #1c1c1c;\r\n    display: none;\r\n    background: #343434;\r\n    place-items: center;\r\n    margin: auto;\r\n  }\r\n  .copy-icon {\r\n    filter: contrast(0.3);\r\n    height: 20px;\r\n  }\r\n  #copied {\r\n    color: var(--highlight);\r\n    margin: 2em auto auto;\r\n    visibility: hidden;\r\n    height: 1em;\r\n  }\r\n\r\n  .spinner {\r\n    height: 7em;\r\n    margin-bottom: 5em;\r\n  }\r\n  #generateBtn {\r\n    background: #3fcf8e;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  let apiKey = \"\";\r\n  let loading = false\r\n  async function genAPIKey() {\r\n    loading = true;\r\n    // Fetch page ID\r\n    const response = await fetch(\r\n      `https://api-analytics-server.vercel.app/api/user-id/${apiKey}`\r\n    );\r\n    console.log(response);\r\n\r\n    if (response.status == 200) {\r\n      const data = await response.json();\r\n      window.location.href = `/dashboard/${data.value.replaceAll(\"-\", \"\")}`;\r\n    }\r\n    loading = false;\r\n  }\r\n</script>\r\n\r\n<div class=\"generate\">\r\n  <div class=\"content\">\r\n    <h2>Dashboard</h2>\r\n    <input type=\"text\" bind:value={apiKey} placeholder=\"Enter API key\"/>\r\n    <button id=\"generateBtn\" on:click={genAPIKey}>Load</button>\r\n    <div class=\"spinner\">\r\n      <div class=\"loader\" style=\"display: {loading ? 'initial' : 'none'}\" />\r\n    </div>\r\n    <div class=\"details\">\r\n      <div class=\"keep-secure\">Keep your API key safe and secure.</div>\r\n      <div class=\"highlight logo\">API Analytics</div>\r\n      <img class=\"footer-logo\" src=\"img/logo.png\" alt=\"\">\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .generate {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  h2 {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n    margin: 0 0 1em;\r\n    font-size: 2em;\r\n  }\r\n  .content {\r\n    width: fit-content;\r\n    background: #343434;\r\n    background: #1c1c1c;\r\n    padding: 3.5em 4em 4em;\r\n    border-radius: 9px;\r\n    margin: 20vh 0 2vh;\r\n  }\r\n  input {\r\n    background: #1c1c1c;\r\n    background: #343434;\r\n    border: none;\r\n    padding: 0 20px;\r\n    width: 300px;\r\n    font-size: 1em;\r\n    text-align: center;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    margin-bottom: 2.5em;\r\n    color: white;\r\n    display: grid;\r\n  }\r\n  button {\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    padding: 0 20px;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100px;\r\n  }\r\n  .highlight {\r\n    color: #3fcf8e;\r\n  }\r\n  .details {\r\n    /* margin-top: 15rem; */\r\n    font-size: 0.8em;\r\n  }\r\n  .keep-secure {\r\n    color: #5a5a5a;\r\n    margin-bottom: 1em;\r\n  }\r\n  #generateBtn {\r\n    background: #3fcf8e;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Total\">\r\n  <div class=\"card-title\">\r\n    Requests\r\n  </div>\r\n  <div class=\"value\">{data.length}</div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: calc(200px - 1em);\r\n    margin: 0 1em 0 2em;\r\n  }\r\n  .value {\r\n    margin: 20px 0;\r\n    font-size: 1.8em;\r\n    font-weight: 600;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\n</script>\r\n\r\n<div class=\"card\" title=\"API Analytics\">\r\n  <img src=\"../img/logo.png\" alt=\"\">\r\n  <!-- <div class=\"text\">Welcome</div> -->\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: calc(200px - 1em);\r\n    margin: 0 1em 2em 2em;\r\n    background: transparent;\r\n    /* border: 5px solid var(--highlight); */\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  img {\r\n    width: 25px;\r\n    /* height: 50px; */\r\n  }\r\n  .text {\r\n    color: var(--highlight);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function thisWeek(date: Date): boolean {\r\n    let weekAgo = new Date();\r\n    weekAgo.setDate(weekAgo.getDate() - 7);\r\n    return date > weekAgo;\r\n  }\r\n\r\n  function build() {\r\n    let totalRequests = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      let date = new Date(data[i].created_at);\r\n      if (thisWeek(date)) {\r\n        totalRequests++;\r\n      }\r\n    }\r\n    console.log(totalRequests)\r\n    requestsPerHour = ((24 * 7) / totalRequests).toFixed(2);\r\n  }\r\n\r\n  let requestsPerHour: string;\r\n  onMount(() => {\r\n    build();\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Last week\">\r\n  <div class=\"card-title\">\r\n    Requests <span class=\"per-hour\">/ hour</span>\r\n  </div>\r\n  {#if requestsPerHour != undefined}\r\n    <div class=\"value\">{requestsPerHour}</div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: calc(200px - 1em);\r\n    margin: 0 2em 0 1em;\r\n  }\r\n  .value {\r\n    margin: 20px 0;\r\n    font-size: 1.8em;\r\n    font-weight: 600;\r\n  }\r\n  .per-hour {\r\n    color: var(--dim-text);\r\n    font-size: 0.8em;\r\n    margin-left: 4px;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  // Median and quartiles from StackOverflow answer\r\n  // https://stackoverflow.com/a/55297611/8851732\r\n  const asc = (arr) => arr.sort((a, b) => a - b);\r\n  const sum = (arr) => arr.reduce((a, b) => a + b, 0);\r\n  const mean = (arr) => sum(arr) / arr.length;\r\n\r\n  // sample standard deviation\r\n  function std(arr: number[]) {\r\n    const mu = mean(arr);\r\n    const diffArr = arr.map((a) => (a - mu) ** 2);\r\n    return Math.sqrt(sum(diffArr) / (arr.length - 1));\r\n  }\r\n\r\n  function quantile(arr: number[], q: number) {\r\n    const sorted = asc(arr);\r\n    const pos = (sorted.length - 1) * q;\r\n    const base = Math.floor(pos);\r\n    const rest = pos - base;\r\n    if (sorted[base + 1] !== undefined) {\r\n      return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\r\n    } else {\r\n      return sorted[base];\r\n    }\r\n  }\r\n\r\n  function markerPosition(x: number) {\r\n    let position = Math.log10(x) * 125 - 300;\r\n    if (position < 0) {\r\n      return 0;\r\n    } else if (position > 100) {\r\n      return 100;\r\n    } else {\r\n      return position;\r\n    }\r\n  }\r\n\r\n  function setMarkerPosition(median: number) {\r\n    let position = markerPosition(median);\r\n    marker.style.left = `${position}%`;\r\n  }\r\n\r\n  function build() {\r\n    let responseTimes: number[] = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      responseTimes.push(data[i].response_time);\r\n    }\r\n    LQ = quantile(responseTimes, 0.25);\r\n    median = quantile(responseTimes, 0.5);\r\n    UQ = quantile(responseTimes, 0.75);\r\n    setMarkerPosition(median);\r\n  }\r\n\r\n  let median: number, LQ: number, UQ: number;\r\n  let marker: HTMLDivElement;\r\n  onMount(() => {\r\n    build();\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">\r\n    Response times <span class=\"milliseconds\">(ms)</span>\r\n  </div>\r\n  <div class=\"values\">\r\n    <div class=\"value lower-quartile\">{LQ}</div>\r\n    <div class=\"value median\">{median}</div>\r\n    <div class=\"value upper-quartile\">{UQ}</div>\r\n  </div>\r\n  <div class=\"labels\">\r\n    <div class=\"label\">25%</div>\r\n    <div class=\"label\">Median</div>\r\n    <div class=\"label\">75%</div>\r\n  </div>\r\n  <div class=\"bar\">\r\n    <div class=\"bar-green\" />\r\n    <div class=\"bar-yellow\" />\r\n    <div class=\"bar-red\" />\r\n    <div class=\"marker\" bind:this={marker} />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .values {\r\n    display: flex;\r\n    color: var(--highlight);\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n  }\r\n  .values,\r\n  .labels {\r\n    margin: 0 0.5rem;\r\n  }\r\n  .value {\r\n    flex: 1;\r\n    font-size: 1.1em;\r\n    padding: 20px 20px 4px;\r\n  }\r\n  .labels {\r\n    display: flex;\r\n    font-size: 0.8em;\r\n    color: var(--dim-text);\r\n  }\r\n  .label {\r\n    flex: 1;\r\n  }\r\n\r\n  .milliseconds {\r\n    color: var(--dim-text);\r\n    font-size: 0.8em;\r\n    margin-left: 4px;\r\n  }\r\n\r\n  .median {\r\n    font-size: 1em;\r\n  }\r\n  .upper-quartile,\r\n  .lower-quartile {\r\n    font-size: 1em;\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  .bar {\r\n    padding: 20px 0 20px;\r\n    display: flex;\r\n    height: 30px;\r\n    width: 85%;\r\n    margin: auto;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  .bar-green {\r\n    background: var(--highlight);\r\n    width: 75%;\r\n    height: 10px;\r\n    border-radius: 2px 0 0 2px;\r\n  }\r\n  .bar-yellow {\r\n    width: 15%;\r\n    height: 10px;\r\n    background: rgb(235, 235, 129);\r\n  }\r\n  .bar-red {\r\n    width: 20%;\r\n    height: 10px;\r\n    border-radius: 0 2px 2px 0;\r\n    background: rgb(228, 97, 97);\r\n  }\r\n  .marker {\r\n    position: absolute;\r\n    height: 30px;\r\n    width: 5px;\r\n    background: white;\r\n    border-radius: 2px;\r\n    left: 0; /* Changed during runtime to reflect median */\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function endpointFreq(): any {\r\n    let freq = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n      let endpointID = data[i].path + data[i].status;\r\n      if (!(endpointID in freq)) {\r\n        freq[endpointID] = {\r\n          path: data[i].path,\r\n          status: data[i].status,\r\n          count: 0,\r\n        };\r\n      }\r\n      freq[endpointID].count++;\r\n    }\r\n    return freq;\r\n  }\r\n\r\n  function build() {\r\n    let freq = endpointFreq();\r\n\r\n    let freqArr = [];\r\n    maxCount = 0;\r\n    for (let endpointID in freq) {\r\n      freqArr.push(freq[endpointID]);\r\n      if (freq[endpointID].count > maxCount) {\r\n        maxCount = freq[endpointID].count;\r\n      }\r\n    }\r\n\r\n    freqArr.sort((a, b) => {\r\n      return b.count - a.count;\r\n    });\r\n    endpoints = freqArr;\r\n  }\r\n  function setEndpointLabelVisibility(idx: number) {\r\n    let endpoint = document.getElementById(`endpoint-label-${idx}`);\r\n    let endpointPath = document.getElementById(`endpoint-path-${idx}`);\r\n    let endpointCount = document.getElementById(`endpoint-count-${idx}`);\r\n    let externalLabel = document.getElementById(`external-label-${idx}`);\r\n    if (\r\n      endpoint.clientWidth <\r\n      endpointPath.clientWidth + endpointCount.clientWidth\r\n    ) {\r\n      externalLabel.style.display = \"flex\";\r\n      endpointPath.style.display = \"none\";\r\n    }\r\n  }\r\n  function setEndpointLabels() {\r\n    for (let i = 0; i < endpoints.length; i++) {\r\n      setEndpointLabelVisibility(i);\r\n    }\r\n  }\r\n  onMount(() => {\r\n    build();\r\n    setTimeout(setEndpointLabels, 50);\r\n  });\r\n  let endpoints: any[];\r\n  let maxCount: number;\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Endpoints</div>\r\n  {#if endpoints != undefined}\r\n    <div class=\"endpoints\">\r\n      {#each endpoints as endpoint, i}\r\n        <div class=\"endpoint-container\">\r\n          <div\r\n            class=\"endpoint\"\r\n            id=\"endpoint-{i}\"\r\n            style=\"width: {(endpoint.count / maxCount) *\r\n              100}%; background: {endpoint.status >= 200 &&\r\n            endpoint.status <= 299\r\n              ? 'var(--highlight)'\r\n              : '#e46161'}\"\r\n          >\r\n            <div class=\"endpoint-label\" id=\"endpoint-label-{i}\">\r\n              <div class=\"path\" id=\"endpoint-path-{i}\">\r\n                {endpoint.path}\r\n              </div>\r\n              <div class=\"count\" id=\"endpoint-count-{i}\">{endpoint.count}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"external-label\" id=\"external-label-{i}\">\r\n            <div class=\"external-label-path\">\r\n              {endpoint.path}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    min-height: 361px;\r\n  }\r\n  .endpoints {\r\n    margin: 1em 20px 0.6em;\r\n  }\r\n  .endpoint {\r\n    border-radius: 3px;\r\n    margin: 6px 0;\r\n    color: var(--light-background);\r\n    text-align: left;\r\n    position: relative;\r\n  }\r\n  .endpoint-label {\r\n    display: flex;\r\n  }\r\n  .path,\r\n  .count {\r\n    padding: 3px 15px;\r\n  }\r\n  .count {\r\n    margin-left: auto;\r\n  }\r\n  .path {\r\n    flex-grow: 1;\r\n  }\r\n  .endpoint-container {\r\n    display: flex;\r\n  }\r\n  .external-label {\r\n    padding: 3px 15px;\r\n    left: 40px;\r\n    top: 0;\r\n    margin: 6px 0;\r\n    color: #707070;\r\n    display: none;\r\n  }\r\n</style>\r\n","<div class=\"footer\">\r\n  <div class=\"logo\">API Analytics</div>\r\n  <img class=\"footer-logo\" src=\"../img/logo.png\" alt=\"\">\r\n</div>\r\n\r\n<style scoped>\r\n  .logo {\r\n    font-size: 0.9em;\r\n    color: var(--highlight);\r\n  }\r\n  .footer {\r\n    margin: 2em 0;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function pastWeek(date: Date): boolean {\r\n    let weekAgo = new Date();\r\n    weekAgo.setDate(weekAgo.getDate() - 7);\r\n    return date > weekAgo;\r\n  }\r\n\r\n  function build() {\r\n    let totalRequests = 0;\r\n    let successfulRequests = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      let date = new Date(data[i].created_at);\r\n      if (pastWeek(date)) {\r\n        if (data[i].status >= 200 && data[i].status <= 299) {\r\n          successfulRequests++;\r\n        }\r\n        totalRequests++;\r\n      }\r\n    }\r\n    successRate = (successfulRequests / totalRequests) * 100;\r\n  }\r\n\r\n  let successRate: number;\r\n  onMount(() => {\r\n    build();\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Last week\">\r\n  <div class=\"card-title\">Success rate</div>\r\n  {#if successRate != undefined}\r\n    <div\r\n      class=\"value\"\r\n      style=\"color: {successRate <= 75 ? 'var(--red)' : ''}{successRate > 75 &&\r\n      successRate < 90\r\n        ? 'var(--yellow)'\r\n        : ''}{successRate >= 90 ? 'var(--highlight)' : ''}\"\r\n    >\r\n      {successRate.toFixed(1)}%\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: calc(200px - 1em);\r\n    margin: 0 0 2em 1em;\r\n  }\r\n\r\n  .value {\r\n    margin: 20px 0;\r\n    font-size: 1.8em;\r\n    font-weight: 600;\r\n    color: var(--yellow);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 60);\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate());\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"transparent\",\r\n      paper_bgcolor: \"transparent\",\r\n      height: 150,\r\n      yaxis: {\r\n        title: { text: \"Requests\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Date\" },\r\n        fixedrange: true,\r\n        range: [monthAgo, tomorrow],\r\n        visible: false,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function bars() {\r\n    let requestFreq = {};\r\n    for (let i = 0; i < 30; i++) {\r\n        let date = new Date()\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() - i);\r\n        // @ts-ignore\r\n        requestFreq[date] = 0;\r\n    }\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      let date = new Date(data[i].created_at);\r\n      date.setHours(0, 0, 0, 0);\r\n      // @ts-ignore\r\n      requestFreq[date]++;\r\n    }\r\n\r\n    let requestFreqArr = [];\r\n    for (let date in requestFreq) {\r\n      requestFreqArr.push([new Date(date), requestFreq[date]]);\r\n    }\r\n    requestFreqArr.sort((a, b) => {\r\n      return a[0] - b[0];\r\n    });\r\n\r\n    let dates = [];\r\n    let requests = [];\r\n    for (let i = 0; i < requestFreqArr.length; i++) {\r\n      dates.push(requestFreqArr[i][0]);\r\n      requests.push(requestFreqArr[i][1]);\r\n    }\r\n\r\n    return [\r\n      {\r\n        x: dates,\r\n        y: requests,\r\n        type: \"bar\",\r\n        marker: { color: \"#3fcf8e\" },\r\n        hovertemplate: `<b>%{y} requests</b><br>%{x|%d %b %Y}</b><extra></extra>`,\r\n        showlegend: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function buildPlotData() {\r\n    return {\r\n      data: bars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  let plotDiv;\r\n  function genPlot() {\r\n    let plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  onMount(() => {\r\n    genPlot();\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 60);\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate());\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"transparent\",\r\n      paper_bgcolor: \"transparent\",\r\n      height: 150,\r\n      yaxis: {\r\n        title: { text: \"Response time (ms)\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Date\" },\r\n        showgrid: false,\r\n        fixedrange: true,\r\n        range: [monthAgo, tomorrow],\r\n        visible: false,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function bars() {\r\n    let responseTimes = {};\r\n    for (let i = 0; i < 30; i++) {\r\n        let date = new Date()\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() - i);\r\n        // @ts-ignore\r\n        responseTimes[date] = {total: 0, count: 0}\r\n    }\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      let date = new Date(data[i].created_at);\r\n      date.setHours(0, 0, 0, 0);\r\n      // @ts-ignore\r\n      responseTimes[date].total += data[i].response_time;\r\n      // @ts-ignore\r\n      responseTimes[date].count++;\r\n    }\r\n\r\n    let requestFreqArr = [];\r\n    for (let date in responseTimes) {\r\n        let point = [new Date(date), 0]\r\n        if (responseTimes[date].count > 0) {\r\n            point[1] = responseTimes[date].total / responseTimes[date].count;\r\n        }\r\n      requestFreqArr.push(point);\r\n    }\r\n    requestFreqArr.sort((a, b) => {\r\n      return a[0] - b[0];\r\n    });\r\n\r\n\r\n    let dates = [];\r\n    let requests = [];\r\n    for (let i = 0; i < requestFreqArr.length; i++) {\r\n      dates.push(requestFreqArr[i][0]);\r\n      requests.push(requestFreqArr[i][1]);\r\n    }\r\n\r\n    return [\r\n      {\r\n        x: dates,\r\n        y: requests,\r\n        type: \"bar\",\r\n        marker: { color: \"#707070\" },\r\n        hovertemplate: `<b>%{y:.1f}ms avg</b><br>%{x|%d %b %Y}</b><extra></extra>`,\r\n        showlegend: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function buildPlotData() {\r\n    return {\r\n      data: bars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  function genPlot() {\r\n    let plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement;\r\n  onMount(() => {\r\n    genPlot();\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function pastMonth(date: Date): boolean {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 60);\r\n    return date > monthAgo;\r\n  }\r\n\r\n  let colors = [\r\n    \"#444444\", // Grey (no requests)\r\n    \"#E46161\", // Red\r\n    \"#F18359\",\r\n    \"#F5A65A\",\r\n    \"#F3C966\",\r\n    \"#EBEB81\", // Yellow\r\n    \"#C7E57D\",\r\n    \"#A1DF7E\",\r\n    \"#77D884\",\r\n    \"#3FCF8E\", // Green\r\n  ];\r\n\r\n  function daysAgo(date: Date): number {\r\n    let now = new Date();\r\n    return Math.floor((now.getTime() - date.getTime()) / (24 * 60 * 60 * 1000));\r\n  }\r\n\r\n  function setSuccessRate() {\r\n    let success = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n      let date = new Date(data[i].created_at);\r\n      if (pastMonth(date)) {\r\n        date.setHours(0, 0, 0, 0);\r\n        // @ts-ignore\r\n        if (!(date in success)) {\r\n          // @ts-ignore\r\n          success[date] = { total: 0, successful: 0 };\r\n        }\r\n        if (data[i].status >= 200 && data[i].status <= 299) {\r\n          // @ts-ignore\r\n          success[date].successful++;\r\n        }\r\n        // @ts-ignore\r\n        success[date].total++;\r\n      }\r\n    }\r\n\r\n    let successArr = new Array(60).fill(-0.1); // -0.1 -> 0\r\n    for (let date in success) {\r\n      let idx = daysAgo(new Date(date));\r\n      successArr[successArr.length - idx] =\r\n        success[date].successful / success[date].total;\r\n    }\r\n    successRate = successArr;\r\n  }\r\n\r\n  function build() {\r\n    setSuccessRate();\r\n  }\r\n\r\n  let successRate: any[];\r\n  onMount(() => {\r\n    build();\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"success-rate-container\">\r\n  {#if successRate != undefined}\r\n    <div class=\"success-rate-title\">Success rate</div>\r\n    <div class=\"errors\">\r\n      {#each successRate as value, _}\r\n        <div\r\n          class=\"error\"\r\n          style=\"background: {colors[Math.floor(value * 10) + 1]}\"\r\n          title=\"{(value * 100).toFixed(1)}%\"\r\n        />\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .errors {\r\n    display: flex;\r\n    margin-top: 8px;\r\n    margin: 0 15px 0 40px;\r\n  }\r\n  .error {\r\n    background: var(--highlight);\r\n    flex: 1;\r\n    height: 40px;\r\n    margin: 0 1px;\r\n    border-radius: 1px;\r\n  }\r\n  .success-rate-container {\r\n    text-align: left;\r\n    font-size: 0.9em;\r\n    color: #707070;\r\n    /* color: rgb(68, 68, 68); */\r\n  }\r\n  .success-rate-title {\r\n    margin: 0 0 3px 45px;\r\n  }\r\n  .success-rate-container {\r\n    margin: 1.5em 2em 2em;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import PastMonthRequests from \"./PastMonthRequests.svelte\";\r\n  import PastMonthResponseTime from \"./PastMonthResponseTime.svelte\";\r\n  import PastMonthSuccessRate from \"./PastMonthSuccessRate.svelte\";\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\">\r\n  <div class=\"card-title\">Past 60 days</div>\r\n  <PastMonthRequests {data} />\r\n  <PastMonthResponseTime {data} />\r\n  <PastMonthSuccessRate {data} />\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    margin: 0;\r\n    width: 100%;\r\n  }\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getBrowser(userAgent: string): string {\r\n    if (userAgent.match(/Seamonkey\\//)) {\r\n        return 'Seamonkey'\r\n    } else if (userAgent.match(/Firefox\\//)) {\r\n        return 'Firefox'\r\n    } else if (userAgent.match(/Chrome\\//)) {\r\n        return 'Chrome'\r\n    } else if (userAgent.match(/Chromium\\//)) {\r\n        return 'Chromium'\r\n    } else if (userAgent.match(/Safari\\//)) {\r\n        return 'Safari'\r\n    } else if (userAgent.match(/Edg\\//)) {\r\n        return 'Edge'\r\n    } else if (userAgent.match(/OPR\\//) || userAgent.match(/Opera\\//)) {\r\n        return 'Opera'\r\n    } else if (userAgent.match(/; MSIE /) || userAgent.match(/Trident\\//)) {\r\n        return 'Internet Explorer'\r\n    } else if (userAgent.match(/curl\\//)) {\r\n        return 'Curl'\r\n    } else if (userAgent.match(/PostmanRuntime\\//)) {\r\n        return 'Postman'\r\n    } else if (userAgent.match(/insomnia\\//)) {\r\n        return 'Insomnia'\r\n    } else {\r\n        return 'Other'\r\n    }\r\n  }\r\n\r\n  function browserPlotLayout() {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 30);\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"transparent\",\r\n      paper_bgcolor: \"transparent\",\r\n      height: 180,\r\n      yaxis: {\r\n        title: { text: \"Requests\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        visible: false,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  let colors = [\r\n    \"#3FCF8E\",  // Green\r\n    \"#E46161\",   // Red\r\n    \"#EBEB81\",  // Yellow\r\n  ];\r\n\r\n  function pieChart() {\r\n    let browserCount = {}\r\n    for (let i = 0; i < data.length; i++) {\r\n        let browser = getBrowser(data[i].user_agent)\r\n        if (!(browser in browserCount)) {\r\n            browserCount[browser] = 0\r\n        }\r\n        browserCount[browser]++\r\n    }\r\n\r\n    let browsers = [];\r\n    let count = [];\r\n    for (let browser in browserCount) {\r\n        browsers.push(browser);\r\n        count.push(browserCount[browser])\r\n    }\r\n    return [{\r\n    values: count,\r\n        labels: browsers,\r\n        type: 'pie',\r\n          marker: {\r\n            colors: colors\r\n        },\r\n    }];\r\n  }\r\n\r\n  function browserPlotData() {\r\n    return {\r\n      data: pieChart(),\r\n      layout: browserPlotLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  function genPlot() {\r\n    let plotData = browserPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement;\r\n  onMount(() => {\r\n    genPlot();\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Last week\">\r\n  <div class=\"card-title\">Browser</div>\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    margin: 2em 0 2em 0;\r\n    padding-bottom: 1em;\r\n    flex: 1;\r\n  }\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n  @media screen and (max-width: 1480px){\r\n    .card {\r\n        margin: 0 0 2em;\r\n        width: 100%;\r\n      }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getOS(userAgent: string): string {\r\n    if (userAgent.match(/Win16/)) {\r\n        return 'Windows 3.11'\r\n    } else if (userAgent.match(/(Windows 95)|(Win95)|(Windows_95)/)) {\r\n        return 'Windows 95'\r\n    } else if (userAgent.match(/(Windows 98)|(Win98)/)) {\r\n        return 'Windows 98'\r\n    } else if (userAgent.match(/(Windows NT 5.0)|(Windows 2000)/)) {\r\n        return 'Windows 2000'\r\n    } else if (userAgent.match(/(Windows NT 5.1)|(Windows XP)/)) {\r\n        return 'Windows XP'\r\n    } else if (userAgent.match(/(Windows NT 5.2)/)) {\r\n        return 'Windows Server 2003'\r\n    } else if (userAgent.match(/(Windows NT 6.0)/)) {\r\n        return 'Windows Vista'\r\n    } else if (userAgent.match(/(Windows NT 6.1)/)) {\r\n        return 'Windows 7'\r\n    } else if (userAgent.match(/(Windows NT 6.2)/)) {\r\n        return 'Windows 8'\r\n    } else if (userAgent.match(/(Windows NT 10.0)/)) {\r\n        return 'Windows 10'\r\n    } else if (userAgent.match(/(Windows NT 4.0)|(WinNT4.0)|(WinNT)|(Windows NT)/)) {\r\n        return 'Windows NT 4.0'\r\n    } else if (userAgent.match(/Windows ME/)) {\r\n        return 'Windows ME'\r\n    } else if (userAgent.match(/OpenBSD/)) {\r\n        return 'OpenBSE'\r\n    } else if (userAgent.match(/SunOS/)) {\r\n        return 'SunOS'\r\n    } else if (userAgent.match(/(Linux)|(X11)/)) {\r\n        return 'Linux'\r\n    } else if (userAgent.match(/(Mac_PowerPC)|(Macintosh)/)) {\r\n        return 'MacOS'\r\n    } else if (userAgent.match(/QNX/)) {\r\n        return 'QNX'\r\n    } else if (userAgent.match(/BeOS/)) {\r\n        return 'BeOS'\r\n    } else if (userAgent.match(/OS\\/2/)) {\r\n        return 'OS/2'\r\n    } else if (userAgent.match(/(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/)) {\r\n        return 'Search Bot'\r\n    } else {\r\n        return 'Unknown'\r\n    }\r\n  }\r\n\r\n  function osPlotLayout() {\r\n    let monthAgo = new Date();\r\n    monthAgo.setDate(monthAgo.getDate() - 30);\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"transparent\",\r\n      paper_bgcolor: \"transparent\",\r\n      height: 180,\r\n      yaxis: {\r\n        title: { text: \"Requests\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        visible: false,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  let colors = [\r\n    \"#3FCF8E\",  // Green\r\n    \"#E46161\",  // Red\r\n    \"#EBEB81\",  // Yellow\r\n  ];\r\n\r\n  function pieChart() {\r\n    let osCount = {}\r\n    for (let i = 0; i < data.length; i++) {\r\n        let os = getOS(data[i].user_agent)\r\n        if (!(os in osCount)) {\r\n            osCount[os] = 0\r\n        }\r\n        osCount[os]++\r\n    }\r\n\r\n    let os = [];\r\n    let count = [];\r\n    for (let browser in osCount) {\r\n        os.push(browser);\r\n        count.push(osCount[browser])\r\n    }\r\n    return [{\r\n    values: count,\r\n        labels: os,\r\n        type: 'pie',\r\n          marker: {\r\n            colors: colors\r\n        },\r\n    }];\r\n  }\r\n\r\n  function osPlotData() {\r\n    return {\r\n      data: pieChart(),\r\n      layout: osPlotLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  function genPlot() {\r\n    let plotData = osPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement;\r\n  onMount(() => {\r\n    genPlot();\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\" title=\"Last week\">\r\n  <div class=\"card-title\">OS</div>\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    margin: 2em 2em 2em 0;\r\n    flex: 1;\r\n    padding-bottom: 1em;\r\n  }\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n  @media screen and (max-width: 1480px){\r\n    .card {\r\n        width: 100%;\r\n      }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function setVersions() {\r\n    let v: Set<string> = new Set();\r\n    for (let i = 0; i < data.length; i++) {\r\n      let match = data[i].path.match(/[^a-z0-9](v\\d)[^a-z0-9]/i);\r\n      if (match) {\r\n        v.add(match[1]);\r\n      }\r\n    }\r\n    versions = v;\r\n  }\r\n\r\n  function versionPlotLayout() {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"transparent\",\r\n      paper_bgcolor: \"transparent\",\r\n      height: 180,\r\n      yaxis: {\r\n        title: { text: \"Requests\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        visible: false,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  let colors = [\r\n    \"#3FCF8E\", // Green\r\n    \"#E46161\", // Red\r\n    \"#EBEB81\", // Yellow\r\n  ];\r\n\r\n  function pieChart() {\r\n    let versionCount = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n      let match = data[i].path.match(/[^a-z0-9](v\\d)[^a-z0-9]/i);\r\n      if (match) {\r\n        let version = match[0];\r\n        if (!(version in versionCount)) {\r\n          versionCount[version] = 0;\r\n        }\r\n        versionCount[version]++;\r\n      }\r\n    }\r\n\r\n    let versions = [];\r\n    let count = [];\r\n    for (let version in versionCount) {\r\n      versions.push(version);\r\n      count.push(versionCount[version]);\r\n    }\r\n\r\n    return [\r\n      {\r\n        values: count,\r\n        labels: versions,\r\n        type: \"pie\",\r\n        marker: {\r\n          colors: colors,\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  function versionPlotData() {\r\n    return {\r\n      data: pieChart(),\r\n      layout: versionPlotLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  function genPlot() {\r\n    let plotData = versionPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv2,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  let versions: Set<string>;\r\n  let plotDiv2: HTMLDivElement;\r\n  onMount(() => {\r\n    setVersions();\r\n    if (versions.size > 1) {\r\n      setTimeout(genPlot, 1000);\r\n    }\r\n  });\r\n\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n{#if versions != undefined && versions.size > 1}\r\n  <div class=\"card\">\r\n    <div class=\"card-title\">Versions</div>\r\n    <div id=\"plotly\">\r\n      <div id=\"plotDiv\" bind:this={plotDiv2}>\r\n        <!-- Plotly chart will be drawn inside this DIV -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .card {\r\n    margin: 2em 0 2em 2em;\r\n    padding-bottom: 1em;\r\n    flex: 1;\r\n  }\r\n  #plotDiv {\r\n    margin-right: 20px;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    return {\r\n      font: { size: 12 },\r\n      paper_bgcolor: \"transparent\",\r\n      height: 500,\r\n      margin: { r: 35, l: 70, t: 20, b: 50, pad: 0 },\r\n      polar: {\r\n          bargap: 0,\r\n          bgcolor: \"transparent\",\r\n        angularaxis: { direction: \"clockwise\", showgrid: false},\r\n        radialaxis: { gridcolor: \"#303030\"}\r\n      },\r\n    };\r\n  }\r\n\r\n  function bars() {\r\n    let responseTimes = Array(24).fill(0);\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      let date = new Date(data[i].created_at);\r\n      let time = date.getHours();\r\n      // @ts-ignore\r\n      responseTimes[time]++;\r\n    }\r\n\r\n    let requestFreqArr = [];\r\n    for (let i = 0; i < 24; i++) {\r\n      let point = [i, responseTimes[i]];\r\n      requestFreqArr.push(point);\r\n    }\r\n    requestFreqArr.sort((a, b) => {\r\n      return a[0] - b[0];\r\n    });\r\n\r\n    let dates = [];\r\n    let requests = [];\r\n    for (let i = 0; i < requestFreqArr.length; i++) {\r\n      dates.push(requestFreqArr[i][0].toString() + ':00');\r\n      requests.push(requestFreqArr[i][1]);\r\n    }\r\n\r\n    return [\r\n      {\r\n        r: requests,\r\n        theta: dates,\r\n        marker: { color: \"#3fcf8e\" },\r\n        type: \"barpolar\",\r\n        // showlegend: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function buildPlotData() {\r\n    return {\r\n      data: bars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  function genPlot() {\r\n    let plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement;\r\n  onMount(() => {\r\n    genPlot();\r\n  });\r\n  export let data: RequestsData;\r\n</script>\r\n\r\n<div class=\"card\">\r\n    <div class=\"card-title\">Usage time</div>\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import Requests from \"../components/Requests.svelte\";\r\n  import Welcome from \"../components/Welcome.svelte\";\r\n  import RequestsPerHour from \"../components/RequestsPerHour.svelte\";\r\n  import ResponseTimes from \"../components/ResponseTimes.svelte\";\r\n  import Endpoints from \"../components/Endpoints.svelte\";\r\n  import Footer from \"../components/Footer.svelte\";\r\n  import SuccessRate from \"../components/SuccessRate.svelte\";\r\n  import PastMonth from \"../components/PastMonth.svelte\";\r\n  import Browser from \"../components/Browser.svelte\";\r\n  import OperatingSystem from \"../components/OperatingSystem.svelte\";\r\n  import Version from \"../components/Version.svelte\";\r\n  import RequestTime from \"../components/RequestTime.svelte\";\r\n\r\n  function formatUUID(userID: string): string {\r\n    return `${userID.slice(0, 8)}-${userID.slice(8, 12)}-${userID.slice(\r\n      12,\r\n      16\r\n    )}-${userID.slice(16, 20)}-${userID.slice(20)}`;\r\n  }\r\n\r\n  async function fetchData() {\r\n    userID = formatUUID(userID);\r\n    // Fetch page ID\r\n    try {\r\n      const response = await fetch(\r\n        `https://api-analytics-server.vercel.app/api/data/${userID}`\r\n      );\r\n      if (response.status == 200) {\r\n        const json = await response.json();\r\n        data = json.value;\r\n        console.log(data);\r\n      }\r\n    } catch (e) {\r\n      failed = true;\r\n    }\r\n  }\r\n\r\n  let data: RequestsData;\r\n  let failed = false;\r\n  onMount(() => {\r\n    fetchData();\r\n  });\r\n  export let userID: string;\r\n</script>\r\n\r\n{#if data != undefined}\r\n  <div class=\"dashboard\">\r\n    <div class=\"left\">\r\n      <div class=\"row\">\r\n        <Welcome />\r\n        <SuccessRate {data} />\r\n      </div>\r\n      <div class=\"row\">\r\n        <Requests {data} />\r\n        <RequestsPerHour {data} />\r\n      </div>\r\n      <ResponseTimes {data} />\r\n      <Endpoints {data} />\r\n      <Version {data} />\r\n    </div>\r\n    <div class=\"right\">\r\n      <PastMonth {data} />\r\n      <div class=\"grid-row\">\r\n        <OperatingSystem {data} />\r\n        <Browser {data} />\r\n      </div>\r\n      <RequestTime {data} />\r\n    </div>\r\n  </div>\r\n{:else if failed}\r\n  <div class=\"no-requests\">No requests currently logged.</div>\r\n{:else}\r\n  <div class=\"placeholder\" style=\"min-height: 85vh;\">\r\n    <div class=\"spinner\">\r\n      <div class=\"loader\"/>\r\n    </div>\r\n\r\n  </div>\r\n{/if}\r\n<Footer />\r\n\r\n<style>\r\n  .dashboard {\r\n    min-height: 90vh;\r\n  }\r\n  .dashboard {\r\n    margin: 5em;\r\n    display: flex;\r\n  }\r\n  .row {\r\n    display: flex;\r\n  }\r\n  .grid-row {\r\n    display: flex;\r\n  }\r\n  .right {\r\n    flex-grow: 1;\r\n  }\r\n  .no-requests {\r\n    height: 70vh;\r\n    font-size: 1.5em;\r\n    display: grid;\r\n    place-items: center;\r\n    color: var(--highlight);\r\n  }\r\n  .placeholder {\r\n    min-height: 85vh;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  @media screen and (max-width: 1480px){\r\n    .grid-row {\r\n        flex-direction: column;\r\n      }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router, Route } from \"svelte-routing\";\r\n  import Home from \"./routes/Home.svelte\";\r\n  import Generate from \"./routes/Generate.svelte\";\r\n  import SignIn from \"./routes/SignIn.svelte\";\r\n  import Dashboard from \"./routes/Dashboard.svelte\";\r\n\r\n  // Used for SSR. A falsy value is ignored by the Router.\r\n  export let url = \"\";\r\n</script>\r\n\r\n<Router {url}>\r\n    <Route path=\"/\" component={Home} />\r\n    <Route path=\"/generate\" component={Generate} />\r\n    <Route path=\"/dashboard\" component={SignIn} />\r\n    <Route path=\"/dashboard/:userID\" component={Dashboard} />\r\n</Router>\r\n\r\n<style>\r\n\r\n</style>\r\n","import App from \"./App.svelte\";\r\nnew App({\r\n    target: document.getElementById(\"app\"),\r\n    hydrate: true\r\n});\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append_hydration","target","node","hydrate_init","children","childNodes","nodeName","myChildren","claim_order","m","Int32Array","longest","current","seqLen","idx","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentNode","firstChild","nextSibling","appendChild","insert_hydration","detach","removeChild","destroy_each","iterations","detaching","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","Array","from","claim_node","nodes","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","init_claim_info","resultNode","replacement","splice","claim_element","attributes","create_element","remove","v","claim_element_base","claim_text","nodeType","dataStr","startsWith","splitText","claim_space","set_data","wholeText","set_input_value","input","set_style","important","style","removeProperty","setProperty","construct_svelte_component","set_current_component","get_current_component","Error","onMount","on_mount","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_object","spread_props","create_component","claim_component","parent_nodes","l","mount_component","customElement","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","rest","hydrate","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","replace","Date","now","replaceState","pushState","e","createHistory","Boolean","window","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","paramRe","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","combinePaths","basepath","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","levels","updates","to_null_out","accounted_for","n","if_block","create_if_block","routeParams","routeProps","$activeRoute","$$invalidate","div3","img","h1","div2","a0","div0","a1","div1","div7","div6","h2","button0","button1","img0","div5","div4","img1","generateBtn","copyBtn","copiedNotification","loading","generatedKey","apiKey","response","fetch","status","json","display","navigator","clipboard","writeText","visibility","$$value","button","console","log","replaceAll","t2_value","t2","div","span","thisWeek","date","weekAgo","setDate","getDate","requestsPerHour","totalRequests","created_at","toFixed","build","div14","div8","div13","div9","div10","div11","div12","quantile","arr","q","sorted","asc","pos","floor","setMarkerPosition","median","position","x","log10","markerPosition","marker","left","LQ","UQ","responseTimes","response_time","t0_value","count","t4_value","t0","t4","setEndpointLabelVisibility","endpoint","getElementById","endpointPath","endpointCount","externalLabel","clientWidth","freq","endpointID","endpointFreq","freqArr","maxCount","endpoints","setEndpointLabels","setTimeout","pastWeek","successRate","successfulRequests","defaultLayout","monthAgo","tomorrow","title","autosize","margin","t","pad","hovermode","plot_bgcolor","paper_bgcolor","height","yaxis","gridcolor","showgrid","fixedrange","xaxis","range","visible","dragmode","bars","requestFreq","setHours","requestFreqArr","dates","requests","y","color","hovertemplate","showlegend","plotDiv","genPlot","plotData","layout","config","responsive","showSendToCloud","displayModeBar","Plotly","newPlot","total","point","div_title_value","pastMonth","daysAgo","getTime","success","successful","successArr","setSuccessRate","browserPlotLayout","colors","pieChart","browserCount","browser","userAgent","user_agent","browsers","labels","osPlotLayout","osCount","os","versions","plotDiv2","versionCount","version","setVersions","getHours","toString","theta","font","polar","bargap","bgcolor","angularaxis","direction","radialaxis","failed","userID","formatUUID","fetchData","Home","Generate","SignIn","Dashboard"],"mappings":"yBAAA,SAASA,IAAU,CAEnB,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,CACX,CASA,SAASG,EAAIC,GACT,OAAOA,GACX,CACA,SAASC,IACL,OAAOC,OAAOC,OAAO,KACzB,CACA,SAASC,EAAQC,GACbA,EAAIC,QAAQP,EAChB,CACA,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,CAClB,CACA,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,CAChF,CACA,IAAIE,EACJ,SAASC,EAAcC,EAAaC,GAKhC,OAJKH,IACDA,EAAuBI,SAASC,cAAc,MAElDL,EAAqBM,KAAOH,EACrBD,IAAgBF,EAAqBM,IAChD,CAYA,SAASC,EAAUC,KAAUC,GACzB,GAAa,MAATD,EACA,OAAO1B,EAEX,MAAM4B,EAAQF,EAAMD,aAAaE,GACjC,OAAOC,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,CAC3D,CAMA,SAASE,EAAoBC,EAAWL,EAAOM,GAC3CD,EAAUE,GAAGC,WAAWC,KAAKV,EAAUC,EAAOM,GAClD,CACA,SAASI,EAAYC,EAAYC,EAAKC,EAASjC,GAC3C,GAAI+B,EAAY,CACZ,MAAMG,EAAWC,EAAiBJ,EAAYC,EAAKC,EAASjC,GAC5D,OAAO+B,EAAW,GAAGG,EACxB,CACL,CACA,SAASC,EAAiBJ,EAAYC,EAAKC,EAASjC,GAChD,OAAO+B,EAAW,IAAM/B,EAClBL,EAAOsC,EAAQD,IAAII,QAASL,EAAW,GAAG/B,EAAGgC,KAC7CC,EAAQD,GAClB,CACA,SAASK,EAAiBN,EAAYE,EAASK,EAAOtC,GAClD,GAAI+B,EAAW,IAAM/B,EAAI,CACrB,MAAMuC,EAAOR,EAAW,GAAG/B,EAAGsC,IAC9B,QAAsBE,IAAlBP,EAAQK,MACR,OAAOC,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIX,EAAQK,MAAMO,OAAQN,EAAKM,QAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC1BL,EAAOK,GAAKb,EAAQK,MAAMQ,GAAKP,EAAKO,GAExC,OAAOL,CACV,CACD,OAAOR,EAAQK,MAAQC,CAC1B,CACD,OAAON,EAAQK,KACnB,CACA,SAASS,EAAiBC,EAAMC,EAAiBjB,EAAKC,EAASiB,EAAcC,GACzE,GAAID,EAAc,CACd,MAAME,EAAejB,EAAiBc,EAAiBjB,EAAKC,EAASkB,GACrEH,EAAKK,EAAED,EAAcF,EACxB,CACL,CAKA,SAASI,EAAyBrB,GAC9B,GAAIA,EAAQD,IAAIa,OAAS,GAAI,CACzB,MAAMP,EAAQ,GACRO,EAASZ,EAAQD,IAAIa,OAAS,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IACxBR,EAAMQ,IAAM,EAEhB,OAAOR,CACV,CACD,OAAQ,CACZ,CACA,SAASiB,EAAuBC,GAC5B,MAAMC,EAAS,CAAA,EACf,IAAK,MAAM3D,KAAK0D,EACC,MAAT1D,EAAE,KACF2D,EAAO3D,GAAK0D,EAAM1D,IAC1B,OAAO2D,CACX,CAuFA,IAiwBIC,EAjwBAC,GAAe,EAOnB,SAASC,EAAYC,EAAKC,EAAMC,EAAKC,GAEjC,KAAOH,EAAMC,GAAM,CACf,MAAMG,EAAMJ,GAAQC,EAAOD,GAAQ,GAC/BE,EAAIE,IAAQD,EACZH,EAAMI,EAAM,EAGZH,EAAOG,CAEd,CACD,OAAOJ,CACX,CA8GA,SAASK,EAAiBC,EAAQC,GAC9B,GAAIT,EAAc,CAMd,KApHR,SAAsBQ,GAClB,GAAIA,EAAOE,aACP,OACJF,EAAOE,cAAe,EAEtB,IAAIC,EAAWH,EAAOI,WAEtB,GAAwB,SAApBJ,EAAOK,SAAqB,CAC5B,MAAMC,EAAa,GACnB,IAAK,IAAI3B,EAAI,EAAGA,EAAIwB,EAASzB,OAAQC,IAAK,CACtC,MAAMsB,EAAOE,EAASxB,QACGN,IAArB4B,EAAKM,aACLD,EAAW5C,KAAKuC,EAEvB,CACDE,EAAWG,CACd,CAmBD,MAAME,EAAI,IAAIC,WAAWN,EAASzB,OAAS,GAErCQ,EAAI,IAAIuB,WAAWN,EAASzB,QAClC8B,EAAE,IAAM,EACR,IAAIE,EAAU,EACd,IAAK,IAAI/B,EAAI,EAAGA,EAAIwB,EAASzB,OAAQC,IAAK,CACtC,MAAMgC,EAAUR,EAASxB,GAAG4B,YAItBK,GAAWF,EAAU,GAAKP,EAASK,EAAEE,IAAUH,aAAeI,EAAWD,EAAU,EAAIjB,EAAY,EAAGiB,GAASG,GAAOV,EAASK,EAAEK,IAAMN,aAAaI,IAAY,EACtKzB,EAAEP,GAAK6B,EAAEI,GAAU,EACnB,MAAME,EAASF,EAAS,EAExBJ,EAAEM,GAAUnC,EACZ+B,EAAUlC,KAAKC,IAAIqC,EAAQJ,EAC9B,CAED,MAAMK,EAAM,GAENC,EAAS,GACf,IAAIC,EAAOd,EAASzB,OAAS,EAC7B,IAAK,IAAIwC,EAAMV,EAAEE,GAAW,EAAU,GAAPQ,EAAUA,EAAMhC,EAAEgC,EAAM,GAAI,CAEvD,IADAH,EAAIrD,KAAKyC,EAASe,EAAM,IACjBD,GAAQC,EAAKD,IAChBD,EAAOtD,KAAKyC,EAASc,IAEzBA,GACH,CACD,KAAOA,GAAQ,EAAGA,IACdD,EAAOtD,KAAKyC,EAASc,IAEzBF,EAAII,UAEJH,EAAOI,MAAK,CAAC7E,EAAGC,IAAMD,EAAEgE,YAAc/D,EAAE+D,cAExC,IAAK,IAAI5B,EAAI,EAAG0C,EAAI,EAAG1C,EAAIqC,EAAOtC,OAAQC,IAAK,CAC3C,KAAO0C,EAAIN,EAAIrC,QAAUsC,EAAOrC,GAAG4B,aAAeQ,EAAIM,GAAGd,aACrDc,IAEJ,MAAMC,EAASD,EAAIN,EAAIrC,OAASqC,EAAIM,GAAK,KACzCrB,EAAOuB,aAAaP,EAAOrC,GAAI2C,EAClC,CACL,CAiCQE,CAAaxB,SACoB3B,IAA5B2B,EAAOyB,kBAAiE,OAA5BzB,EAAOyB,kBAA+BzB,EAAOyB,iBAAiBC,aAAe1B,KAC1HA,EAAOyB,iBAAmBzB,EAAO2B,YAGD,OAA5B3B,EAAOyB,uBAAuEpD,IAAxC2B,EAAOyB,iBAAiBlB,aAClEP,EAAOyB,iBAAmBzB,EAAOyB,iBAAiBG,YAElD3B,IAASD,EAAOyB,sBAESpD,IAArB4B,EAAKM,aAA6BN,EAAKyB,aAAe1B,GACtDA,EAAOuB,aAAatB,EAAMD,EAAOyB,kBAIrCzB,EAAOyB,iBAAmBxB,EAAK2B,WAEtC,MACQ3B,EAAKyB,aAAe1B,GAA+B,OAArBC,EAAK2B,aACxC5B,EAAO6B,YAAY5B,EAE3B,CAIA,SAAS6B,EAAiB9B,EAAQC,EAAMqB,GAChC9B,IAAiB8B,EACjBvB,EAAiBC,EAAQC,GAEpBA,EAAKyB,aAAe1B,GAAUC,EAAK2B,aAAeN,GACvDtB,EAAOuB,aAAatB,EAAMqB,GAAU,KAE5C,CACA,SAASS,EAAO9B,GACRA,EAAKyB,YACLzB,EAAKyB,WAAWM,YAAY/B,EAEpC,CACA,SAASgC,EAAaC,EAAYC,GAC9B,IAAK,IAAIxD,EAAI,EAAGA,EAAIuD,EAAWxD,OAAQC,GAAK,EACpCuD,EAAWvD,IACXuD,EAAWvD,GAAGyD,EAAED,EAE5B,CACA,SAASE,EAAQC,GACb,OAAOzF,SAASC,cAAcwF,EAClC,CAmBA,SAASC,EAAKC,GACV,OAAO3F,SAAS4F,eAAeD,EACnC,CACA,SAASE,IACL,OAAOH,EAAK,IAChB,CACA,SAASI,IACL,OAAOJ,EAAK,GAChB,CACA,SAASK,EAAO3C,EAAM4C,EAAOC,EAASC,GAElC,OADA9C,EAAK+C,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM9C,EAAKgD,oBAAoBJ,EAAOC,EAASC,EAC1D,CA6BA,SAASG,EAAKjD,EAAMkD,EAAWtD,GACd,MAATA,EACAI,EAAKmD,gBAAgBD,GAChBlD,EAAKoD,aAAaF,KAAetD,GACtCI,EAAKqD,aAAaH,EAAWtD,EACrC,CAgEA,SAASM,EAASkC,GACd,OAAOkB,MAAMC,KAAKnB,EAAQjC,WAC9B,CAMA,SAASqD,EAAWC,EAAOC,EAAWC,EAAaC,EAAYC,GAAsB,IALrF,SAAyBJ,QACIrF,IAArBqF,EAAMK,aACNL,EAAMK,WAAa,CAAEC,WAAY,EAAGC,cAAe,GAE3D,CAGIC,CAAgBR,GAChB,MAAMS,EAAa,MAEf,IAAK,IAAIxF,EAAI+E,EAAMK,WAAWC,WAAYrF,EAAI+E,EAAMhF,OAAQC,IAAK,CAC7D,MAAMsB,EAAOyD,EAAM/E,GACnB,GAAIgF,EAAU1D,GAAO,CACjB,MAAMmE,EAAcR,EAAY3D,GAUhC,YAToB5B,IAAhB+F,EACAV,EAAMW,OAAO1F,EAAG,GAGhB+E,EAAM/E,GAAKyF,EAEVN,IACDJ,EAAMK,WAAWC,WAAarF,GAE3BsB,CACV,CACJ,CAGD,IAAK,IAAItB,EAAI+E,EAAMK,WAAWC,WAAa,EAAGrF,GAAK,EAAGA,IAAK,CACvD,MAAMsB,EAAOyD,EAAM/E,GACnB,GAAIgF,EAAU1D,GAAO,CACjB,MAAMmE,EAAcR,EAAY3D,GAchC,YAboB5B,IAAhB+F,EACAV,EAAMW,OAAO1F,EAAG,GAGhB+E,EAAM/E,GAAKyF,EAEVN,OAGoBzF,IAAhB+F,GAELV,EAAMK,WAAWC,aAJjBN,EAAMK,WAAWC,WAAarF,EAM3BsB,CACV,CACJ,CAED,OAAO4D,GACV,EA1CkB,GA6CnB,OAFAM,EAAW5D,YAAcmD,EAAMK,WAAWE,cAC1CP,EAAMK,WAAWE,eAAiB,EAC3BE,CACX,CAcA,SAASG,EAAcZ,EAAOpB,EAAMiC,GAChC,OAdJ,SAA4Bb,EAAOpB,EAAMiC,EAAYC,GACjD,OAAOf,EAAWC,GAAQzD,GAASA,EAAKI,WAAaiC,IAAOrC,IACxD,MAAMwE,EAAS,GACf,IAAK,IAAIpD,EAAI,EAAGA,EAAIpB,EAAKsE,WAAW7F,OAAQ2C,IAAK,CAC7C,MAAM8B,EAAYlD,EAAKsE,WAAWlD,GAC7BkD,EAAWpB,EAAUb,OACtBmC,EAAO/G,KAAKyF,EAAUb,KAE7B,CACDmC,EAAOtI,SAAQuI,GAAKzE,EAAKmD,gBAAgBsB,IACzB,IACjB,IAAMF,EAAelC,IAC5B,CAEWqC,CAAmBjB,EAAOpB,EAAMiC,EAAYlC,EACvD,CAIA,SAASuC,EAAWlB,EAAOlB,GACvB,OAAOiB,EAAWC,GAAQzD,GAA2B,IAAlBA,EAAK4E,WAAiB5E,IACrD,MAAM6E,EAAU,GAAKtC,EACrB,GAAIvC,EAAKuC,KAAKuC,WAAWD,IACrB,GAAI7E,EAAKuC,KAAK9D,SAAWoG,EAAQpG,OAC7B,OAAOuB,EAAK+E,UAAUF,EAAQpG,aAIlCuB,EAAKuC,KAAOsC,CACf,IACF,IAAMvC,EAAKC,KAAO,EAEzB,CACA,SAASyC,EAAYvB,GACjB,OAAOkB,EAAWlB,EAAO,IAC7B,CA4BA,SAASwB,EAAS3C,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAK4C,YAAc3C,IACnBD,EAAKC,KAAOA,EACpB,CACA,SAAS4C,EAAgBC,EAAOxF,GAC5BwF,EAAMxF,MAAiB,MAATA,EAAgB,GAAKA,CACvC,CASA,SAASyF,EAAUrF,EAAML,EAAKC,EAAO0F,GACnB,OAAV1F,EACAI,EAAKuF,MAAMC,eAAe7F,GAG1BK,EAAKuF,MAAME,YAAY9F,EAAKC,EAAO0F,EAAY,YAAc,GAErE,CAqLA,SAASI,EAA2BrI,EAAW+B,GAC3C,OAAO,IAAI/B,EAAU+B,EACzB,CAyIA,SAASuG,EAAsBtI,GAC3BiC,EAAoBjC,CACxB,CACA,SAASuI,IACL,IAAKtG,EACD,MAAM,IAAIuG,MAAM,oDACpB,OAAOvG,CACX,CAoBA,SAASwG,EAAQlK,GACbgK,IAAwBrI,GAAGwI,SAAStI,KAAK7B,EAC7C,CAyDA,SAASoK,EAAWrG,EAAKsG,GAErB,OADAL,IAAwBrI,GAAG0I,QAAQC,IAAIvG,EAAKsG,GACrCA,CACX,CAOA,SAASE,EAAWxG,GAChB,OAAOiG,IAAwBrI,GAAG0I,QAAQG,IAAIzG,EAClD,CA+BA,MAAM0G,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBjL,GACzB2K,EAAiB9I,KAAK7B,EAC1B,CAsBA,MAAMkL,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkB5H,EACxB,EAAG,CAGC,KAAO0H,EAAWX,EAAiB5H,QAAQ,CACvC,MAAMpB,EAAYgJ,EAAiBW,GACnCA,IACArB,EAAsBtI,GACtB8J,GAAO9J,EAAUE,GACpB,CAID,IAHAoI,EAAsB,MACtBU,EAAiB5H,OAAS,EAC1BuI,EAAW,EACJV,EAAkB7H,QACrB6H,EAAkBc,KAAlBd,GAIJ,IAAK,IAAI5H,EAAI,EAAGA,EAAI6H,EAAiB9H,OAAQC,GAAK,EAAG,CACjD,MAAMpB,EAAWiJ,EAAiB7H,GAC7BoI,EAAeO,IAAI/J,KAEpBwJ,EAAeQ,IAAIhK,GACnBA,IAEP,CACDiJ,EAAiB9H,OAAS,CAClC,OAAa4H,EAAiB5H,QAC1B,KAAO+H,EAAgB/H,QACnB+H,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBE,EAAeS,QACf5B,EAAsBuB,EAC1B,CACA,SAASC,GAAO5J,GACZ,GAAoB,OAAhBA,EAAGiK,SAAmB,CACtBjK,EAAG4J,SACHnL,EAAQuB,EAAGkK,eACX,MAAMvJ,EAAQX,EAAGW,MACjBX,EAAGW,MAAQ,EAAE,GACbX,EAAGiK,UAAYjK,EAAGiK,SAASvI,EAAE1B,EAAGK,IAAKM,GACrCX,EAAGmK,aAAaxL,QAAQ2K,EAC3B,CACL,CAeA,MAAMc,GAAW,IAAIZ,IACrB,IAAIa,GACJ,SAASC,KACLD,GAAS,CACLE,EAAG,EACHC,EAAG,GACH9I,EAAG2I,GAEX,CACA,SAASI,KACAJ,GAAOE,GACR9L,EAAQ4L,GAAOG,GAEnBH,GAASA,GAAO3I,CACpB,CACA,SAASgJ,GAAcC,EAAOC,GACtBD,GAASA,EAAMxJ,IACfiJ,GAASS,OAAOF,GAChBA,EAAMxJ,EAAEyJ,GAEhB,CACA,SAASE,GAAeH,EAAOC,EAAOrG,EAAQxE,GAC1C,GAAI4K,GAASA,EAAMI,EAAG,CAClB,GAAIX,GAASN,IAAIa,GACb,OACJP,GAASL,IAAIY,GACbN,GAAOG,EAAEtK,MAAK,KACVkK,GAASS,OAAOF,GACZ5K,IACIwE,GACAoG,EAAM/F,EAAE,GACZ7E,IACH,IAEL4K,EAAMI,EAAEH,EACX,MACQ7K,GACLA,GAER,CAmcA,SAASiL,GAAkBC,GACvB,MAA+B,iBAAjBA,GAA8C,OAAjBA,EAAwBA,EAAe,EACtF,CA2NA,SAASC,GAAiBP,GACtBA,GAASA,EAAMH,GACnB,CACA,SAASW,GAAgBR,EAAOS,GAC5BT,GAASA,EAAMU,EAAED,EACrB,CACA,SAASE,GAAgBxL,EAAW0C,EAAQsB,EAAQyH,GAChD,MAAMtB,SAAEA,EAAQE,aAAEA,GAAiBrK,EAAUE,GAC7CiK,GAAYA,EAASjH,EAAER,EAAQsB,GAC1ByH,GAEDjC,GAAoB,KAChB,MAAMkC,EAAiB1L,EAAUE,GAAGwI,SAASiD,IAAIrN,GAAKsN,OAAO9M,GAIzDkB,EAAUE,GAAGC,WACbH,EAAUE,GAAGC,WAAWC,QAAQsL,GAKhC/M,EAAQ+M,GAEZ1L,EAAUE,GAAGwI,SAAW,EAAE,IAGlC2B,EAAaxL,QAAQ2K,EACzB,CACA,SAASqC,GAAkB7L,EAAW6E,GAClC,MAAM3E,EAAKF,EAAUE,GACD,OAAhBA,EAAGiK,WACHxL,EAAQuB,EAAGC,YACXD,EAAGiK,UAAYjK,EAAGiK,SAASrF,EAAED,GAG7B3E,EAAGC,WAAaD,EAAGiK,SAAW,KAC9BjK,EAAGK,IAAM,GAEjB,CACA,SAASuL,GAAW9L,EAAWqB,IACI,IAA3BrB,EAAUE,GAAGW,MAAM,KACnBmI,EAAiB5I,KAAKJ,GAh1BrBuJ,IACDA,GAAmB,EACnBH,EAAiB2C,KAAKnC,IAg1BtB5J,EAAUE,GAAGW,MAAMmL,KAAK,IAE5BhM,EAAUE,GAAGW,MAAOQ,EAAI,GAAM,IAAO,GAAMA,EAAI,EACnD,CACA,SAAS4K,GAAKjM,EAAWyF,EAASyG,EAAUC,EAAiBC,EAAWrK,EAAOsK,EAAexL,EAAQ,EAAE,IACpG,MAAMyL,EAAmBrK,EACzBqG,EAAsBtI,GACtB,MAAME,EAAKF,EAAUE,GAAK,CACtBiK,SAAU,KACV5J,IAAK,GAELwB,QACA+H,OAAQ7L,EACRmO,YACAG,MAAO/N,IAEPkK,SAAU,GACVvI,WAAY,GACZqM,cAAe,GACfpC,cAAe,GACfC,aAAc,GACdzB,QAAS,IAAI6D,IAAIhH,EAAQmD,UAAY0D,EAAmBA,EAAiBpM,GAAG0I,QAAU,KAEtFhJ,UAAWpB,IACXqC,QACA6L,YAAY,EACZC,KAAMlH,EAAQ/C,QAAU4J,EAAiBpM,GAAGyM,MAEhDN,GAAiBA,EAAcnM,EAAGyM,MAClC,IAAIC,GAAQ,EAkBZ,GAjBA1M,EAAGK,IAAM2L,EACHA,EAASlM,EAAWyF,EAAQ1D,OAAS,CAAE,GAAE,CAACV,EAAGwL,KAAQC,KACnD,MAAMvK,EAAQuK,EAAK1L,OAAS0L,EAAK,GAAKD,EAOtC,OANI3M,EAAGK,KAAO6L,EAAUlM,EAAGK,IAAIc,GAAInB,EAAGK,IAAIc,GAAKkB,MACtCrC,EAAGwM,YAAcxM,EAAGqM,MAAMlL,IAC3BnB,EAAGqM,MAAMlL,GAAGkB,GACZqK,GACAd,GAAW9L,EAAWqB,IAEvBwL,CAAG,IAEZ,GACN3M,EAAG4J,SACH8C,GAAQ,EACRjO,EAAQuB,EAAGkK,eAEXlK,EAAGiK,WAAWgC,GAAkBA,EAAgBjM,EAAGK,KAC/CkF,EAAQ/C,OAAQ,CAChB,GAAI+C,EAAQsH,QAAS,CA3wDzB7K,GAAe,EA6wDP,MAAMkE,EAAQvD,EAAS4C,EAAQ/C,QAE/BxC,EAAGiK,UAAYjK,EAAGiK,SAASoB,EAAEnF,GAC7BA,EAAMvH,QAAQ4F,EACjB,MAGGvE,EAAGiK,UAAYjK,EAAGiK,SAASO,IAE3BjF,EAAQuH,OACRpC,GAAc5K,EAAUE,GAAGiK,UAC/BqB,GAAgBxL,EAAWyF,EAAQ/C,OAAQ+C,EAAQzB,OAAQyB,EAAQgG,eArxDvEvJ,GAAe,EAuxDX0H,GACH,CACDtB,EAAsBgE,EAC1B,CAoDA,MAAMW,GACFC,WACIrB,GAAkBsB,KAAM,GACxBA,KAAKD,SAAWjP,CACnB,CACDmP,IAAIC,EAAMpN,GACN,IAAKnB,EAAYmB,GACb,OAAOhC,EAEX,MAAM2B,EAAauN,KAAKjN,GAAGN,UAAUyN,KAAUF,KAAKjN,GAAGN,UAAUyN,GAAQ,IAEzE,OADAzN,EAAUQ,KAAKH,GACR,KACH,MAAMqN,EAAQ1N,EAAU2N,QAAQtN,IACjB,IAAXqN,GACA1N,EAAUmH,OAAOuG,EAAO,EAAE,CAErC,CACDE,KAAKC,GA1gET,IAAkBC,EA2gENP,KAAKQ,QA3gECD,EA2gEkBD,EA1gEG,IAA5BhP,OAAOmP,KAAKF,GAAKtM,UA2gEhB+L,KAAKjN,GAAGwM,YAAa,EACrBS,KAAKQ,MAAMF,GACXN,KAAKjN,GAAGwM,YAAa,EAE5B,ECvjEL,MAAMmB,GAAmB,GAgBzB,SAASC,GAASvL,EAAOwL,EAAQ9P,GAC7B,IAAI+P,EACJ,MAAMC,EAAc,IAAIvE,IACxB,SAASb,EAAIqF,GACT,GAAIlP,EAAeuD,EAAO2L,KACtB3L,EAAQ2L,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiBzM,OACpC,IAAK,MAAMgN,KAAcH,EACrBG,EAAW,KACXP,GAAiBzN,KAAKgO,EAAY7L,GAEtC,GAAI4L,EAAW,CACX,IAAK,IAAI9M,EAAI,EAAGA,EAAIwM,GAAiBzM,OAAQC,GAAK,EAC9CwM,GAAiBxM,GAAG,GAAGwM,GAAiBxM,EAAI,IAEhDwM,GAAiBzM,OAAS,CAC7B,CACJ,CAER,CAmBD,MAAO,CAAEyH,MAAKiB,OAlBd,SAAgBvL,GACZsK,EAAItK,EAAGgE,GACV,EAgBqB7C,UAftB,SAAmBpB,EAAK+P,EAAapQ,GACjC,MAAMmQ,EAAa,CAAC9P,EAAK+P,GAMzB,OALAJ,EAAYhE,IAAImE,GACS,IAArBH,EAAYK,OACZN,EAAOD,EAAMlF,IAAQ5K,GAEzBK,EAAIiE,GACG,KACH0L,EAAYlD,OAAOqD,GACM,IAArBH,EAAYK,OACZN,IACAA,EAAO,KACV,CAER,EAEL,CACA,SAASO,GAAQC,EAAQjQ,EAAIkQ,GACzB,MAAMC,GAAUzI,MAAM0I,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAOtQ,EAAG6C,OAAS,EACzB,OAzDqB2M,EAyDWlF,IAC5B,IAAIiG,GAAS,EACb,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVC,EAAUhR,EACd,MAAMiR,EAAO,KACT,GAAIF,EACA,OAEJC,IACA,MAAMjN,EAASzD,EAAGmQ,EAASK,EAAO,GAAKA,EAAQlG,GAC3CgG,EACAhG,EAAI7G,GAGJiN,EAAUnQ,EAAYkD,GAAUA,EAAS/D,CAC5C,EAECkR,EAAgBP,EAAajD,KAAI,CAAChM,EAAO0B,IAAM3B,EAAUC,GAAQ4C,IACnEwM,EAAO1N,GAAKkB,EACZyM,KAAa,GAAK3N,GACdyN,GACAI,GACH,IACF,KACCF,GAAY,GAAK3N,CAAE,MAIvB,OAFAyN,GAAS,EACTI,IACO,WACHvQ,EAAQwQ,GACRF,GACZ,CAAS,EAxFE,CACHvP,UAAWoO,GAuDCW,EAvDeV,GAAOrO,WAF1C,IAAyBqO,CA2FzB,CCpGO,MAAMqB,GAAW,CAAA,EACXC,GAAS,CAAE,ECKxB,SAASC,GAAYC,GACnB,MAAO,IACFA,EAAOC,SACVC,MAAOF,EAAOG,QAAQD,MACtBnN,IAAMiN,EAAOG,QAAQD,OAASF,EAAOG,QAAQD,MAAMnN,KAAQ,UAE/D,CAuFA,MAKMqN,GA1FN,SAAuBJ,EAAQ9J,GAC7B,MAAMmK,EAAY,GAClB,IAAIJ,EAAWF,GAAYC,GAE3B,MAAO,CACDC,eACF,OAAOA,CACR,EAEDlK,OAAOuK,GACLD,EAAUxP,KAAKyP,GAEf,MAAMC,EAAmB,KACvBN,EAAWF,GAAYC,GACvBM,EAAS,CAAEL,WAAUO,OAAQ,OAAQ,EAKvC,OAFAR,EAAO7J,iBAAiB,WAAYoK,GAE7B,KACLP,EAAO5J,oBAAoB,WAAYmK,GAEvC,MAAMxC,EAAQsC,EAAUrC,QAAQsC,GAChCD,EAAU7I,OAAOuG,EAAO,EAAE,CAE7B,EAED0C,SAASC,GAAIR,MAAEA,EAAKS,QAAEA,GAAU,GAAU,IACxCT,EAAQ,IAAKA,EAAOnN,IAAK6N,KAAKC,MAAQ,IAEtC,IACMF,EACFX,EAAOG,QAAQW,aAAaZ,EAAO,KAAMQ,GAEzCV,EAAOG,QAAQY,UAAUb,EAAO,KAAMQ,EAIzC,CAFC,MAAOM,GACPhB,EAAOC,SAASU,EAAU,UAAY,UAAUD,EACjD,CAEDT,EAAWF,GAAYC,GACvBK,EAAU/Q,SAAQgR,GAAYA,EAAS,CAAEL,WAAUO,OAAQ,UAC5D,EAEL,CA8CsBS,CALJC,QACE,oBAAXC,QACLA,OAAOnR,UACPmR,OAAOnR,SAASC,eAE4BkR,OA3ChD,SAA4BC,EAAkB,KAC5C,IAAIrD,EAAQ,EACZ,MAAMsD,EAAQ,CAAC,CAAEC,SAAUF,EAAiBG,OAAQ,KAC9CC,EAAS,GAEf,MAAO,CACDvB,eACF,OAAOoB,EAAMtD,EACd,EACD5H,iBAAiBV,EAAMzG,GAAM,EAC7BoH,oBAAoBX,EAAMzG,GAAM,EAChCmR,QAAS,CACHsB,cACF,OAAOJ,CACR,EACGtD,YACF,OAAOA,CACR,EACGmC,YACF,OAAOsB,EAAOzD,EACf,EACDgD,UAAUb,EAAOwB,EAAGC,GAClB,MAAOL,EAAUC,EAAS,IAAMI,EAAIC,MAAM,KAC1C7D,IACAsD,EAAMxQ,KAAK,CAAEyQ,WAAUC,WACvBC,EAAO3Q,KAAKqP,EACb,EACDY,aAAaZ,EAAOwB,EAAGC,GACrB,MAAOL,EAAUC,EAAS,IAAMI,EAAIC,MAAM,KAC1CP,EAAMtD,GAAS,CAAEuD,WAAUC,UAC3BC,EAAOzD,GAASmC,CACjB,GAGP,CASyD2B,IClGnDC,GAAU,SAyChB,SAASC,GAAQC,GACf,MAAsB,MAAfA,EAAQ,EACjB,CAOA,SAASC,GAAWN,GAClB,OACEA,EAEGhB,QAAQ,eAAgB,IACxBiB,MAAM,IAEb,CAOA,SAASM,GAAaC,GACpB,OAAOA,EAAIxB,QAAQ,eAAgB,GACrC,CAQA,SAASyB,GAAUC,EAAOtE,GAmBxB,MAAO,CAAEsE,QAAOC,MAlBFD,EAAME,QAChB,EACAN,GAAWI,EAAMG,MAAMC,QAAO,CAACH,EAAON,KACpCM,GA5Ee,GAqBvB,SAAuBN,GACrB,MAAmB,KAAZA,CACT,CAuDYU,CAAcV,IAhD1B,SAAmBA,GACjB,OAAOF,GAAQa,KAAKX,EACtB,CAgDmBY,CAAUZ,GAEVD,GAAQC,GACjBM,GAASO,EAETP,GApFY,EAgFZA,GA/Ea,EA6EbA,GA3EU,EAoFLA,IACN,GAEgBvE,QACzB,CAwCA,SAAS+E,GAAKC,EAAQpB,GACpB,IAAIqB,EACAC,EAEJ,MAAOC,GAAevB,EAAIC,MAAM,KAC1BuB,EAAclB,GAAWiB,GACzBE,EAA+B,KAAnBD,EAAY,GACxBE,EAxCR,SAAoBN,GAClB,OACEA,EACG3G,IAAIgG,IAEJ7N,MAAK,CAAC7E,EAAGC,IACRD,EAAE4S,MAAQ3S,EAAE2S,MAAQ,EAAI5S,EAAE4S,MAAQ3S,EAAE2S,OAAS,EAAI5S,EAAEqO,MAAQpO,EAAEoO,OAGrE,CA+BiBuF,CAAWP,GAE1B,IAAK,IAAIjR,EAAI,EAAGkK,EAAIqH,EAAOxR,OAAQC,EAAIkK,EAAGlK,IAAK,CAC7C,MAAMuQ,EAAQgB,EAAOvR,GAAGuQ,MACxB,IAAIkB,GAAS,EAEb,GAAIlB,EAAME,QAAS,CACjBU,EAAW,CACTZ,QACAmB,OAAQ,CAAE,EACV7B,OAEF,QACD,CAED,MAAM8B,EAAgBxB,GAAWI,EAAMG,MACjCgB,EAAS,CAAA,EACT5R,EAAMD,KAAKC,IAAIuR,EAAYtR,OAAQ4R,EAAc5R,QACvD,IAAIkM,EAAQ,EAEZ,KAAOA,EAAQnM,EAAKmM,IAAS,CAC3B,MAAM2F,EAAeD,EAAc1F,GAC7B4F,EAAaR,EAAYpF,GAE/B,QAAqBvM,IAAjBkS,GAA8B3B,GAAQ2B,GAAe,CAMvDF,EAFmC,MAAjBE,EAAuB,IAAMA,EAAatS,MAAM,IAE9C+R,EACjB/R,MAAM2M,GACN3B,IAAIwH,oBACJC,KAAK,KACR,KACD,CAED,QAAmBrS,IAAfmS,EAA0B,CAI5BJ,GAAS,EACT,KACD,CAED,IAAIO,EAAehC,GAAQiC,KAAKL,GAEhC,GAAII,IAAiBV,EAAW,CAC9B,MAAMpQ,EAAQ4Q,mBAAmBD,GACjCH,EAAOM,EAAa,IAAM9Q,CAClC,MAAa,GAAI0Q,IAAiBC,EAAY,CAItCJ,GAAS,EACT,KACD,CACF,CAED,IAAKA,EAAQ,CACXP,EAAQ,CACNX,QACAmB,SACA7B,IAAK,IAAMwB,EAAY/R,MAAM,EAAG2M,GAAO8F,KAAK,MAE9C,KACD,CACF,CAED,OAAOb,GAASC,GAAY,IAC9B,CAiGA,SAASe,GAAaC,EAAUzB,GAC9B,MAAO,GAAGN,GACC,MAATM,EAAeyB,EAAW,GAAG/B,GAAa+B,MAAa/B,GAAaM,QAExE,8TCvTayB,SAAAA,EAAW,KAAG/F,GACdnO,IAAAA,EAAM,MAAImO,QAEfgG,EAAkB3K,EAAWsG,IAC7BsE,EAAgB5K,EAAWuG,IAE3BiD,EAASxE,GAAQ,+BACjB6F,EAAc7F,GAAS,MACzB,IAAA8F,GAAiB,EAIf,MAAApE,EACJiE,GACA3F,GAASxO,EAAQ,CAAAuR,SAAUvR,GAAQqQ,GAAcH,+BAM7C,MAAAqE,EAAOH,EACTA,EAAcI,WACdhG,IACEiE,KAAMyB,EACNtC,IAAKsC,+BAGLM,EAAavF,GAAS,CAAAsF,EAAMF,IAAW,EAAKE,EAAMF,MAElD,GAAgB,OAAhBA,SACKE,QAGD9B,KAAMyB,GAAaK,SACnBjC,EAAKV,IAAEA,GAAQyC,EAKd,MAAA,CAAA5B,KAFIH,EAAME,QAAU0B,EAAW5B,EAAMG,KAAK7B,QAAQ,QAAS,IAErDgB,MAAG,WA4DfuC,IAGHhL,GAAO,IACYkH,GAAcrK,QAAOoK,IACpCF,EAAS3G,IAAI6G,EAAQF,SAAQ,MAMjC7G,EAAWyG,GAAUI,IAGvB7G,EAAW0G,GAAM,CACfsE,cACAE,OACAC,aACAC,cA3EO,SAAcnC,SACbG,KAAMyB,GAAaQ,EACrB,IAAAjC,KAAAA,GAASH,EAQJ,GAHXA,EAAMqC,MAAQlC,EACdH,EAAMG,KAAOwB,GAAaC,EAAUzB,GAEd,oBAAXrB,OAAsB,IAI3BkD,SAIE,MAAAM,ED8JZ,SAAetC,EAAOV,GACpB,OAAOmB,GAAK,CAACT,GAAQV,EACvB,CChK4BqB,CAAMX,EAAOuC,EAAUtD,UACzCqD,IACFP,EAAY9K,IAAIqL,GAChBN,GAAiB,QAGnBtB,EAAOxI,QAAOsK,IACZA,EAAGhU,KAAKwR,GACDwC,MAkDXC,gBA7CO,SAAgBzC,GACvBU,EAAOxI,QAAOsK,IACN,MAAA9G,EAAQ8G,EAAG7G,QAAQqE,UACzBwC,EAAGrN,OAAOuG,EAAO,GACV8G,CAAE,iJAMZ,OACSrC,KAAMyB,GAAaQ,EAC3B1B,EAAOxI,QAAOsK,IACZA,EAAGvV,SAAQ4L,GAAMA,EAAEsH,KAAOwB,GAAaC,EAAU/I,EAAEwJ,SAC5CG,sBAOV,CACO,MAAAE,EAAYjC,GAAKkC,EAASJ,EAAUtD,UAC1C8C,EAAY9K,IAAIyL,qKC5DD/T,EAAW,YAAaA,EAAS,qEAH7C,OAAc,OAAdA,KAAkB,0mBAC0BA,EAAS,IAAMA,EAAW,GAAMA,EAAU,UAAhEA,EAAS,oON0lDtC,SAA2BiU,EAAQC,GAC/B,MAAM3K,EAAS,CAAA,EACT4K,EAAc,CAAA,EACdC,EAAgB,CAAEnU,QAAS,GACjC,IAAIa,EAAImT,EAAOpT,OACf,KAAOC,KAAK,CACR,MAAM4J,EAAIuJ,EAAOnT,GACXuT,EAAIH,EAAQpT,GAClB,GAAIuT,EAAG,CACH,IAAK,MAAMtS,KAAO2I,EACR3I,KAAOsS,IACTF,EAAYpS,GAAO,GAE3B,IAAK,MAAMA,KAAOsS,EACTD,EAAcrS,KACfwH,EAAOxH,GAAOsS,EAAEtS,GAChBqS,EAAcrS,GAAO,GAG7BkS,EAAOnT,GAAKuT,CACf,MAEG,IAAK,MAAMtS,KAAO2I,EACd0J,EAAcrS,GAAO,CAGhC,CACD,IAAK,MAAMA,KAAOoS,EACRpS,KAAOwH,IACTA,EAAOxH,QAAOvB,GAEtB,OAAO+I,CACX,qBM1nDmDvJ,EAAS,YAAMA,EAAW,YAAMA,EAAU,mBAAhEA,EAAS,IAAA,+RAFjCsU,EAAiB,OAAjBtU,MAAyBA,EAAa,GAAAqR,QAAUrR,EAAK,IAAAuU,GAAAvU,+FAApC,OAAjBA,MAAyBA,EAAa,GAAAqR,QAAUrR,EAAK,yOAnC7CwR,KAAAA,EAAO,IAAEtE,GACTzN,UAAAA,EAAY,MAAIyN,EAEnB,MAAAsG,cAAAA,EAAaM,gBAAEA,EAAeV,YAAEA,GAAgB7K,EAAWuG,+BAC7DG,EAAW1G,EAAWsG,+BAEtBwC,EAAK,CACTG,OAGAD,QAAkB,KAATC,OAEPgD,EAAW,CAAA,EACXC,EAAU,CAAA,EN++BhB,IAAmBzW,SMp+BjBwV,EAAcnC,GAIQ,oBAAXlB,SNg+BMnS,EM/9BN,KACP8V,EAAgBzC,EAAK,EN+9BvBrJ,IAAwBrI,GAAGC,WAAWC,KAAK7B,sKM9+BtC0W,GAAgBA,EAAarD,QAAUA,OAC5CmD,EAAcE,EAAalC,QAG5B,CACS,MAAAhB,KAAAA,EAAI/R,UAAEA,KAAc8M,GAASW,EACrCyH,EAAA,EAAAF,EAAalI,8NCvBb,0DAGkD,yCACC,oJAJnD,0JAGkD,8HACC,ucANvDtI,EAQM9B,EAAAyS,EAAAnR,GAPNvB,EAAoD0S,EAAAC,UACpD3S,EAAsB0S,EAAAE,iBAEtB5S,EAGM0S,EAAAG,GAFJ7S,EAAqE6S,EAAAC,GAAnC9S,EAA+B8S,EAAAC,iBACjE/S,EAAwE6S,EAAAG,GAArChT,EAAiCgT,EAAAC,0OCuB9D,+DAGD,gEAK6C,uEAOrB,2DACG,+JAhB1B,mIAGD,qLAK6C,mNAOrB,mGACG,+fALSnV,EAAO,GAAG,UAAY,wVAbjEiE,EAsBM9B,EAAAiT,EAAA3R,GArBJvB,EAoBMkT,EAAAC,GAnBJnT,EAAyBmT,EAAAC,iBACzBpT,EAAkDmT,EAAA7N,OAAVxH,EAAM,WAC9CkC,EAECmT,EAAAE,yBACDrT,EAECmT,EAAAG,GADEtT,EAAmDsT,EAAAC,kBAEtDvT,EAA6DmT,EAAAJ,0BAE7D/S,EAEMmT,EAAAN,GADJ7S,EAAsE6S,EAAAI,UAGxEjT,EAIMmT,EAAAK,GAHJxT,EAAiEwT,EAAAd,iBACjE1S,EAA+CwT,EAAAC,iBAC/CzT,EAAmDwT,EAAAE,wCAflB5V,EAAS,gBAGbA,EAAe,oCAJNA,EAAM,QAANA,EAAM,uBAUPA,EAAO,GAAG,UAAY,+FAxC3C,IAGlB6V,EACAC,EACAC,EALkBC,GAAU,EAC5BC,GAAe,EACfC,EAAS,yCAKJD,EAAY,CACbtB,EAAA,EAAAqB,GAAU,SACJG,QAAiBC,MAAM,mEACN,KAAnBD,EAASE,OAAa,OAChB1R,QAAawR,EAASG,OAC5BL,GAAe,MACfC,EAASvR,EAAK3C,OACd2S,EAAA,EAAAkB,EAAYlO,MAAM4O,QAAU,OAAMV,GAClClB,EAAA,EAAAmB,EAAQnO,MAAM4O,QAAU,OAAMT,GAElCnB,EAAA,EAAAqB,GAAU,gBAIdQ,UAAUC,UAAUC,UAAUR,OAC9BJ,EAAQ9T,MAAQ,SAAQ8T,GACxBnB,EAAA,EAAAoB,EAAmBpO,MAAMgP,WAAa,UAASZ,eAOPG,EAAMtJ,KAAA5K,sDACW6T,EAAWe,qDAGTd,EAAOc,qDAGtCb,EAAkBa,kMCpB1C,wDAE0C,oEAKnB,2DACG,+JAR1B,2IAE0C,gNAKnB,mGACG,yUAJS5W,EAAO,GAAG,UAAY,0UANjEiE,EAcM9B,EAAAkT,EAAA5R,GAbJvB,EAYMmT,EAAAK,GAXJxT,EAAkBwT,EAAAJ,iBAClBpT,EAAoEwT,EAAAlO,OAArCxH,EAAM,WACrCkC,EAA2DwT,EAAAmB,iBAC3D3U,EAEMwT,EAAAP,GADJjT,EAAsEiT,EAAAF,UAExE/S,EAIMwT,EAAAC,GAHJzT,EAAiEyT,EAAAZ,iBACjE7S,EAA+CyT,EAAAf,iBAC/C1S,EAAmDyT,EAAAd,wCAPlB7U,EAAS,oCADbA,EAAM,QAANA,EAAM,uBAGEA,EAAO,GAAG,UAAY,6DArB3C,IAAAkW,EAAS,GAC3BF,GAAU,8BAEVrB,EAAA,EAAAqB,GAAU,SAEJG,QAAiBC,MAAK,uDAAwDF,QACpFY,QAAQC,IAAIZ,GACW,KAAnBA,EAASE,OAAa,OAChB1R,QAAawR,EAASG,OAC5BnG,OAAOlB,SAAS/P,KAAqB,cAAAyF,EAAK3C,MAAMgV,WAAW,IAAK,MAEpErC,EAAA,EAAAqB,GAAU,eAOqBE,EAAMtJ,KAAA5K,gHCXnBiV,EAAAjX,KAAKa,OAAM,wCAHP,wIAAA,kPAD1BoD,EAKM9B,EAAA4S,EAAAtR,GAJJvB,EAEM6S,EAAAE,iBACN/S,EAAsC6S,EAAAI,oBAAlB,EAAA7U,GAAA2W,KAAAA,EAAAjX,KAAKa,OAAM,KAAAwG,EAAA6P,EAAAD,uDAPJtS,GAAIuI,+dCEjCjJ,EAGM9B,EAAAgV,EAAA1T,GAFJvB,EAAkCiV,EAAAtC,oJC0BZ7U,EAAe,4DAAfA,EAAe,0EAAnCiE,EAA0C9B,EAAAgV,EAAA1T,2BAAtBzD,EAAe,mDADhCsU,EAAmB9T,MAAnBR,MAA4BuU,GAAAvU,wCAHT,6BACU,6HADV,uDACU,mNAFpCiE,EAOM9B,EAAAgT,EAAA1R,GANJvB,EAEMiT,EAAAF,UADK/S,EAAoC+S,EAAAmC,0CAEvB5W,MAAnBR,gGA3BE,SAAAqX,GAASC,GACV,IAAAC,MAAc3H,KAEX,OADP2H,EAAQC,QAAQD,EAAQE,UAAY,GAC7BH,EAAOC,yBAadG,EACJxP,GAAO,iBAXC,IAAAyP,EAAgB,UACX7W,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAEzBuW,OADWzH,KAAKjL,EAAK7D,GAAG8W,cAExBD,IAGRb,QAAQC,IAAIY,OACZD,GAAoB,IAAUC,GAAeE,QAAQ,IAIrDC,EAAK,aAEEnT,GAAIuI,0PCsCW,mCACoB,wCAGPlN,EAAE,yBACVA,EAAM,yBACEA,EAAE,oCAGlB,4BACA,+BACA,iLAXG,6DACoB,qHAGPA,EAAE,iEACVA,EAAM,iEACEA,EAAE,iHAGlB,oEACA,uEACA,84BAZvBiE,EAoBM9B,EAAA4V,EAAAtU,GAnBJvB,EAEM6V,EAAA9C,UADW/S,EAAsC+S,EAAAmC,iBAEvDlV,EAIM6V,EAAApC,GAHJzT,EAA4CyT,EAAAR,iBAC5CjT,EAAwCyT,EAAAZ,iBACxC7S,EAA4CyT,EAAAf,iBAE9C1S,EAIM6V,EAAAC,GAHJ9V,EAA4B8V,EAAAtC,iBAC5BxT,EAA+B8V,EAAA3C,iBAC/BnT,EAA4B8V,EAAA5C,iBAE9BlT,EAKM6V,EAAAE,GAJJ/V,EAAyB+V,EAAAC,UACzBhW,EAA0B+V,EAAAE,UAC1BjW,EAAuB+V,EAAAG,UACvBlW,EAAyC+V,EAAAI,8BAbNrY,EAAE,aACVA,EAAM,aACEA,EAAE,mEArDhCsY,EAASC,EAAKC,SACbC,EAVGF,IAAQA,EAAIhV,MAAM,CAAA7E,EAAGC,IAAMD,EAAIC,IAUzB+Z,CAAIH,GACbI,GAAOF,EAAO5X,OAAS,GAAK2X,EAC5BlF,EAAO3S,KAAKiY,MAAMD,GAClBpM,EAAOoM,EAAMrF,EACf,YAAqB9S,IAArBiY,EAAOnF,EAAO,GACPmF,EAAOnF,GAAQ/G,GAAQkM,EAAOnF,EAAO,GAAKmF,EAAOnF,IAGjDmF,EAAOnF,GAeb,SAAAuF,EAAkBC,OACnBC,EAbC,SAAeC,OAChBD,EAA2B,IAAhBpY,KAAKsY,MAAMD,GAAW,IACjC,OAAAD,EAAW,EACJ,EAEFA,EAAW,IACT,IAGAA,EAIIG,CAAeJ,GAC9BnE,EAAA,EAAAwE,EAAOxR,MAAMyR,QAAUL,KAAQI,OAY/BL,EAAQO,EAAIC,EACZH,EACJjR,GAAO,qBAXCqR,EAAa,WACRzY,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAC7ByY,EAAc1Z,KAAK8E,EAAK7D,GAAG0Y,eAE/B7E,EAAA,EAAA0E,EAAKf,EAASiB,EAAe,MAC7B5E,EAAA,EAAAmE,EAASR,EAASiB,EAAe,KACjC5E,EAAA,EAAA2E,EAAKhB,EAASiB,EAAe,MAC7BV,EAAkBC,GAKlBhB,EAAK,aAEEnT,GAAIuI,mGAqBoBiM,EAAMvC,4KChB5B5W,EAAS,wBAAda,OAAIC,GAAA,kPADRmD,EA0BM9B,EAAAgV,EAAA1T,0EAzBGzD,EAAS,WAAda,OAAIC,GAAA,EAAA,mHAAJD,4EAaS4Y,EAAAzZ,KAASwR,KAAI,GAE4ByF,EAAAjX,KAAS0Z,MAAK,GAKzDC,EAAA3Z,KAASwR,KAAI,koBARuBxR,EAAC,kEAGCA,EAAC,2EAJMA,EAAC,+DAPnCA,EAAC,IACCyH,EAAAmN,EAAA,QAAA5U,EAAS,GAAA0Z,MAAQ1Z,KAC/B,IAAG,sBAAiBA,EAAQ,GAACqW,QAAU,KACzCrW,EAAQ,GAACqW,QAAU,IACf,mBACA,qHAS0CrW,EAAC,4DAjBnDiE,EAsBM9B,EAAAkT,EAAA5R,GArBJvB,EAeMmT,EAAAT,GANJ1S,EAKM0S,EAAAG,GAJJ7S,EAEM6S,EAAAE,iBACN/S,EAAiE6S,EAAAI,iBAGrEjT,EAIMmT,EAAAK,GAHJxT,EAEMwT,EAAAC,yBARD,EAAArV,GAAAmZ,KAAAA,EAAAzZ,KAASwR,KAAI,KAAAnK,EAAAuS,EAAAH,GAE4B,EAAAnZ,GAAA2W,KAAAA,EAAAjX,KAAS0Z,MAAK,KAAArS,EAAA6P,EAAAD,QAV5CxP,EAAAmN,EAAA,QAAA5U,EAAS,GAAA0Z,MAAQ1Z,KAC/B,IAAG,2BAAiBA,EAAQ,GAACqW,QAAU,KACzCrW,EAAQ,GAACqW,QAAU,IACf,mBACA,WAWD,EAAA/V,GAAAqZ,KAAAA,EAAA3Z,KAASwR,KAAI,KAAAnK,EAAAwS,EAAAF,8CAtBrBrF,EAAa9T,MAAbR,MAAsBuU,GAAAvU,wCADH,uHAAA,0IAD1BiE,EA+BM9B,EAAAgT,EAAA1R,GA9BJvB,EAAuCiT,EAAAF,0CACrBzU,MAAbR,gGA3BE,SAAA8Z,GAA2B9W,GAC5B,IAAA+W,EAAW/a,SAASgb,iCAAiChX,KACrDiX,EAAejb,SAASgb,gCAAgChX,KACxDkX,EAAgBlb,SAASgb,iCAAiChX,KAC1DmX,EAAgBnb,SAASgb,iCAAiChX,KAC1D+W,EAASK,YACTH,EAAaG,YAAcF,EAAcE,cACzCD,EAAcxS,MAAM4O,QAAU,OAC9B0D,EAAatS,MAAM4O,QAAU,oCAvB5BuB,IACD,IAAAuC,iBAfAA,EAAI,CAAA,UACCvZ,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,KAC1BwZ,EAAa3V,EAAK7D,GAAG0Q,KAAO7M,EAAK7D,GAAGuV,OAClCiE,KAAcD,IAChBA,EAAKC,GAAU,CACX9I,KAAM7M,EAAK7D,GAAG0Q,KACd6E,OAAQ1R,EAAK7D,GAAGuV,OAChBqD,MAAO,IAGfW,EAAKC,GAAYZ,eAEdW,EAGIE,GACPC,EAAO,GACX7F,EAAA,EAAA8F,EAAW,GACF,IAAA,IAAAH,KAAcD,EACnBG,EAAQ3a,KAAKwa,EAAKC,IACdD,EAAKC,GAAYZ,MAAQe,GACzB9F,EAAA,EAAA8F,EAAWJ,EAAKC,GAAYZ,OAGpCc,EAAQjX,MAAM,CAAA7E,EAAGC,IACNA,EAAE+a,MAAQhb,EAAEgb,QAEvB/E,EAAA,EAAA+F,EAAYF,YAaPG,YACI7Z,EAAI,EAAGA,EAAI4Z,EAAU7Z,OAAQC,IAClCgZ,GAA2BhZ,OAO/B4Z,EACAD,EALJvS,GAAO,KACH4P,IACA8C,WAAWD,EAAmB,GAAE,aAIzBhW,GAAIuI,oMCpDK,6HAAA,wRADpBjJ,EAGM9B,EAAAgT,EAAA1R,GAFJvB,EAAqCiT,EAAAF,iBACrC/S,EAAsDiT,EAAAN,8HCmCjD7U,EAAW,GAAC6X,QAAQ,GAAC,oCAAE,+EAAA,mEALTpQ,EAAA0P,EAAA,SAAAnX,EAAe,IAAA,GAAK,aAAe,KAAIA,EAAc,GAAA,IACpEA,KAAc,GACV,gBACA,KAAIA,EAAW,IAAI,GAAK,mBAAqB,aALnDiE,EAQM9B,EAAAgV,EAAA1T,qCADHzD,EAAW,GAAC6X,QAAQ,GAAC,KAAAxQ,EAAAuS,EAAAH,QALPhS,EAAA0P,EAAA,SAAAnX,EAAe,IAAA,GAAK,aAAe,KAAIA,EAAc,GAAA,IACpEA,KAAc,GACV,gBACA,KAAIA,EAAW,IAAI,GAAK,mBAAqB,gDANhDsU,EAAe9T,MAAfR,MAAwBuU,GAAAvU,wCADL,mIAAA,sKAD1BiE,EAaM9B,EAAAgT,EAAA1R,GAZJvB,EAA0CiT,EAAAF,0CACtBzU,MAAfR,gGA5BE,SAAA6a,GAASvD,GACV,IAAAC,MAAc3H,KAEX,OADP2H,EAAQC,QAAQD,EAAQE,UAAY,GAC7BH,EAAOC,yBAgBduD,EACJ5S,GAAO,iBAdC,IAAAyP,EAAgB,EAChBoD,EAAqB,UAChBja,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAEzB+Z,OADWjL,KAAKjL,EAAK7D,GAAG8W,eAEpBjT,EAAK7D,GAAGuV,QAAU,KAAO1R,EAAK7D,GAAGuV,QAAU,KAC3C0E,IAEJpD,KAGRhD,EAAA,EAAAmG,EAAeC,EAAqBpD,EAAiB,KAIrDG,EAAK,aAEEnT,GAAIuI,oVCmEfjJ,EAIM9B,EAAAgT,EAAA1R,GAHJvB,EAEMiT,EAAAF,2DA7FC+F,KACD,IAAAC,MAAerL,KACnBqL,EAASzD,QAAQyD,EAASxD,UAAY,IAClC,IAAAyD,MAAetL,YACnBsL,EAAS1D,QAAQ0D,EAASzD,YAEtB0D,OAAO,EACPC,UAAU,EACVC,QAAUnR,EAAG,GAAIc,EAAG,GAAIsQ,EAAG,GAAI3c,EAAG,GAAI4c,IAAK,GAC3CC,UAAW,UACXC,aAAc,cACdC,cAAe,cACfC,OAAQ,IACRC,MAAK,CACDT,MAAK,CAAIzW,KAAM,YACfmX,UAAW,OACXC,UAAU,EACVC,YAAY,GAEhBC,MAAK,CACDb,MAAK,CAAIzW,KAAM,QACfqX,YAAY,EACZE,MAAK,CAAGhB,EAAUC,GAClBgB,SAAS,GAEbC,UAAU,+BAGTC,QACDC,EAAW,CAAA,EACN,IAAA,IAAAvb,EAAI,EAAGA,EAAI,GAAIA,IAAC,CACjB,IAAAwW,MAAW1H,KACf0H,EAAKgF,SAAS,EAAG,EAAG,EAAG,GACvBhF,EAAKE,QAAQF,EAAKG,UAAY3W,GAE9Bub,EAAY/E,GAAQ,UAEfxW,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,CAC1B,IAAAwW,MAAW1H,KAAKjL,EAAK7D,GAAG8W,YAC5BN,EAAKgF,SAAS,EAAG,EAAG,EAAG,GAEvBD,EAAY/E,SAEZiF,EAAc,GACT,IAAA,IAAAjF,KAAQ+E,EACbE,EAAe1c,KAAU,CAAA,IAAA+P,KAAK0H,GAAO+E,EAAY/E,KAErDiF,EAAehZ,MAAM,CAAA7E,EAAGC,IACbD,EAAE,GAAKC,EAAE,SAEhB6d,EAAK,GACLC,EAAQ,WACH3b,EAAI,EAAGA,EAAIyb,EAAe1b,OAAQC,IACvC0b,EAAM3c,KAAK0c,EAAezb,GAAG,IAC7B2b,EAAS5c,KAAK0c,EAAezb,GAAG,YAI5BkY,EAAGwD,EACHE,EAAGD,EACH3P,KAAM,MACNqM,OAAM,CAAIwD,MAAO,WACjBC,cAAa,2DACbC,YAAY,QAepBC,WACKC,IACD,IAAAC,GAXArY,KAAMyX,IACNa,OAAQjC,KACRkC,OAAM,CACFC,YAAY,EACZC,iBAAiB,EACjBC,gBAAgB,IAQpB,IAAAC,OAAOC,QAAQT,EAASE,EAASrY,KAAMqY,EAASC,OAAQD,EAASE,QAEzEhV,GAAO,KACH6U,GAAO,aAEApY,GAAIuI,6FAIgB4P,EAAOlG,4SCMtC3S,EAIM9B,EAAAgT,EAAA1R,GAHJvB,EAEMiT,EAAAF,2DApGC+F,KACD,IAAAC,MAAerL,KACnBqL,EAASzD,QAAQyD,EAASxD,UAAY,IAClC,IAAAyD,MAAetL,YACnBsL,EAAS1D,QAAQ0D,EAASzD,YAEtB0D,OAAO,EACPC,UAAU,EACVC,QAAUnR,EAAG,GAAIc,EAAG,GAAIsQ,EAAG,GAAI3c,EAAG,GAAI4c,IAAK,GAC3CC,UAAW,UACXC,aAAc,cACdC,cAAe,cACfC,OAAQ,IACRC,MAAK,CACDT,MAAK,CAAIzW,KAAM,sBACfmX,UAAW,OACXC,UAAU,EACVC,YAAY,GAEhBC,MAAK,CACDb,MAAK,CAAIzW,KAAM,QACfoX,UAAU,EACVC,YAAY,EACZE,MAAK,CAAGhB,EAAUC,GAClBgB,SAAS,GAEbC,UAAU,+BAGTC,QACD7C,EAAa,CAAA,EACR,IAAA,IAAAzY,EAAI,EAAGA,EAAI,GAAIA,IAAC,CACjB,IAAAwW,MAAW1H,KACf0H,EAAKgF,SAAS,EAAG,EAAG,EAAG,GACvBhF,EAAKE,QAAQF,EAAKG,UAAY3W,GAE9ByY,EAAcjC,GAAU,CAAAkG,MAAO,EAAG9D,MAAO,WAEpC5Y,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,CAC1B,IAAAwW,MAAW1H,KAAKjL,EAAK7D,GAAG8W,YAC5BN,EAAKgF,SAAS,EAAG,EAAG,EAAG,GAEvB/C,EAAcjC,GAAMkG,OAAS7Y,EAAK7D,GAAG0Y,cAErCD,EAAcjC,GAAMoC,YAEpB6C,EAAc,GACT,IAAA,IAAAjF,KAAQiC,EAAa,CACtB,IAAAkE,EAAa,CAAA,IAAA7N,KAAK0H,GAAO,GACzBiC,EAAcjC,GAAMoC,MAAQ,IAC5B+D,EAAM,GAAKlE,EAAcjC,GAAMkG,MAAQjE,EAAcjC,GAAMoC,OAE/D6C,EAAe1c,KAAK4d,GAExBlB,EAAehZ,MAAM,CAAA7E,EAAGC,IACbD,EAAE,GAAKC,EAAE,SAEhB6d,EAAK,GACLC,EAAQ,WACH3b,EAAI,EAAGA,EAAIyb,EAAe1b,OAAQC,IACvC0b,EAAM3c,KAAK0c,EAAezb,GAAG,IAC7B2b,EAAS5c,KAAK0c,EAAezb,GAAG,YAI5BkY,EAAGwD,EACHE,EAAGD,EACH3P,KAAM,MACNqM,OAAM,CAAIwD,MAAO,WACjBC,cAAa,4DACbC,YAAY,aAefE,IACD,IAAAC,GAVArY,KAAMyX,IACNa,OAAQjC,KACRkC,OAAM,CACFC,YAAY,EACZC,iBAAiB,EACjBC,gBAAgB,IAOpB,IAAAC,OAAOC,QAAQT,EAASE,EAASrY,KAAMqY,EAASC,OAAQD,EAASE,YAErEJ,EACJ5U,GAAO,KACH6U,GAAO,aAEApY,GAAIuI,6FAIgB4P,EAAOlG,kLCpCzB5W,EAAW,wBAAhBa,OAAIC,GAAA,+CAFwB,8HAAA,oOAAhCmD,EAAkD9B,EAAA8S,EAAAxR,mBAClDQ,EAQM9B,EAAAgT,EAAA1R,0EAPGzD,EAAW,WAAhBa,OAAIC,GAAA,EAAA,mHAAJD,uOAGsBb,EAAM,GAACW,KAAKiY,MAAc,GAAR5Y,EAAK,IAAS,IAC3CqF,EAAA8R,EAAA,QAAAuG,GAAQ,IAAR1d,EAAQ,IAAK6X,QAAQ,GAAC,aAHjC5T,EAIE9B,EAAAgV,EAAA1T,iCAFoBzD,EAAM,GAACW,KAAKiY,MAAc,GAAR5Y,EAAK,IAAS,IAC3C,EAAAM,GAAAod,KAAAA,GAAQ,IAAR1d,EAAQ,IAAK6X,QAAQ,GAAC,0DAPlCvD,EAAe9T,MAAfR,MAAwBuU,GAAAvU,qLAD/BiE,EAaM9B,EAAAgV,EAAA1T,4BAZgBjD,MAAfR,gGA3DE,SAAA2d,GAAUrG,GACX,IAAA2D,MAAerL,KAEZ,OADPqL,EAASzD,QAAQyD,EAASxD,UAAY,IAC/BH,EAAO2D,EAcT,SAAA2C,GAAQtG,GACT,IAAAzH,MAAUD,KACP,OAAAjP,KAAKiY,OAAO/I,EAAIgO,UAAYvG,EAAKuG,WAAc,8BAgCtD/C,WAHKhD,oBA1BDgG,EAAO,CAAA,UACFhd,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,CAC1B,IAAAwW,MAAW1H,KAAKjL,EAAK7D,GAAG8W,YACxB+F,GAAUrG,KACVA,EAAKgF,SAAS,EAAG,EAAG,EAAG,GAEjBhF,KAAQwG,IAEVA,EAAQxG,GAAU,CAAAkG,MAAO,EAAGO,WAAY,IAExCpZ,EAAK7D,GAAGuV,QAAU,KAAO1R,EAAK7D,GAAGuV,QAAU,KAE3CyH,EAAQxG,GAAMyG,aAGlBD,EAAQxG,GAAMkG,SAGlB,IAAAQ,MAAiBtY,MAAM,IAAI+F,MAAM,IAC5B,IAAA,IAAA6L,KAAQwG,EAAO,CAChB,IAAA9a,EAAM4a,GAAY,IAAAhO,KAAK0H,IAC3B0G,EAAWA,EAAWnd,OAASmC,GAC3B8a,EAAQxG,GAAMyG,WAAaD,EAAQxG,GAAMkG,MAEjD7I,EAAA,EAAAmG,EAAckD,GAGdC,GAGJ/V,GAAO,KACH4P,GAAK,aAEEnT,GAAIuI,mDAlDL,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,6PCTsB,mLAAA,8MAD1BjJ,EAKM9B,EAAAgT,EAAA1R,GAJJvB,EAA0CiT,EAAAF,8ZAJjCtQ,GAAIuI,gMCkHW,2IAAA,wTAD1BjJ,EAOM9B,EAAAyS,EAAAnR,GANJvB,EAAqC0S,EAAAK,iBACrC/S,EAIM0S,EAAAG,GAHJ7S,EAEM6S,EAAAI,2DAlFD+I,KACD,IAAAjD,MAAerL,KACnBqL,EAASzD,QAAQyD,EAASxD,UAAY,IAClC,IAAAyD,MAAetL,YACnBsL,EAAS1D,QAAQ0D,EAASzD,UAAY,IAElC0D,OAAO,EACPC,UAAU,EACVC,QAAUnR,EAAG,GAAIc,EAAG,GAAIsQ,EAAG,GAAI3c,EAAG,GAAI4c,IAAK,GAC3CC,UAAW,UACXC,aAAc,cACdC,cAAe,cACfC,OAAQ,IACRC,MAAK,CACDT,MAAK,CAAIzW,KAAM,YACfmX,UAAW,OACXC,UAAU,EACVC,YAAY,GAEhBC,MAAK,CACDE,SAAS,GAEbC,UAAU,sBAGd,IA6CAW,EA7CAqB,EACA,CAAA,UACA,UACA,oBAEKC,QACDC,EAAY,CAAA,UACPvd,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,CAC1B,IAAAwd,GAvEQC,EAuEa5Z,EAAK7D,GAAG0d,YAtEvBxM,MAAM,eACT,YAEFuM,EAAUvM,MAAM,aACd,UAEFuM,EAAUvM,MAAM,YACd,SAEFuM,EAAUvM,MAAM,cACd,WAEFuM,EAAUvM,MAAM,YACd,SAEFuM,EAAUvM,MAAM,SACd,OAEFuM,EAAUvM,MAAM,UAAYuM,EAAUvM,MAAM,WAC1C,QAEFuM,EAAUvM,MAAM,YAAcuM,EAAUvM,MAAM,aAC5C,oBAEFuM,EAAUvM,MAAM,UACd,OAEFuM,EAAUvM,MAAM,oBACd,UAEFuM,EAAUvM,MAAM,cACd,WAGA,QAqCDsM,KAAWD,IACbA,EAAaC,GAAW,GAE5BD,EAAaC,KA3EZ,IAAWC,MA6EZE,EAAQ,GACR/E,EAAK,GACA,IAAA,IAAA4E,KAAWD,EAChBI,EAAS5e,KAAKye,GACd5E,EAAM7Z,KAAKwe,EAAaC,YAGpB9P,OAAQkL,EACRgF,OAAQD,EACR3R,KAAM,MACNqM,QACYgF,qBAefpB,IACD,IAAAC,GAVArY,KAAMyZ,IACNnB,OAAQiB,KACRhB,OAAM,CACFC,YAAY,EACZC,iBAAiB,EACjBC,gBAAgB,IAOpB,IAAAC,OAAOC,QAAQT,EAASE,EAASrY,KAAMqY,EAASC,OAAQD,EAASE,QAGzEhV,GAAO,KACH6U,GAAO,aAEApY,GAAIuI,6FAMkB4P,EAAOlG,0JCyBd,sIAAA,mTAD1B3S,EAOM9B,EAAAyS,EAAAnR,GANJvB,EAAgC0S,EAAAK,iBAChC/S,EAIM0S,EAAAG,GAHJ7S,EAEM6S,EAAAI,2DAlFDwJ,KACD,IAAA1D,MAAerL,KACnBqL,EAASzD,QAAQyD,EAASxD,UAAY,IAClC,IAAAyD,MAAetL,YACnBsL,EAAS1D,QAAQ0D,EAASzD,UAAY,IAElC0D,OAAO,EACPC,UAAU,EACVC,QAAUnR,EAAG,GAAIc,EAAG,GAAIsQ,EAAG,GAAI3c,EAAG,GAAI4c,IAAK,GAC3CC,UAAW,UACXC,aAAc,cACdC,cAAe,cACfC,OAAQ,IACRC,MAAK,CACDT,MAAK,CAAIzW,KAAM,YACfmX,UAAW,OACXC,UAAU,EACVC,YAAY,GAEhBC,MAAK,CACDE,SAAS,GAEbC,UAAU,sBAGd,IA6CAW,EA7CAqB,EACA,CAAA,UACA,UACA,oBAEKC,QACDQ,EAAO,CAAA,UACF9d,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,CAC1B,IAAA+d,GAlGGN,EAkGQ5Z,EAAK7D,GAAG0d,YAjGbxM,MAAM,SACT,eAEFuM,EAAUvM,MAAM,qCACd,aAEFuM,EAAUvM,MAAM,wBACd,aAEFuM,EAAUvM,MAAM,mCACd,eAEFuM,EAAUvM,MAAM,iCACd,aAEFuM,EAAUvM,MAAM,oBACd,sBAEFuM,EAAUvM,MAAM,oBACd,gBAEFuM,EAAUvM,MAAM,oBACd,YAEFuM,EAAUvM,MAAM,oBACd,YAEFuM,EAAUvM,MAAM,qBACd,aAEFuM,EAAUvM,MAAM,oDACd,iBAEFuM,EAAUvM,MAAM,cACd,aAEFuM,EAAUvM,MAAM,WACd,UAEFuM,EAAUvM,MAAM,SACd,QAEFuM,EAAUvM,MAAM,iBACd,QAEFuM,EAAUvM,MAAM,6BACd,QAEFuM,EAAUvM,MAAM,OACd,MAEFuM,EAAUvM,MAAM,QACd,OAEFuM,EAAUvM,MAAM,SACd,OAEFuM,EAAUvM,MAAM,8FACd,aAGA,UAqCD6M,KAAMD,IACRA,EAAQC,GAAM,GAElBD,EAAQC,KAtGP,IAAMN,MAwGPM,EAAE,GACFnF,EAAK,GACA,IAAA,IAAA4E,KAAWM,EAChBC,EAAGhf,KAAKye,GACR5E,EAAM7Z,KAAK+e,EAAQN,YAGf9P,OAAQkL,EACRgF,OAAQG,EACR/R,KAAM,MACNqM,QACYgF,qBAefpB,IACD,IAAAC,GAVArY,KAAMyZ,IACNnB,OAAQ0B,KACRzB,OAAM,CACFC,YAAY,EACZC,iBAAiB,EACjBC,gBAAgB,IAOpB,IAAAC,OAAOC,QAAQT,EAASE,EAASrY,KAAMqY,EAASC,OAAQD,EAASE,QAGzEhV,GAAO,KACH6U,GAAO,aAEApY,GAAIuI,6FAMkB4P,EAAOlG,0JCnDZ,mIAAA,gSAD1B3S,EAOM9B,EAAAyS,EAAAnR,GANJvB,EAAsC0S,EAAAK,iBACtC/S,EAIM0S,EAAAG,GAHJ7S,EAEM6S,EAAAI,+DANPb,EAAY9T,MAAZR,MAAyBA,EAAS,GAAA+N,KAAO,GAACwG,GAAAvU,0FAA9BQ,MAAZR,MAAyBA,EAAS,GAAA+N,KAAO,yHA7D1C,IAkDA+Q,EACAC,EAnDAZ,EACA,CAAA,UACA,UACA,oBAEKC,QACDY,EAAY,CAAA,UACPle,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,KAC1BkR,EAAQrN,EAAK7D,GAAG0Q,KAAKQ,MAAM,+BAC3BA,EAAK,KACDiN,EAAUjN,EAAM,GACdiN,KAAWD,IACbA,EAAaC,GAAW,GAE5BD,EAAaC,UAGjBH,EAAQ,GACRpF,EAAK,GACA,IAAA,IAAAuF,KAAWD,EAChBF,EAASjf,KAAKof,GACdvF,EAAM7Z,KAAKmf,EAAaC,YAIpBzQ,OAAQkL,EACRgF,OAAQI,EACRhS,KAAM,MACNqM,QACYgF,qBAgBfpB,IACD,IAAAC,GAVArY,KAAMyZ,IACNnB,QAxDA9B,OAAO,EACPC,UAAU,EACVC,QAAUnR,EAAG,GAAIc,EAAG,GAAIsQ,EAAG,GAAI3c,EAAG,GAAI4c,IAAK,GAC3CC,UAAW,UACXC,aAAc,cACdC,cAAe,cACfC,OAAQ,IACRC,MAAK,CACDT,MAAK,CAAIzW,KAAM,YACfmX,UAAW,OACXC,UAAU,EACVC,YAAY,GAEhBC,MAAK,CACDE,SAAS,GAEbC,UAAU,GAyCVe,OAAM,CACFC,YAAY,EACZC,iBAAiB,EACjBC,gBAAgB,IAOpB,IAAAC,OAAOC,QAAQwB,EAAU/B,EAASrY,KAAMqY,EAASC,OAAQD,EAASE,QAI1EhV,GAAO,iBAlFC,IAAArB,MAAQsC,YACHrI,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,KAC1BkR,EAAQrN,EAAK7D,GAAG0Q,KAAKQ,MAAM,4BAC3BA,GACAnL,EAAE6C,IAAIsI,EAAM,IAGpB2C,EAAA,EAAAmK,EAAWjY,GA4EXqY,GACIJ,EAAS/Q,KAAO,GAChB6M,WAAWmC,EAAS,iBAGjBpY,GAAIuI,+FAOoB6R,EAAQnI,0JC1Bf,qIAAA,0PAD5B3S,EAOM9B,EAAAyS,EAAAnR,GANFvB,EAAwC0S,EAAAK,iBAC1C/S,EAIM0S,EAAAG,GAHJ7S,EAEM6S,EAAAI,8EA5DDiH,IACD,IAAA7C,EAAgB7T,MAAM,IAAI+F,KAAK,WAC1B3K,EAAI,EAAGA,EAAI6D,EAAK9D,OAAQC,IAAC,CAI9ByY,MAHe3J,KAAKjL,EAAK7D,GAAG8W,YACZuH,kBAIhB5C,EAAc,GACT,IAAA,IAAAzb,EAAI,EAAGA,EAAI,GAAIA,IAAC,CACjB,IAAA2c,EAAS,CAAA3c,EAAGyY,EAAczY,IAC9Byb,EAAe1c,KAAK4d,GAExBlB,EAAehZ,MAAM,CAAA7E,EAAGC,IACbD,EAAE,GAAKC,EAAE,SAEhB6d,EAAK,GACLC,EAAQ,WACH3b,EAAI,EAAGA,EAAIyb,EAAe1b,OAAQC,IACvC0b,EAAM3c,KAAK0c,EAAezb,GAAG,GAAGse,WAAa,OAC7C3C,EAAS5c,KAAK0c,EAAezb,GAAG,YAI5BoJ,EAAGuS,EACH4C,MAAO7C,EACPrD,OAAM,CAAIwD,MAAO,WACjB7P,KAAM,sBAgBTiQ,IACD,IAAAC,GAVArY,KAAMyX,IACNa,QA/CAqC,KAAI,CAAIvR,KAAM,IACd2N,cAAe,cACfC,OAAQ,IACRN,QAAUnR,EAAG,GAAIc,EAAG,GAAIsQ,EAAG,GAAI3c,EAAG,GAAI4c,IAAK,GAC3CgE,MAAK,CACDC,OAAQ,EACRC,QAAS,cACTC,aAAeC,UAAW,YAAa7D,UAAU,GACjD8D,WAAU,CAAI/D,UAAW,aAwC7BqB,OAAM,CACFC,YAAY,EACZC,iBAAiB,EACjBC,gBAAgB,IAOpB,IAAAC,OAAOC,QAAQT,EAASE,EAASrY,KAAMqY,EAASC,OAAQD,EAASE,YAErEJ,EACJ5U,GAAO,KACH6U,GAAO,aAEApY,GAAIuI,6FAMkB4P,EAAOlG,gcCPtC3S,EAKM9B,EAAA4S,EAAAtR,GAJJvB,EAEM6S,EAAAI,GADJjT,EAAqBiT,EAAAF,gFAJA,yFAAA,6GAAzBhR,EAA4D9B,EAAAgV,EAAA1T,uiDAxB5DQ,EAsBM9B,EAAAuT,EAAAjS,GArBJvB,EAYMwT,EAAAX,GAXJ7S,EAGM6S,EAAAE,2CACN/S,EAGM6S,EAAAI,uGAKRjT,EAOMwT,EAAAC,uBALJzT,EAGMyT,EAAAf,+jCApBP,OAAQpU,MAARR,KAAiB,EAwBZA,EAAM,GAAA,wcAhCZ2E,EACAkb,GAAS,EACb3X,GAAO,2BAhBH4X,EAJK,SAAWA,GACN,MAAA,GAAAA,EAAO1f,MAAM,EAAG,MAAM0f,EAAO1f,MAAM,EAAG,OAAO0f,EAAO1f,MAAM,GAAI,OAAO0f,EAAO1f,MAAM,GAAI,OAAO0f,EAAO1f,MAAM,MAG3G2f,CAAWD,cAGV3J,QAAiBC,MAAK,oDAAqD0J,QAC1D,KAAnB3J,EAASE,OAAa,OAChBC,QAAaH,EAASG,WAC5B3R,EAAO2R,EAAKtU,OACZ8U,QAAQC,IAAIpS,UAGbqL,GACH2E,EAAA,EAAAkL,GAAS,IAMbG,EAAS,eAEFF,GAAM5S,oNC1Bc+S,kDACQC,mDACCC,2DACQC,i4BAPrC,IAAArhB,IAAAA,EAAM,IAAEmO,kDCLnB,yEAAQ,CACJ/K,OAAQnD,SAASgb,eAAe,OAChCxN,SAAS"}