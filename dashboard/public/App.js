"use strict";function e(){}function n(e){return e()}function r(e){e.forEach(n)}function t(n,...r){if(null==n)return e;const t=n.subscribe(...r);return t.unsubscribe?()=>t.unsubscribe():t}let A;function s(e){A=e}function a(){if(!A)throw new Error("Function called outside component initialization");return A}function o(e){a().$$.on_mount.push(e)}function i(e,n){return a().$$.context.set(e,n),n}function l(e){return a().$$.context.get(e)}Promise.resolve();const d=/[&"]/g,C=/[&<]/g;function c(e,n=!1){const r=String(e),t=n?d:C;t.lastIndex=0;let A="",s=0;for(;t.test(r);){const e=t.lastIndex-1,n=r[e];A+=r.substring(s,e)+("&"===n?"&amp;":'"'===n?"&quot;":"&lt;"),s=e+1}return A+r.substring(s)}function u(e,n){let r="";for(let t=0;t<e.length;t+=1)r+=n(e[t],t);return r}const p={$$render:()=>""};function g(e,n){if(!e||!e.$$render)throw"svelte:component"===n&&(n+=" this={...}"),new Error(`<${n}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${n}>.`);return e}let v;function h(e){function n(n,r,t,a,o){const i=A;s({$$:{on_destroy:v,context:new Map(o||(i?i.$$.context:[])),on_mount:[],before_update:[],after_update:[],callbacks:Object.create(null)}});const l=e(n,r,t,a);return s(i),l}return{render:(e={},{$$slots:t={},context:A=new Map}={})=>{v=[];const s={title:"",head:"",css:new Set},a=n(s,e,{},t,A);return r(v),{html:a,css:{code:Array.from(s.css).map((e=>e.code)).join("\n"),map:null},head:s.title+s.head}},$$render:n}}function m(e,n,r){if(null==n||r&&!n)return"";return` ${e}${r&&!0===n?"":`="${c(n,!0)}"`}`}const f=[];function b(n,r=e){let t;const A=new Set;function s(e){if(s=e,((r=n)!=r?s==s:r!==s||r&&"object"==typeof r||"function"==typeof r)&&(n=e,t)){const e=!f.length;for(const e of A)e[1](),f.push(e,n);if(e){for(let e=0;e<f.length;e+=2)f[e][0](f[e+1]);f.length=0}}var r,s}return{set:s,update:function(e){s(e(n))},subscribe:function(a,o=e){const i=[a,o];return A.add(i),1===A.size&&(t=r(s)||e),a(n),()=>{A.delete(i),0===A.size&&(t(),t=null)}}}}function x(n,A,s){const a=!Array.isArray(n),o=a?[n]:n,i=A.length<2;return l=n=>{let s=!1;const l=[];let d=0,C=e;const c=()=>{if(d)return;C();const r=A(a?l[0]:l,n);i?n(r):C="function"==typeof r?r:e},u=o.map(((e,n)=>t(e,(e=>{l[n]=e,d&=~(1<<n),s&&c()}),(()=>{d|=1<<n}))));return s=!0,c(),function(){r(u),C()}},{subscribe:b(s,l).subscribe};var l}const w={},y={};function E(e){return{...e.location,state:e.history.state,key:e.history.state&&e.history.state.key||"initial"}}const D=function(e,n){const r=[];let t=E(e);return{get location(){return t},listen(n){r.push(n);const A=()=>{t=E(e),n({location:t,action:"POP"})};return e.addEventListener("popstate",A),()=>{e.removeEventListener("popstate",A);const t=r.indexOf(n);r.splice(t,1)}},navigate(n,{state:A,replace:s=!1}={}){A={...A,key:Date.now()+""};try{s?e.history.replaceState(A,null,n):e.history.pushState(A,null,n)}catch(r){e.location[s?"replace":"assign"](n)}t=E(e),r.forEach((e=>e({location:t,action:"PUSH"})))}}}(Boolean("undefined"!=typeof window&&window.document&&window.document.createElement)?window:function(e="/"){let n=0;const r=[{pathname:e,search:""}],t=[];return{get location(){return r[n]},addEventListener(e,n){},removeEventListener(e,n){},history:{get entries(){return r},get index(){return n},get state(){return t[n]},pushState(e,A,s){const[a,o=""]=s.split("?");n++,r.push({pathname:a,search:o}),t.push(e)},replaceState(e,A,s){const[a,o=""]=s.split("?");r[n]={pathname:a,search:o},t[n]=e}}}}()),I=/^:(.+)/;function B(e){return"*"===e[0]}function M(e){return e.replace(/(^\/+|\/+$)/g,"").split("/")}function k(e){return e.replace(/(^\/+|\/+$)/g,"")}function K(e,n){return{route:e,score:e.default?0:M(e.path).reduce(((e,n)=>(e+=4,!function(e){return""===e}(n)?!function(e){return I.test(e)}(n)?B(n)?e-=5:e+=3:e+=2:e+=1,e)),0),index:n}}function O(e,n){let r,t;const[A]=n.split("?"),s=M(A),a=""===s[0],o=function(e){return e.map(K).sort(((e,n)=>e.score<n.score?1:e.score>n.score?-1:e.index-n.index))}(e);for(let e=0,A=o.length;e<A;e++){const A=o[e].route;let i=!1;if(A.default){t={route:A,params:{},uri:n};continue}const l=M(A.path),d={},C=Math.max(s.length,l.length);let c=0;for(;c<C;c++){const e=l[c],n=s[c];if(void 0!==e&&B(e)){d["*"===e?"*":e.slice(1)]=s.slice(c).map(decodeURIComponent).join("/");break}if(void 0===n){i=!0;break}let r=I.exec(e);if(r&&!a){const e=decodeURIComponent(n);d[r[1]]=e}else if(e!==n){i=!0;break}}if(!i){r={route:A,params:d,uri:"/"+s.slice(0,c).join("/")};break}}return r||t||null}function G(e,n){return`${k("/"===n?e:`${k(e)}/${k(n)}`)}/`}const S=h(((e,n,r,A)=>{let s,a,d,C,c,u,{basepath:p="/"}=n,{url:g=null}=n;const v=l(w),h=l(y),m=b([]);C=t(m,(e=>d=e));const f=b(null);let E=!1;const I=v||b(g?{pathname:g}:D.location);a=t(I,(e=>s=e));const B=h?h.routerBase:b({path:p,uri:p});u=t(B,(e=>c=e));const M=x([B,f],(([e,n])=>{if(null===n)return e;const{path:r}=e,{route:t,uri:A}=n;return{path:t.default?r:t.path.replace(/\*.*$/,""),uri:A}}));v||(o((()=>D.listen((e=>{I.set(e.location)})))),i(w,I)),i(y,{activeRoute:f,base:B,routerBase:M,registerRoute:function(e){const{path:n}=c;let{path:r}=e;if(e._path=r,e.path=G(n,r),"undefined"==typeof window){if(E)return;const n=function(e,n){return O([e],n)}(e,s.pathname);n&&(f.set(n),E=!0)}else m.update((n=>(n.push(e),n)))},unregisterRoute:function(e){m.update((n=>{const r=n.indexOf(e);return n.splice(r,1),n}))}}),void 0===n.basepath&&r.basepath&&void 0!==p&&r.basepath(p),void 0===n.url&&r.url&&void 0!==g&&r.url(g);{const{path:e}=c;m.update((n=>(n.forEach((n=>n.path=G(e,n._path))),n)))}{const e=O(d,s.pathname);f.set(e)}return a(),C(),u(),`${A.default?A.default({}):""}`})),$=h(((e,n,r,A)=>{let s,o,i,d,{path:C=""}=n,{component:c=null}=n;const{registerRoute:u,unregisterRoute:v,activeRoute:h}=l(y);o=t(h,(e=>s=e));d=t(l(w),(e=>i=e));const m={path:C,default:""===C};let f={},b={};var x;u(m),"undefined"!=typeof window&&(x=()=>{v(m)},a().$$.on_destroy.push(x)),void 0===n.path&&r.path&&void 0!==C&&r.path(C),void 0===n.component&&r.component&&void 0!==c&&r.component(c),s&&s.route===m&&(f=s.params);{const{path:e,component:r,...t}=n;b=t}return o(),d(),""+(null!==s&&s.route===m?""+(null!==c?`${g(c||p,"svelte:component").$$render(e,Object.assign({location:i},f,b),{},{})}`:`${A.default?A.default({params:f,location:i}):""}`):"")})),P={code:".home.svelte-3fiak6{display:grid;place-items:center}.logo.svelte-3fiak6{width:70px;margin-top:25vh;margin-bottom:10px\r\n  }.links.svelte-3fiak6{color:#707070;display:flex;width:400px;margin:50px auto auto}.link.svelte-3fiak6{width:fit-content;margin:auto;color:#707070;font-size:0.9}",map:'{"version":3,"file":"Home.svelte","sources":["Home.svelte"],"sourcesContent":["<div class=\\"home\\">\\r\\n<img class=\\"logo\\" src=\\"img/logo.png\\" alt=\\"\\" />\\r\\n<h1>API Analytics</h1>\\r\\n\\r\\n<div class=\\"links\\">\\r\\n  <a href=\\"/generate\\" class=\\"link\\"> <div class=\\"text\\">API key</div></a>\\r\\n  <a href=\\"/generate\\" class=\\"link\\"> <div class=\\"text\\">Dashboard</div></a>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<style scoped>\\r\\n  .home {\\r\\n    display: grid;\\r\\n    place-items: center;\\r\\n  }\\r\\n  .logo {\\r\\n    width: 70px;\\r\\n    margin-top: 25vh;\\r\\n    margin-bottom: 10px\\r\\n  }\\r\\n\\r\\n  .links {\\r\\n    color: #707070;\\r\\n    display: flex;\\r\\n    width: 400px;\\r\\n    margin: 50px auto auto;\\r\\n  }\\r\\n  .link {\\r\\n    /* margin: 0 20px; */\\r\\n    width: fit-content;\\r\\n    margin: auto;\\r\\n    color: #707070;\\r\\n    font-size: 0.9;\\r\\n    /* width: 200px; */\\r\\n  }\\r\\n  /* .text {\\r\\n    width: 200px;\\r\\n  } */\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAWE,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI;EACrB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,AACxB,CAAC,AACD,KAAK,cAAC,CAAC,AAEL,KAAK,CAAE,WAAW,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,GAAG,AAEhB,CAAC"}'},q=h(((e,n,r,t)=>(e.css.add(P),'<div class="home svelte-3fiak6"><img class="logo svelte-3fiak6" src="img/logo.png" alt="">\n<h1>API Analytics</h1>\n\n<div class="links svelte-3fiak6"><a href="/generate" class="link svelte-3fiak6"><div class="text">API key</div></a>\n  <a href="/generate" class="link svelte-3fiak6"><div class="text">Dashboard</div></a></div>\n</div>'))),W={code:'.generate.svelte-3ob4lh{display:grid;place-items:center}h2.svelte-3ob4lh{font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,\r\n      Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;margin:0 0 1em;font-size:2em}.content.svelte-3ob4lh{width:fit-content;background:#343434;background:#1c1c1c;padding:3.5em 4em 4em;border-radius:9px;margin:20vh 0 2vh}input.svelte-3ob4lh{background:#1c1c1c;background:#343434;border:none;padding:0 20px;width:300px;font-size:1em;text-align:center;height:40px;border-radius:4px;margin-bottom:2.5em;color:white;display:grid}button.svelte-3ob4lh{height:40px;border-radius:4px;padding:0 20px;border:none;cursor:pointer;width:100px}.highlight.svelte-3ob4lh{color:#3fcf8e}.details.svelte-3ob4lh{font-size:0.8em}.keep-secure.svelte-3ob4lh{color:#5a5a5a;margin-bottom:1em}#copyBtn.svelte-3ob4lh{background:#1c1c1c;display:none;background:#343434;place-items:center;margin:auto}.copy-icon.svelte-3ob4lh{filter:contrast(0.3);height:20px}#copied.svelte-3ob4lh{color:var(--highlight);margin:2em auto auto;visibility:hidden;height:1em}.spinner.svelte-3ob4lh{height:7em;margin-bottom:5em}#generateBtn.svelte-3ob4lh{background:#3fcf8e}',map:'{"version":3,"file":"Generate.svelte","sources":["Generate.svelte"],"sourcesContent":["<script lang=\\"ts\\">let loading = false;\\r\\nlet generatedKey = false;\\r\\nlet apiKey = \\"\\";\\r\\nlet generateBtn;\\r\\nlet copyBtn;\\r\\nlet copiedNotification;\\r\\nasync function genAPIKey() {\\r\\n    if (!generatedKey) {\\r\\n        loading = true;\\r\\n        const response = await fetch(\\"https://api-analytics-server.vercel.app/api/generate-api-key\\");\\r\\n        if (response.status == 200) {\\r\\n            const data = await response.json();\\r\\n            generatedKey = true;\\r\\n            apiKey = data.value;\\r\\n            generateBtn.style.display = \\"none\\";\\r\\n            copyBtn.style.display = \\"grid\\";\\r\\n        }\\r\\n        loading = false;\\r\\n    }\\r\\n}\\r\\nfunction copyToClipboard() {\\r\\n    navigator.clipboard.writeText(apiKey);\\r\\n    copyBtn.value = \\"Copied\\";\\r\\n    copiedNotification.style.visibility = \\"visible\\";\\r\\n}\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"generate\\">\\r\\n  <div class=\\"content\\">\\r\\n    <h2>Generate API key</h2>\\r\\n    <input type=\\"text\\" readonly bind:value={apiKey} />\\r\\n    <button id=\\"generateBtn\\" on:click={genAPIKey} bind:this={generateBtn}\\r\\n      >Generate</button\\r\\n    >\\r\\n    <button id=\\"copyBtn\\" on:click={copyToClipboard} bind:this={copyBtn}\\r\\n      ><img class=\\"copy-icon\\" src=\\"img/copy.png\\" alt=\\"\\" /></button\\r\\n    >\\r\\n    <div id=\\"copied\\" bind:this={copiedNotification}>Copied!</div>\\r\\n\\r\\n    <div class=\\"spinner\\">\\r\\n      <div class=\\"loader\\" style=\\"display: {loading ? \'initial\' : \'none\'}\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"details\\">\\r\\n      <div class=\\"keep-secure\\">Keep your API key safe and secure.</div>\\r\\n      <div class=\\"highlight logo\\">API Analytics</div>\\r\\n      <img class=\\"footer-logo\\" src=\\"img/logo.png\\" alt=\\"\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .generate {\\r\\n    display: grid;\\r\\n    place-items: center;\\r\\n  }\\r\\n  h2 {\\r\\n    font-family: -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Oxygen,\\r\\n      Ubuntu, Cantarell, \\"Open Sans\\", \\"Helvetica Neue\\", sans-serif;\\r\\n    margin: 0 0 1em;\\r\\n    font-size: 2em;\\r\\n  }\\r\\n  .content {\\r\\n    width: fit-content;\\r\\n    background: #343434;\\r\\n    background: #1c1c1c;\\r\\n    padding: 3.5em 4em 4em;\\r\\n    border-radius: 9px;\\r\\n    margin: 20vh 0 2vh;\\r\\n  }\\r\\n  input {\\r\\n    background: #1c1c1c;\\r\\n    background: #343434;\\r\\n    border: none;\\r\\n    padding: 0 20px;\\r\\n    width: 300px;\\r\\n    font-size: 1em;\\r\\n    text-align: center;\\r\\n    height: 40px;\\r\\n    border-radius: 4px;\\r\\n    margin-bottom: 2.5em;\\r\\n    color: white;\\r\\n    display: grid;\\r\\n  }\\r\\n  button {\\r\\n    height: 40px;\\r\\n    border-radius: 4px;\\r\\n    padding: 0 20px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    width: 100px;\\r\\n  }\\r\\n  .highlight {\\r\\n    color: #3fcf8e;\\r\\n  }\\r\\n  .details {\\r\\n    font-size: 0.8em;\\r\\n  }\\r\\n  .keep-secure {\\r\\n    color: #5a5a5a;\\r\\n    margin-bottom: 1em;\\r\\n  }\\r\\n\\r\\n  #copyBtn {\\r\\n    background: #1c1c1c;\\r\\n    display: none;\\r\\n    background: #343434;\\r\\n    place-items: center;\\r\\n    margin: auto;\\r\\n  }\\r\\n  .copy-icon {\\r\\n    filter: contrast(0.3);\\r\\n    height: 20px;\\r\\n  }\\r\\n  #copied {\\r\\n    color: var(--highlight);\\r\\n    margin: 2em auto auto;\\r\\n    visibility: hidden;\\r\\n    height: 1em;\\r\\n  }\\r\\n\\r\\n  .spinner {\\r\\n    height: 7em;\\r\\n    margin-bottom: 5em;\\r\\n  }\\r\\n  #generateBtn {\\r\\n    background: #3fcf8e;\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAoDE,SAAS,cAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,WAAW,CAAE,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;MACzE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAC9D,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACf,SAAS,CAAE,GAAG,AAChB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,WAAW,CAClB,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CACtB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,AACpB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,KAAK,CACpB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,AACf,CAAC,AACD,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,KAAK,AACd,CAAC,AACD,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,KAAK,CAAE,OAAO,CACd,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CACnB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,UAAU,cAAC,CAAC,AACV,MAAM,CAAE,SAAS,GAAG,CAAC,CACrB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,OAAO,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,MAAM,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CACrB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,AACb,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,UAAU,CAAE,OAAO,AACrB,CAAC"}'},U=h(((e,n,r,t)=>(e.css.add(W),`<div class="generate svelte-3ob4lh"><div class="content svelte-3ob4lh"><h2 class="svelte-3ob4lh">Generate API key</h2>\n    <input type="text" readonly class="svelte-3ob4lh"${m("value","",0)}>\n    <button id="generateBtn" class="svelte-3ob4lh"${m("this",undefined,0)}>Generate</button>\n    <button id="copyBtn" class="svelte-3ob4lh"${m("this",undefined,0)}><img class="copy-icon svelte-3ob4lh" src="img/copy.png" alt=""></button>\n    <div id="copied" class="svelte-3ob4lh"${m("this",undefined,0)}>Copied!</div>\n\n    <div class="spinner svelte-3ob4lh"><div class="loader" style="${"display: "+c("none",!0)}"></div></div>\n\n    <div class="details svelte-3ob4lh"><div class="keep-secure svelte-3ob4lh">Keep your API key safe and secure.</div>\n      <div class="highlight logo svelte-3ob4lh">API Analytics</div>\n      <img class="footer-logo" src="img/logo.png" alt=""></div></div>\n</div>`))),R={code:'.generate.svelte-6x9g5e{display:grid;place-items:center}h2.svelte-6x9g5e{font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,\r\n      Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;margin:0 0 1em;font-size:2em}.content.svelte-6x9g5e{width:fit-content;background:#343434;background:#1c1c1c;padding:3.5em 4em 4em;border-radius:9px;margin:20vh 0 2vh}input.svelte-6x9g5e{background:#1c1c1c;background:#343434;border:none;padding:0 20px;width:300px;font-size:1em;text-align:center;height:40px;border-radius:4px;margin-bottom:2.5em;color:white;display:grid}button.svelte-6x9g5e{height:40px;border-radius:4px;padding:0 20px;border:none;cursor:pointer;width:100px}.highlight.svelte-6x9g5e{color:#3fcf8e}.details.svelte-6x9g5e{font-size:0.8em}.keep-secure.svelte-6x9g5e{color:#5a5a5a;margin-bottom:1em}#generateBtn.svelte-6x9g5e{background:#3fcf8e}',map:'{"version":3,"file":"SignIn.svelte","sources":["SignIn.svelte"],"sourcesContent":["<script lang=\\"ts\\">let apiKey = \\"\\";\\r\\nlet loading = false;\\r\\nasync function genAPIKey() {\\r\\n    loading = true;\\r\\n    // Fetch page ID\\r\\n    const response = await fetch(`https://api-analytics-server.vercel.app/api/user-id/${apiKey}`);\\r\\n    console.log(response);\\r\\n    if (response.status == 200) {\\r\\n        const data = await response.json();\\r\\n        window.location.href = `/dashboard/${data.value.replaceAll(\\"-\\", \\"\\")}`;\\r\\n    }\\r\\n    loading = false;\\r\\n}\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"generate\\">\\r\\n  <div class=\\"content\\">\\r\\n    <h2>Dashboard</h2>\\r\\n    <input type=\\"text\\" bind:value={apiKey} placeholder=\\"Enter API key\\"/>\\r\\n    <button id=\\"generateBtn\\" on:click={genAPIKey}>Load</button>\\r\\n    <div class=\\"spinner\\">\\r\\n      <div class=\\"loader\\" style=\\"display: {loading ? \'initial\' : \'none\'}\\" />\\r\\n    </div>\\r\\n    <div class=\\"details\\">\\r\\n      <div class=\\"keep-secure\\">Keep your API key safe and secure.</div>\\r\\n      <div class=\\"highlight logo\\">API Analytics</div>\\r\\n      <img class=\\"footer-logo\\" src=\\"img/logo.png\\" alt=\\"\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .generate {\\r\\n    display: grid;\\r\\n    place-items: center;\\r\\n  }\\r\\n  h2 {\\r\\n    font-family: -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Oxygen,\\r\\n      Ubuntu, Cantarell, \\"Open Sans\\", \\"Helvetica Neue\\", sans-serif;\\r\\n    margin: 0 0 1em;\\r\\n    font-size: 2em;\\r\\n  }\\r\\n  .content {\\r\\n    width: fit-content;\\r\\n    background: #343434;\\r\\n    background: #1c1c1c;\\r\\n    padding: 3.5em 4em 4em;\\r\\n    border-radius: 9px;\\r\\n    margin: 20vh 0 2vh;\\r\\n  }\\r\\n  input {\\r\\n    background: #1c1c1c;\\r\\n    background: #343434;\\r\\n    border: none;\\r\\n    padding: 0 20px;\\r\\n    width: 300px;\\r\\n    font-size: 1em;\\r\\n    text-align: center;\\r\\n    height: 40px;\\r\\n    border-radius: 4px;\\r\\n    margin-bottom: 2.5em;\\r\\n    color: white;\\r\\n    display: grid;\\r\\n  }\\r\\n  button {\\r\\n    height: 40px;\\r\\n    border-radius: 4px;\\r\\n    padding: 0 20px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    width: 100px;\\r\\n  }\\r\\n  .highlight {\\r\\n    color: #3fcf8e;\\r\\n  }\\r\\n  .details {\\r\\n    /* margin-top: 15rem; */\\r\\n    font-size: 0.8em;\\r\\n  }\\r\\n  .keep-secure {\\r\\n    color: #5a5a5a;\\r\\n    margin-bottom: 1em;\\r\\n  }\\r\\n  #generateBtn {\\r\\n    background: #3fcf8e;\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAgCE,SAAS,cAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,WAAW,CAAE,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;MACzE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAC9D,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACf,SAAS,CAAE,GAAG,AAChB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,WAAW,CAClB,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CACtB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,AACpB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,KAAK,CACpB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,AACf,CAAC,AACD,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,KAAK,AACd,CAAC,AACD,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,QAAQ,cAAC,CAAC,AAER,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,KAAK,CAAE,OAAO,CACd,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,UAAU,CAAE,OAAO,AACrB,CAAC"}'},T=h(((e,n,r,t)=>(e.css.add(R),`<div class="generate svelte-6x9g5e"><div class="content svelte-6x9g5e"><h2 class="svelte-6x9g5e">Dashboard</h2>\n    <input type="text" placeholder="Enter API key" class="svelte-6x9g5e"${m("value","",0)}>\n    <button id="generateBtn" class="svelte-6x9g5e">Load</button>\n    <div class="spinner"><div class="loader" style="${"display: "+c("none",!0)}"></div></div>\n    <div class="details svelte-6x9g5e"><div class="keep-secure svelte-6x9g5e">Keep your API key safe and secure.</div>\n      <div class="highlight logo svelte-6x9g5e">API Analytics</div>\n      <img class="footer-logo" src="img/logo.png" alt=""></div></div>\n</div>`))),F={code:".card.svelte-1ccoenr{width:calc(200px - 1em);margin:0 1em 0 2em}.value.svelte-1ccoenr{margin:20px 0;font-size:1.8em;font-weight:600}.per-hour.svelte-1ccoenr{color:var(--dim-text);font-size:0.8em;margin-left:4px}",map:'{"version":3,"file":"Requests.svelte","sources":["Requests.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\nfunction thisWeek(date) {\\r\\n    let weekAgo = new Date();\\r\\n    weekAgo.setDate(weekAgo.getDate() - 7);\\r\\n    return date > weekAgo;\\r\\n}\\r\\nfunction build() {\\r\\n    let totalRequests = 0;\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        let date = new Date(data[i].created_at);\\r\\n        if (thisWeek(date)) {\\r\\n            totalRequests++;\\r\\n        }\\r\\n    }\\r\\n    requestsPerHour = ((24 * 7) / totalRequests).toFixed(2);\\r\\n}\\r\\nlet requestsPerHour;\\r\\nonMount(() => {\\r\\n    build();\\r\\n});\\r\\nexport let data;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"card\\" title=\\"Last week\\">\\r\\n  <div class=\\"card-title\\">\\r\\n    Requests <span class=\\"per-hour\\">/ hour</span>\\r\\n  </div>\\r\\n  {#if requestsPerHour != undefined}\\r\\n    <div class=\\"value\\">{requestsPerHour}</div>\\r\\n  {/if}\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .card {\\r\\n    width: calc(200px - 1em);\\r\\n    margin: 0 1em 0 2em;\\r\\n  }\\r\\n  .value {\\r\\n    margin: 20px 0;\\r\\n    font-size: 1.8em;\\r\\n    font-weight: 600;\\r\\n  }\\r\\n  .per-hour {\\r\\n    color: var(--dim-text);\\r\\n    font-size: 0.8em;\\r\\n    margin-left: 4px;\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAiCE,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,AACrB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC,AACD,SAAS,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC"}'};function z(e){let n=new Date;return n.setDate(n.getDate()-7),e>n}const L=h(((e,n,r,t)=>{let A;o((()=>{!function(){let e=0;for(let n=0;n<s.length;n++)z(new Date(s[n].created_at))&&e++;A=(168/e).toFixed(2)}()}));let{data:s}=n;return void 0===n.data&&r.data&&void 0!==s&&r.data(s),e.css.add(F),`<div class="card svelte-1ccoenr" title="Last week"><div class="card-title">Requests <span class="per-hour svelte-1ccoenr">/ hour</span></div>\n  ${null!=A?`<div class="value svelte-1ccoenr">${c(A)}</div>`:""}\n</div>`})),_={code:".values.svelte-1ei7pkl{display:flex;color:var(--highlight);font-size:1.8em;font-weight:700}.values.svelte-1ei7pkl,.labels.svelte-1ei7pkl{margin:0 0.5rem}.value.svelte-1ei7pkl{flex:1;font-size:1.1em;padding:20px 20px 4px}.labels.svelte-1ei7pkl{display:flex;font-size:0.8em;color:var(--dim-text)}.label.svelte-1ei7pkl{flex:1}.milliseconds.svelte-1ei7pkl{color:var(--dim-text);font-size:0.8em;margin-left:4px}.median.svelte-1ei7pkl{font-size:1em}.upper-quartile.svelte-1ei7pkl,.lower-quartile.svelte-1ei7pkl{font-size:1em;padding-bottom:0}.bar.svelte-1ei7pkl{padding:20px 0 20px;display:flex;height:30px;width:85%;margin:auto;align-items:center;position:relative}.bar-green.svelte-1ei7pkl{background:var(--highlight);width:75%;height:10px;border-radius:2px 0 0 2px}.bar-yellow.svelte-1ei7pkl{width:15%;height:10px;background:rgb(235, 235, 129)}.bar-red.svelte-1ei7pkl{width:20%;height:10px;border-radius:0 2px 2px 0;background:rgb(228, 97, 97)}.marker.svelte-1ei7pkl{position:absolute;height:30px;width:5px;background:white;border-radius:2px;left:0}",map:'{"version":3,"file":"ResponseTimes.svelte","sources":["ResponseTimes.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\n// Median and quartiles from StackOverflow answer\\r\\n// https://stackoverflow.com/a/55297611/8851732\\r\\nconst asc = (arr) => arr.sort((a, b) => a - b);\\r\\nconst sum = (arr) => arr.reduce((a, b) => a + b, 0);\\r\\nconst mean = (arr) => sum(arr) / arr.length;\\r\\n// sample standard deviation\\r\\nfunction std(arr) {\\r\\n    const mu = mean(arr);\\r\\n    const diffArr = arr.map((a) => (a - mu) ** 2);\\r\\n    return Math.sqrt(sum(diffArr) / (arr.length - 1));\\r\\n}\\r\\nfunction quantile(arr, q) {\\r\\n    const sorted = asc(arr);\\r\\n    const pos = (sorted.length - 1) * q;\\r\\n    const base = Math.floor(pos);\\r\\n    const rest = pos - base;\\r\\n    if (sorted[base + 1] !== undefined) {\\r\\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\\r\\n    }\\r\\n    else {\\r\\n        return sorted[base];\\r\\n    }\\r\\n}\\r\\nfunction markerPosition(x) {\\r\\n    let position = Math.log10(x) * 125 - 300;\\r\\n    if (position < 0) {\\r\\n        return 0;\\r\\n    }\\r\\n    else if (position > 100) {\\r\\n        return 100;\\r\\n    }\\r\\n    else {\\r\\n        return position;\\r\\n    }\\r\\n}\\r\\nfunction setMarkerPosition(median) {\\r\\n    let position = markerPosition(median);\\r\\n    marker.style.left = `${position}%`;\\r\\n}\\r\\nfunction build() {\\r\\n    let responseTimes = [];\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        responseTimes.push(data[i].response_time);\\r\\n    }\\r\\n    median = quantile(responseTimes, 0.25);\\r\\n    LQ = quantile(responseTimes, 0.5);\\r\\n    UQ = quantile(responseTimes, 0.75);\\r\\n    setMarkerPosition(median);\\r\\n}\\r\\nlet median, LQ, UQ;\\r\\nlet marker;\\r\\nonMount(() => {\\r\\n    build();\\r\\n});\\r\\nexport let data;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"card\\">\\r\\n  <div class=\\"card-title\\">\\r\\n    Response Times <span class=\\"milliseconds\\">(ms)</span>\\r\\n  </div>\\r\\n  <div class=\\"values\\">\\r\\n    <div class=\\"value lower-quartile\\">{LQ}</div>\\r\\n    <div class=\\"value median\\">{median}</div>\\r\\n    <div class=\\"value upper-quartile\\">{UQ}</div>\\r\\n  </div>\\r\\n  <div class=\\"labels\\">\\r\\n    <div class=\\"label\\">25%</div>\\r\\n    <div class=\\"label\\">Median</div>\\r\\n    <div class=\\"label\\">75%</div>\\r\\n  </div>\\r\\n  <div class=\\"bar\\">\\r\\n    <div class=\\"bar-green\\" />\\r\\n    <div class=\\"bar-yellow\\" />\\r\\n    <div class=\\"bar-red\\" />\\r\\n    <div class=\\"marker\\" bind:this={marker} />\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .values {\\r\\n    display: flex;\\r\\n    color: var(--highlight);\\r\\n    font-size: 1.8em;\\r\\n    font-weight: 700;\\r\\n  }\\r\\n  .values,\\r\\n  .labels {\\r\\n    margin: 0 0.5rem;\\r\\n  }\\r\\n  .value {\\r\\n    flex: 1;\\r\\n    font-size: 1.1em;\\r\\n    padding: 20px 20px 4px;\\r\\n  }\\r\\n  .labels {\\r\\n    display: flex;\\r\\n    font-size: 0.8em;\\r\\n    color: var(--dim-text);\\r\\n  }\\r\\n  .label {\\r\\n    flex: 1;\\r\\n  }\\r\\n\\r\\n  .milliseconds {\\r\\n    color: var(--dim-text);\\r\\n    font-size: 0.8em;\\r\\n    margin-left: 4px;\\r\\n  }\\r\\n\\r\\n  .median {\\r\\n    font-size: 1em;\\r\\n  }\\r\\n  .upper-quartile,\\r\\n  .lower-quartile {\\r\\n    font-size: 1em;\\r\\n    padding-bottom: 0;\\r\\n  }\\r\\n\\r\\n  .bar {\\r\\n    padding: 20px 0 20px;\\r\\n    display: flex;\\r\\n    height: 30px;\\r\\n    width: 85%;\\r\\n    margin: auto;\\r\\n    align-items: center;\\r\\n    position: relative;\\r\\n  }\\r\\n  .bar-green {\\r\\n    background: var(--highlight);\\r\\n    width: 75%;\\r\\n    height: 10px;\\r\\n    border-radius: 2px 0 0 2px;\\r\\n  }\\r\\n  .bar-yellow {\\r\\n    width: 15%;\\r\\n    height: 10px;\\r\\n    background: rgb(235, 235, 129);\\r\\n  }\\r\\n  .bar-red {\\r\\n    width: 20%;\\r\\n    height: 10px;\\r\\n    border-radius: 0 2px 2px 0;\\r\\n    background: rgb(228, 97, 97);\\r\\n  }\\r\\n  .marker {\\r\\n    position: absolute;\\r\\n    height: 30px;\\r\\n    width: 5px;\\r\\n    background: white;\\r\\n    border-radius: 2px;\\r\\n    left: 0; /* Changed during runtime to reflect median */\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAiFE,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC,AACD,sBAAO,CACP,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,CAAC,CAAC,MAAM,AAClB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,AACxB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,UAAU,CAAC,AACxB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,IAAI,CAAE,CAAC,AACT,CAAC,AAED,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,IAAI,UAAU,CAAC,CACtB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,SAAS,CAAE,GAAG,AAChB,CAAC,AACD,8BAAe,CACf,eAAe,eAAC,CAAC,AACf,SAAS,CAAE,GAAG,CACd,cAAc,CAAE,CAAC,AACnB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CACpB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,UAAU,eAAC,CAAC,AACV,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,AAC5B,CAAC,AACD,WAAW,eAAC,CAAC,AACX,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAChC,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAC1B,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AAC9B,CAAC,AACD,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,IAAI,CAAE,CAAC,AACT,CAAC"}'};const N=h(((e,n,r,t)=>{function A(e,n){const r=(e=>e.sort(((e,n)=>e-n)))(e),t=(r.length-1)*n,A=Math.floor(t),s=t-A;return void 0!==r[A+1]?r[A]+s*(r[A+1]-r[A]):r[A]}function s(e){let n=function(e){let n=125*Math.log10(e)-300;return n<0?0:n>100?100:n}(e);d.style.left=`${n}%`}let a,i,l,d;o((()=>{!function(){let e=[];for(let n=0;n<C.length;n++)e.push(C[n].response_time);a=A(e,.25),i=A(e,.5),l=A(e,.75),s(a)}()}));let{data:C}=n;return void 0===n.data&&r.data&&void 0!==C&&r.data(C),e.css.add(_),`<div class="card"><div class="card-title">Response Times <span class="milliseconds svelte-1ei7pkl">(ms)</span></div>\n  <div class="values svelte-1ei7pkl"><div class="value lower-quartile svelte-1ei7pkl">${c(i)}</div>\n    <div class="value median svelte-1ei7pkl">${c(a)}</div>\n    <div class="value upper-quartile svelte-1ei7pkl">${c(l)}</div></div>\n  <div class="labels svelte-1ei7pkl"><div class="label svelte-1ei7pkl">25%</div>\n    <div class="label svelte-1ei7pkl">Median</div>\n    <div class="label svelte-1ei7pkl">75%</div></div>\n  <div class="bar svelte-1ei7pkl"><div class="bar-green svelte-1ei7pkl"></div>\n    <div class="bar-yellow svelte-1ei7pkl"></div>\n    <div class="bar-red svelte-1ei7pkl"></div>\n    <div class="marker svelte-1ei7pkl"${m("this",d,0)}></div></div>\n</div>`})),Q={code:".card.svelte-o04fqo{min-height:361px}.endpoints.svelte-o04fqo{margin:1em 20px 0.6em}.endpoint.svelte-o04fqo{border-radius:3px;margin:6px 0;color:var(--light-background);text-align:left;position:relative}.endpoint-label.svelte-o04fqo{display:flex}.path.svelte-o04fqo,.count.svelte-o04fqo{padding:3px 15px}.path.svelte-o04fqo{flex-grow:1}.endpoint-container.svelte-o04fqo{display:flex}.external-label.svelte-o04fqo{padding:3px 15px;left:40px;top:0;margin:6px 0;color:#707070;display:none}",map:'{"version":3,"file":"Endpoints.svelte","sources":["Endpoints.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\nfunction endpointFreq() {\\r\\n    let freq = {};\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        let endpointID = data[i].path + data[i].status;\\r\\n        if (!(endpointID in freq)) {\\r\\n            freq[endpointID] = {\\r\\n                path: data[i].path,\\r\\n                status: data[i].status,\\r\\n                count: 0,\\r\\n            };\\r\\n        }\\r\\n        freq[endpointID].count++;\\r\\n    }\\r\\n    return freq;\\r\\n}\\r\\nfunction build() {\\r\\n    let freq = endpointFreq();\\r\\n    let freqArr = [];\\r\\n    maxCount = 0;\\r\\n    for (let endpointID in freq) {\\r\\n        freqArr.push(freq[endpointID]);\\r\\n        if (freq[endpointID].count > maxCount) {\\r\\n            maxCount = freq[endpointID].count;\\r\\n        }\\r\\n    }\\r\\n    freqArr.sort((a, b) => {\\r\\n        return b.count - a.count;\\r\\n    });\\r\\n    endpoints = freqArr;\\r\\n}\\r\\nfunction setEndpointLabelVisibility(idx) {\\r\\n    let endpoint = document.getElementById(`endpoint-label-${idx}`);\\r\\n    let endpointPath = document.getElementById(`endpoint-path-${idx}`);\\r\\n    let endpointCount = document.getElementById(`endpoint-count-${idx}`);\\r\\n    let externalLabel = document.getElementById(`external-label-${idx}`);\\r\\n    if (endpoint.clientWidth <\\r\\n        endpointPath.clientWidth + endpointCount.clientWidth) {\\r\\n        externalLabel.style.display = \\"flex\\";\\r\\n        endpointPath.style.display = \\"none\\";\\r\\n    }\\r\\n}\\r\\nfunction setEndpointLabels() {\\r\\n    for (let i = 0; i < endpoints.length; i++) {\\r\\n        setEndpointLabelVisibility(i);\\r\\n    }\\r\\n}\\r\\nonMount(() => {\\r\\n    build();\\r\\n    setTimeout(setEndpointLabels, 50);\\r\\n});\\r\\nlet endpoints;\\r\\nlet maxCount;\\r\\nexport let data;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"card\\">\\r\\n  <div class=\\"card-title\\">Endpoints</div>\\r\\n  {#if endpoints != undefined}\\r\\n    <div class=\\"endpoints\\">\\r\\n      {#each endpoints as endpoint, i}\\r\\n        <div class=\\"endpoint-container\\">\\r\\n          <div\\r\\n            class=\\"endpoint\\"\\r\\n            id=\\"endpoint-{i}\\"\\r\\n            style=\\"width: {(endpoint.count / maxCount) *\\r\\n              100}%; background: {endpoint.status >= 200 &&\\r\\n            endpoint.status <= 299\\r\\n              ? \'var(--highlight)\'\\r\\n              : \'#e46161\'}\\"\\r\\n          >\\r\\n            <div class=\\"endpoint-label\\" id=\\"endpoint-label-{i}\\">\\r\\n              <div class=\\"path\\" id=\\"endpoint-path-{i}\\">\\r\\n                {endpoint.path}\\r\\n              </div>\\r\\n              <div class=\\"count\\" id=\\"endpoint-count-{i}\\">{endpoint.count}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\"external-label\\" id=\\"external-label-{i}\\">\\r\\n            <div class=\\"external-label-path\\">\\r\\n              {endpoint.path}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      {/each}\\r\\n    </div>\\r\\n  {/if}\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .card {\\r\\n    min-height: 361px;\\r\\n  }\\r\\n  .endpoints {\\r\\n    margin: 1em 20px 0.6em;\\r\\n  }\\r\\n  .endpoint {\\r\\n    border-radius: 3px;\\r\\n    margin: 6px 0;\\r\\n    color: var(--light-background);\\r\\n    text-align: left;\\r\\n    position: relative;\\r\\n  }\\r\\n  .endpoint-label {\\r\\n    display: flex;\\r\\n  }\\r\\n  .path,\\r\\n  .count {\\r\\n    padding: 3px 15px;\\r\\n  }\\r\\n  .path {\\r\\n    flex-grow: 1;\\r\\n  }\\r\\n  .endpoint-container {\\r\\n    display: flex;\\r\\n  }\\r\\n  .external-label {\\r\\n    padding: 3px 15px;\\r\\n    left: 40px;\\r\\n    top: 0;\\r\\n    margin: 6px 0;\\r\\n    color: #707070;\\r\\n    display: none;\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AA0FE,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,MAAM,CAAE,GAAG,CAAC,IAAI,CAAC,KAAK,AACxB,CAAC,AACD,SAAS,cAAC,CAAC,AACT,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,KAAK,CAAE,IAAI,kBAAkB,CAAC,CAC9B,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,eAAe,cAAC,CAAC,AACf,OAAO,CAAE,IAAI,AACf,CAAC,AACD,mBAAK,CACL,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,GAAG,CAAC,IAAI,AACnB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,CAAC,AACd,CAAC,AACD,mBAAmB,cAAC,CAAC,AACnB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,eAAe,cAAC,CAAC,AACf,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,IAAI,CAAE,IAAI,CACV,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,AACf,CAAC"}'};function Z(e){let n=document.getElementById(`endpoint-label-${e}`),r=document.getElementById(`endpoint-path-${e}`),t=document.getElementById(`endpoint-count-${e}`),A=document.getElementById(`external-label-${e}`);n.clientWidth<r.clientWidth+t.clientWidth&&(A.style.display="flex",r.style.display="none")}const Y=h(((e,n,r,t)=>{function A(){let e=function(){let e={};for(let n=0;n<l.length;n++){let r=l[n].path+l[n].status;r in e||(e[r]={path:l[n].path,status:l[n].status,count:0}),e[r].count++}return e}(),n=[];i=0;for(let r in e)n.push(e[r]),e[r].count>i&&(i=e[r].count);n.sort(((e,n)=>n.count-e.count)),a=n}function s(){for(let e=0;e<a.length;e++)Z(e)}let a,i;o((()=>{A(),setTimeout(s,50)}));let{data:l}=n;return void 0===n.data&&r.data&&void 0!==l&&r.data(l),e.css.add(Q),`<div class="card svelte-o04fqo"><div class="card-title">Endpoints</div>\n  ${null!=a?`<div class="endpoints svelte-o04fqo">${u(a,((e,n)=>`<div class="endpoint-container svelte-o04fqo"><div class="endpoint svelte-o04fqo" id="${"endpoint-"+c(n,!0)}" style="${"width: "+c(e.count/i*100,!0)+"%; background: "+c(e.status>=200&&e.status<=299?"var(--highlight)":"#e46161",!0)}"><div class="endpoint-label svelte-o04fqo" id="${"endpoint-label-"+c(n,!0)}"><div class="path svelte-o04fqo" id="${"endpoint-path-"+c(n,!0)}">${c(e.path)}</div>\n              <div class="count svelte-o04fqo" id="${"endpoint-count-"+c(n,!0)}">${c(e.count)}</div>\n            </div></div>\n          <div class="external-label svelte-o04fqo" id="${"external-label-"+c(n,!0)}"><div class="external-label-path">${c(e.path)}\n            </div></div>\n        </div>`))}</div>`:""}\n</div>`})),j={code:".footer.svelte-gtg7hl{font-size:0.9em;color:var(--highlight)}",map:'{"version":3,"file":"Footer.svelte","sources":["Footer.svelte"],"sourcesContent":["<div class=\\"footer\\">API Analytics</div>\\r\\n<img class=\\"footer-logo\\" src=\\"img/logo.png\\" alt=\\"\\">\\r\\n\\r\\n<style>\\r\\n  .footer {\\r\\n    font-size: 0.9em;\\r\\n    color: var(--highlight);\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAIE,OAAO,cAAC,CAAC,AACP,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,WAAW,CAAC,AACzB,CAAC"}'},V=h(((e,n,r,t)=>(e.css.add(j),'<div class="footer svelte-gtg7hl">API Analytics</div>\n<img class="footer-logo" src="img/logo.png" alt="">'))),H={code:".card.svelte-1576jro{width:calc(200px - 1em);margin:0 0 0 1em}.value.svelte-1576jro{margin:20px 0;font-size:1.8em;font-weight:600;color:var(--yellow)}",map:'{"version":3,"file":"SuccessRate.svelte","sources":["SuccessRate.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\nfunction pastWeek(date) {\\r\\n    let weekAgo = new Date();\\r\\n    weekAgo.setDate(weekAgo.getDate() - 7);\\r\\n    return date > weekAgo;\\r\\n}\\r\\nfunction build() {\\r\\n    let totalRequests = 0;\\r\\n    let successfulRequests = 0;\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        let date = new Date(data[i].created_at);\\r\\n        if (pastWeek(date)) {\\r\\n            if (data[i].status >= 200 && data[i].status <= 299) {\\r\\n                successfulRequests++;\\r\\n            }\\r\\n            totalRequests++;\\r\\n        }\\r\\n    }\\r\\n    successRate = (successfulRequests / totalRequests) * 100;\\r\\n}\\r\\nlet successRate;\\r\\nonMount(() => {\\r\\n    build();\\r\\n});\\r\\nexport let data;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"card\\" title=\\"Last week\\">\\r\\n  <div class=\\"card-title\\">Success Rate</div>\\r\\n  {#if successRate != undefined}\\r\\n    <div\\r\\n      class=\\"value\\"\\r\\n      style=\\"color: {successRate <= 75 ? \'var(--red)\' : \'\'}{successRate > 75 &&\\r\\n      successRate < 90\\r\\n        ? \'var(--yellow)\'\\r\\n        : \'\'}{successRate >= 90 ? \'var(--highlight)\' : \'\'}\\"\\r\\n    >\\r\\n      {successRate.toFixed(1)}%\\r\\n    </div>\\r\\n  {/if}\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .card {\\r\\n    width: calc(200px - 1em);\\r\\n    margin: 0 0 0 1em;\\r\\n  }\\r\\n\\r\\n  .value {\\r\\n    margin: 20px 0;\\r\\n    font-size: 1.8em;\\r\\n    font-weight: 600;\\r\\n    color: var(--yellow);\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AA2CE,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,AACnB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,IAAI,QAAQ,CAAC,AACtB,CAAC"}'};function X(e){let n=new Date;return n.setDate(n.getDate()-7),e>n}const J=h(((e,n,r,t)=>{let A;o((()=>{!function(){let e=0,n=0;for(let r=0;r<s.length;r++)X(new Date(s[r].created_at))&&(s[r].status>=200&&s[r].status<=299&&n++,e++);A=n/e*100}()}));let{data:s}=n;return void 0===n.data&&r.data&&void 0!==s&&r.data(s),e.css.add(H),`<div class="card svelte-1576jro" title="Last week"><div class="card-title">Success Rate</div>\n  ${null!=A?`<div class="value svelte-1576jro" style="${"color: "+c(A<=75?"var(--red)":"",!0)+c(A>75&&A<90?"var(--yellow)":"",!0)+c(A>=90?"var(--highlight)":"",!0)}">${c(A.toFixed(1))}%\n    </div>`:""}\n</div>`})),ee={code:".card.svelte-1hai9zp{margin:0;width:100%}.errors.svelte-1hai9zp{display:flex;margin-top:8px}.error.svelte-1hai9zp{background:var(--highlight);flex:1;height:40px;margin:0 1px;border-radius:1px}.success-rate-container.svelte-1hai9zp{text-align:left;font-size:0.9em;color:#707070}.success-rate-container.svelte-1hai9zp{margin:1.5em 2em 2em}",map:'{"version":3,"file":"PastMonth.svelte","sources":["PastMonth.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\nfunction pastMonth(date) {\\r\\n    let monthAgo = new Date();\\r\\n    monthAgo.setDate(monthAgo.getDate() - 30);\\r\\n    return date > monthAgo;\\r\\n}\\r\\nlet colors = [\\r\\n    \\"#444444\\",\\r\\n    \\"#E46161\\",\\r\\n    \\"#F18359\\",\\r\\n    \\"#F5A65A\\",\\r\\n    \\"#F3C966\\",\\r\\n    \\"#EBEB81\\",\\r\\n    \\"#C7E57D\\",\\r\\n    \\"#A1DF7E\\",\\r\\n    \\"#77D884\\",\\r\\n    \\"#3FCF8E\\", // Green\\r\\n];\\r\\nfunction daysAgo(date) {\\r\\n    let now = new Date();\\r\\n    return Math.floor((now.getTime() - date.getTime()) / (24 * 60 * 60 * 1000));\\r\\n}\\r\\nfunction setSuccessRate() {\\r\\n    let success = {};\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        let date = new Date(data[i].created_at);\\r\\n        if (pastMonth(date)) {\\r\\n            date.setHours(0, 0, 0, 0);\\r\\n            // @ts-ignore\\r\\n            if (!(date in success)) {\\r\\n                // @ts-ignore\\r\\n                success[date] = { total: 0, successful: 0 };\\r\\n            }\\r\\n            if (data[i].status >= 200 && data[i].status <= 299) {\\r\\n                // @ts-ignore\\r\\n                success[date].successful++;\\r\\n            }\\r\\n            // @ts-ignore\\r\\n            success[date].total++;\\r\\n        }\\r\\n    }\\r\\n    let successArr = new Array(60).fill(-0.1); // -0.1 -> 0\\r\\n    for (let date in success) {\\r\\n        let idx = daysAgo(new Date(date));\\r\\n        successArr[successArr.length - idx] = success[date].successful / success[date].total;\\r\\n    }\\r\\n    successRate = successArr;\\r\\n}\\r\\nfunction responseTimePlotLayout() {\\r\\n    let monthAgo = new Date();\\r\\n    monthAgo.setDate(monthAgo.getDate() - 30);\\r\\n    let tomorrow = new Date();\\r\\n    tomorrow.setDate(tomorrow.getDate() + 1);\\r\\n    return {\\r\\n        title: false,\\r\\n        autosize: true,\\r\\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\\r\\n        hovermode: \\"closest\\",\\r\\n        plot_bgcolor: \\"transparent\\",\\r\\n        paper_bgcolor: \\"transparent\\",\\r\\n        height: 150,\\r\\n        yaxis: {\\r\\n            title: { text: \\"Response time (ms)\\" },\\r\\n            gridcolor: \\"gray\\",\\r\\n            showgrid: false,\\r\\n            fixedrange: true,\\r\\n        },\\r\\n        xaxis: {\\r\\n            title: { text: \\"Date\\" },\\r\\n            showgrid: false,\\r\\n            fixedrange: true,\\r\\n            range: [monthAgo, tomorrow],\\r\\n            visible: false,\\r\\n        },\\r\\n        dragmode: false,\\r\\n    };\\r\\n}\\r\\nfunction responseTimeLine() {\\r\\n    let points = [];\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        points.push([new Date(data[i].created_at), data[i].response_time]);\\r\\n    }\\r\\n    points.sort((a, b) => {\\r\\n        return a[0] - b[0];\\r\\n    });\\r\\n    let dates = [];\\r\\n    let responses = [];\\r\\n    for (let i = 0; i < points.length; i++) {\\r\\n        dates.push(points[i][0]);\\r\\n        responses.push(points[i][1]);\\r\\n    }\\r\\n    return [\\r\\n        {\\r\\n            x: dates,\\r\\n            y: responses,\\r\\n            mode: \\"lines\\",\\r\\n            line: { color: \\"#3fcf8e\\" },\\r\\n            hovertemplate: `<b>%{y:.1f}ms avg</b><br>%{x|%d %b %Y}</b><extra></extra>`,\\r\\n            showlegend: false,\\r\\n        },\\r\\n    ];\\r\\n}\\r\\nfunction responseTimePlotData() {\\r\\n    return {\\r\\n        data: responseTimeLine(),\\r\\n        layout: responseTimePlotLayout(),\\r\\n        config: {\\r\\n            responsive: true,\\r\\n            showSendToCloud: false,\\r\\n            displayModeBar: false,\\r\\n        },\\r\\n    };\\r\\n}\\r\\nfunction genResponseTimePlot() {\\r\\n    let plotData = responseTimePlotData();\\r\\n    //@ts-ignore\\r\\n    new Plotly.newPlot(responseTimePlotDiv, plotData.data, plotData.layout, plotData.config);\\r\\n}\\r\\nfunction requestsFreqPlotLayout() {\\r\\n    let monthAgo = new Date();\\r\\n    monthAgo.setDate(monthAgo.getDate() - 30);\\r\\n    let tomorrow = new Date();\\r\\n    tomorrow.setDate(tomorrow.getDate() + 1);\\r\\n    return {\\r\\n        title: false,\\r\\n        autosize: true,\\r\\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\\r\\n        hovermode: \\"closest\\",\\r\\n        plot_bgcolor: \\"transparent\\",\\r\\n        paper_bgcolor: \\"transparent\\",\\r\\n        height: 150,\\r\\n        yaxis: {\\r\\n            title: { text: \\"Requests\\" },\\r\\n            gridcolor: \\"gray\\",\\r\\n            showgrid: false,\\r\\n            fixedrange: true,\\r\\n        },\\r\\n        xaxis: {\\r\\n            title: { text: \\"Date\\" },\\r\\n            fixedrange: true,\\r\\n            range: [monthAgo, tomorrow],\\r\\n            visible: false,\\r\\n        },\\r\\n        dragmode: false,\\r\\n    };\\r\\n}\\r\\nfunction requestsFreqLine() {\\r\\n    let requestFreq = {};\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        let date = new Date(data[i].created_at);\\r\\n        date.setHours(0, 0, 0, 0);\\r\\n        // @ts-ignore\\r\\n        if (!(date in requestFreq)) {\\r\\n            // @ts-ignore\\r\\n            requestFreq[date] = 0;\\r\\n        }\\r\\n        // @ts-ignore\\r\\n        requestFreq[date]++;\\r\\n    }\\r\\n    let requestFreqArr = [];\\r\\n    for (let date in requestFreq) {\\r\\n        requestFreqArr.push([new Date(date), requestFreq[date]]);\\r\\n    }\\r\\n    requestFreqArr.sort((a, b) => {\\r\\n        return a[0] - b[0];\\r\\n    });\\r\\n    let dates = [];\\r\\n    let requests = [];\\r\\n    for (let i = 0; i < requestFreqArr.length; i++) {\\r\\n        dates.push(requestFreqArr[i][0]);\\r\\n        requests.push(requestFreqArr[i][1]);\\r\\n    }\\r\\n    return [\\r\\n        {\\r\\n            x: dates,\\r\\n            y: requests,\\r\\n            type: \\"bar\\",\\r\\n            marker: { color: \\"#3fcf8e\\" },\\r\\n            hovertemplate: `<b>%{y} requests</b><br>%{x|%d %b %Y}</b><extra></extra>`,\\r\\n            showlegend: false,\\r\\n        },\\r\\n    ];\\r\\n}\\r\\nfunction requestsFreqPlotData() {\\r\\n    return {\\r\\n        data: requestsFreqLine(),\\r\\n        layout: requestsFreqPlotLayout(),\\r\\n        config: {\\r\\n            responsive: true,\\r\\n            showSendToCloud: false,\\r\\n            displayModeBar: false,\\r\\n        },\\r\\n    };\\r\\n}\\r\\nfunction genRequestsFreqPlot() {\\r\\n    let plotData = requestsFreqPlotData();\\r\\n    //@ts-ignore\\r\\n    new Plotly.newPlot(requestsFreqPlotDiv, plotData.data, plotData.layout, plotData.config);\\r\\n}\\r\\nfunction build() {\\r\\n    setSuccessRate();\\r\\n    genResponseTimePlot();\\r\\n    genRequestsFreqPlot();\\r\\n}\\r\\nlet successRate;\\r\\nlet responseTimePlotDiv;\\r\\nlet requestsFreqPlotDiv;\\r\\nonMount(() => {\\r\\n    build();\\r\\n});\\r\\nexport let data;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"card\\">\\r\\n  <div class=\\"card-title\\">Past Month</div>\\r\\n  <div id=\\"plotly\\">\\r\\n    <div id=\\"plotDiv\\" bind:this={requestsFreqPlotDiv}>\\r\\n      \x3c!-- Plotly chart will be drawn inside this DIV --\x3e\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=\\"plotly\\">\\r\\n    <div id=\\"plotDiv\\" bind:this={responseTimePlotDiv}>\\r\\n      \x3c!-- Plotly chart will be drawn inside this DIV --\x3e\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\"success-rate-container\\">\\r\\n    {#if successRate != undefined}\\r\\n      <div class=\\"success-rate-title\\">Success rate</div>\\r\\n      <div class=\\"errors\\">\\r\\n        {#each successRate as value, i}\\r\\n          <div\\r\\n            class=\\"error\\"\\r\\n            style=\\"background: {colors[Math.floor(value * 10) + 1]}\\"\\r\\n            title=\\"{(value * 100).toFixed(1)}%\\"\\r\\n          />\\r\\n        {/each}\\r\\n      </div>\\r\\n    {/if}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .card {\\r\\n    margin: 0;\\r\\n    width: 100%;\\r\\n  }\\r\\n  .errors {\\r\\n    display: flex;\\r\\n    margin-top: 8px;\\r\\n  }\\r\\n  .error {\\r\\n    background: var(--highlight);\\r\\n    flex: 1;\\r\\n    height: 40px;\\r\\n    margin: 0 1px;\\r\\n    border-radius: 1px;\\r\\n  }\\r\\n  .success-rate-container {\\r\\n    text-align: left;\\r\\n    font-size: 0.9em;\\r\\n    color: #707070;\\r\\n    /* color: rgb(68, 68, 68); */\\r\\n  }\\r\\n  .success-rate-container {\\r\\n    margin: 1.5em 2em 2em;\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAkPE,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACb,CAAC,AACD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,AACjB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CAAC,GAAG,CACb,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,uBAAuB,eAAC,CAAC,AACvB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,OAAO,AAEhB,CAAC,AACD,uBAAuB,eAAC,CAAC,AACvB,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,AACvB,CAAC"}'};function ne(e){let n=new Date;return n.setDate(n.getDate()-30),e>n}function re(e){let n=new Date;return Math.floor((n.getTime()-e.getTime())/864e5)}function te(){let e=new Date;e.setDate(e.getDate()-30);let n=new Date;return n.setDate(n.getDate()+1),{title:!1,autosize:!0,margin:{r:35,l:70,t:10,b:20,pad:0},hovermode:"closest",plot_bgcolor:"transparent",paper_bgcolor:"transparent",height:150,yaxis:{title:{text:"Response time (ms)"},gridcolor:"gray",showgrid:!1,fixedrange:!0},xaxis:{title:{text:"Date"},showgrid:!1,fixedrange:!0,range:[e,n],visible:!1},dragmode:!1}}function Ae(){let e=new Date;e.setDate(e.getDate()-30);let n=new Date;return n.setDate(n.getDate()+1),{title:!1,autosize:!0,margin:{r:35,l:70,t:10,b:20,pad:0},hovermode:"closest",plot_bgcolor:"transparent",paper_bgcolor:"transparent",height:150,yaxis:{title:{text:"Requests"},gridcolor:"gray",showgrid:!1,fixedrange:!0},xaxis:{title:{text:"Date"},fixedrange:!0,range:[e,n],visible:!1},dragmode:!1}}const se=h(((e,n,r,t)=>{let A,s,a,i=["#444444","#E46161","#F18359","#F5A65A","#F3C966","#EBEB81","#C7E57D","#A1DF7E","#77D884","#3FCF8E"];function l(){let e=[];for(let n=0;n<v.length;n++)e.push([new Date(v[n].created_at),v[n].response_time]);e.sort(((e,n)=>e[0]-n[0]));let n=[],r=[];for(let t=0;t<e.length;t++)n.push(e[t][0]),r.push(e[t][1]);return[{x:n,y:r,mode:"lines",line:{color:"#3fcf8e"},hovertemplate:"<b>%{y:.1f}ms avg</b><br>%{x|%d %b %Y}</b><extra></extra>",showlegend:!1}]}function d(){let e={data:l(),layout:te(),config:{responsive:!0,showSendToCloud:!1,displayModeBar:!1}};new Plotly.newPlot(s,e.data,e.layout,e.config)}function C(){let e={};for(let n=0;n<v.length;n++){let r=new Date(v[n].created_at);r.setHours(0,0,0,0),r in e||(e[r]=0),e[r]++}let n=[];for(let r in e)n.push([new Date(r),e[r]]);n.sort(((e,n)=>e[0]-n[0]));let r=[],t=[];for(let e=0;e<n.length;e++)r.push(n[e][0]),t.push(n[e][1]);return[{x:r,y:t,type:"bar",marker:{color:"#3fcf8e"},hovertemplate:"<b>%{y} requests</b><br>%{x|%d %b %Y}</b><extra></extra>",showlegend:!1}]}function p(){let e={data:C(),layout:Ae(),config:{responsive:!0,showSendToCloud:!1,displayModeBar:!1}};new Plotly.newPlot(a,e.data,e.layout,e.config)}function g(){!function(){let e={};for(let n=0;n<v.length;n++){let r=new Date(v[n].created_at);ne(r)&&(r.setHours(0,0,0,0),r in e||(e[r]={total:0,successful:0}),v[n].status>=200&&v[n].status<=299&&e[r].successful++,e[r].total++)}let n=new Array(60).fill(-.1);for(let r in e){let t=re(new Date(r));n[n.length-t]=e[r].successful/e[r].total}A=n}(),d(),p()}o((()=>{g()}));let{data:v}=n;return void 0===n.data&&r.data&&void 0!==v&&r.data(v),e.css.add(ee),`<div class="card svelte-1hai9zp"><div class="card-title">Past Month</div>\n  <div id="plotly"><div id="plotDiv"${m("this",a,0)}></div></div>\n  <div id="plotly"><div id="plotDiv"${m("this",s,0)}></div></div>\n  <div class="success-rate-container svelte-1hai9zp">${null!=A?`<div class="success-rate-title">Success rate</div>\n      <div class="errors svelte-1hai9zp">${u(A,((e,n)=>`<div class="error svelte-1hai9zp" style="${"background: "+c(i[Math.floor(10*e)+1],!0)}" title="${c((100*e).toFixed(1),!0)+"%"}"></div>`))}</div>`:""}</div>\n</div>`})),ae={code:".card.svelte-1pclcaf{margin:2em 2em 2em 0;padding-bottom:1em;flex:1}#plotDiv.svelte-1pclcaf{margin-right:20px}",map:'{"version":3,"file":"Browser.svelte","sources":["Browser.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\nfunction getBrowser(userAgent) {\\r\\n    if (userAgent.match(/Seamonkey\\\\//)) {\\r\\n        return \'Seamonkey\';\\r\\n    }\\r\\n    else if (userAgent.match(/Firefox\\\\//)) {\\r\\n        return \'Firefox\';\\r\\n    }\\r\\n    else if (userAgent.match(/Chrome\\\\//)) {\\r\\n        return \'Chrome\';\\r\\n    }\\r\\n    else if (userAgent.match(/Chromium\\\\//)) {\\r\\n        return \'Chromium\';\\r\\n    }\\r\\n    else if (userAgent.match(/Safari\\\\//)) {\\r\\n        return \'Safari\';\\r\\n    }\\r\\n    else if (userAgent.match(/Edg\\\\//)) {\\r\\n        return \'Edge\';\\r\\n    }\\r\\n    else if (userAgent.match(/OPR\\\\//) || userAgent.match(/Opera\\\\//)) {\\r\\n        return \'Opera\';\\r\\n    }\\r\\n    else if (userAgent.match(/; MSIE /) || userAgent.match(/Trident\\\\//)) {\\r\\n        return \'Internet Explorer\';\\r\\n    }\\r\\n    else if (userAgent.match(/curl\\\\//)) {\\r\\n        return \'Curl\';\\r\\n    }\\r\\n    else if (userAgent.match(/PostmanRuntime\\\\//)) {\\r\\n        return \'Postman\';\\r\\n    }\\r\\n    else if (userAgent.match(/insomnia\\\\//)) {\\r\\n        return \'Insomnia\';\\r\\n    }\\r\\n    else {\\r\\n        return \'Other\';\\r\\n    }\\r\\n}\\r\\nfunction browserPlotLayout() {\\r\\n    let monthAgo = new Date();\\r\\n    monthAgo.setDate(monthAgo.getDate() - 30);\\r\\n    let tomorrow = new Date();\\r\\n    tomorrow.setDate(tomorrow.getDate() + 1);\\r\\n    return {\\r\\n        title: false,\\r\\n        autosize: true,\\r\\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\\r\\n        hovermode: \\"closest\\",\\r\\n        plot_bgcolor: \\"transparent\\",\\r\\n        paper_bgcolor: \\"transparent\\",\\r\\n        height: 180,\\r\\n        yaxis: {\\r\\n            title: { text: \\"Requests\\" },\\r\\n            gridcolor: \\"gray\\",\\r\\n            showgrid: false,\\r\\n            fixedrange: true,\\r\\n        },\\r\\n        xaxis: {\\r\\n            visible: false,\\r\\n        },\\r\\n        dragmode: false,\\r\\n    };\\r\\n}\\r\\nlet colors = [\\r\\n    \\"#3FCF8E\\",\\r\\n    \\"#E46161\\",\\r\\n    \\"#EBEB81\\", // Yellow\\r\\n];\\r\\nfunction pieChart() {\\r\\n    let browserCount = {};\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        let browser = getBrowser(data[i].user_agent);\\r\\n        if (!(browser in browserCount)) {\\r\\n            browserCount[browser] = 0;\\r\\n        }\\r\\n        browserCount[browser]++;\\r\\n    }\\r\\n    let browsers = [];\\r\\n    let count = [];\\r\\n    for (let browser in browserCount) {\\r\\n        browsers.push(browser);\\r\\n        count.push(browserCount[browser]);\\r\\n    }\\r\\n    return [{\\r\\n            values: count,\\r\\n            labels: browsers,\\r\\n            type: \'pie\',\\r\\n            marker: {\\r\\n                colors: colors\\r\\n            },\\r\\n        }];\\r\\n}\\r\\nfunction browserPlotData() {\\r\\n    return {\\r\\n        data: pieChart(),\\r\\n        layout: browserPlotLayout(),\\r\\n        config: {\\r\\n            responsive: true,\\r\\n            showSendToCloud: false,\\r\\n            displayModeBar: false,\\r\\n        },\\r\\n    };\\r\\n}\\r\\nfunction genPlot() {\\r\\n    let plotData = browserPlotData();\\r\\n    //@ts-ignore\\r\\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\\r\\n}\\r\\nlet plotDiv;\\r\\nonMount(() => {\\r\\n    genPlot();\\r\\n});\\r\\nexport let data;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"card\\" title=\\"Last week\\">\\r\\n  <div class=\\"card-title\\">Browser</div>\\r\\n  <div id=\\"plotly\\">\\r\\n    <div id=\\"plotDiv\\" bind:this={plotDiv}>\\r\\n      \x3c!-- Plotly chart will be drawn inside this DIV --\x3e\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .card {\\r\\n    margin: 2em 2em 2em 0;\\r\\n    padding-bottom: 1em;\\r\\n    flex: 1;\\r\\n  }\\r\\n  #plotDiv {\\r\\n    margin-right: 20px;\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AA8HE,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACrB,cAAc,CAAE,GAAG,CACnB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,YAAY,CAAE,IAAI,AACpB,CAAC"}'};function oe(){let e=new Date;e.setDate(e.getDate()-30);let n=new Date;return n.setDate(n.getDate()+1),{title:!1,autosize:!0,margin:{r:35,l:70,t:10,b:20,pad:0},hovermode:"closest",plot_bgcolor:"transparent",paper_bgcolor:"transparent",height:180,yaxis:{title:{text:"Requests"},gridcolor:"gray",showgrid:!1,fixedrange:!0},xaxis:{visible:!1},dragmode:!1}}const ie=h(((e,n,r,t)=>{let A,s=["#3FCF8E","#E46161","#EBEB81"];function a(){let e={};for(let r=0;r<l.length;r++){let t=(n=l[r].user_agent).match(/Seamonkey\//)?"Seamonkey":n.match(/Firefox\//)?"Firefox":n.match(/Chrome\//)?"Chrome":n.match(/Chromium\//)?"Chromium":n.match(/Safari\//)?"Safari":n.match(/Edg\//)?"Edge":n.match(/OPR\//)||n.match(/Opera\//)?"Opera":n.match(/; MSIE /)||n.match(/Trident\//)?"Internet Explorer":n.match(/curl\//)?"Curl":n.match(/PostmanRuntime\//)?"Postman":n.match(/insomnia\//)?"Insomnia":"Other";t in e||(e[t]=0),e[t]++}var n;let r=[],t=[];for(let n in e)r.push(n),t.push(e[n]);return[{values:t,labels:r,type:"pie",marker:{colors:s}}]}function i(){let e={data:a(),layout:oe(),config:{responsive:!0,showSendToCloud:!1,displayModeBar:!1}};new Plotly.newPlot(A,e.data,e.layout,e.config)}o((()=>{i()}));let{data:l}=n;return void 0===n.data&&r.data&&void 0!==l&&r.data(l),e.css.add(ae),`<div class="card svelte-1pclcaf" title="Last week"><div class="card-title">Browser</div>\n  <div id="plotly"><div id="plotDiv" class="svelte-1pclcaf"${m("this",A,0)}></div></div>\n</div>`})),le={code:".card.svelte-d1rbrj{margin:2em 2em 2em 0;flex:1;padding-bottom:1em}#plotDiv.svelte-d1rbrj{margin-right:20px}",map:'{"version":3,"file":"OperatingSystem.svelte","sources":["OperatingSystem.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\nfunction getOS(userAgent) {\\r\\n    if (userAgent.match(/Win16/)) {\\r\\n        return \'Windows 3.11\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows 95)|(Win95)|(Windows_95)/)) {\\r\\n        return \'Windows 95\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows 98)|(Win98)/)) {\\r\\n        return \'Windows 98\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows NT 5.0)|(Windows 2000)/)) {\\r\\n        return \'Windows 2000\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows NT 5.1)|(Windows XP)/)) {\\r\\n        return \'Windows XP\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows NT 5.2)/)) {\\r\\n        return \'Windows Server 2003\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows NT 6.0)/)) {\\r\\n        return \'Windows Vista\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows NT 6.1)/)) {\\r\\n        return \'Windows 7\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows NT 6.2)/)) {\\r\\n        return \'Windows 8\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows NT 10.0)/)) {\\r\\n        return \'Windows 10\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Windows NT 4.0)|(WinNT4.0)|(WinNT)|(Windows NT)/)) {\\r\\n        return \'Windows NT 4.0\';\\r\\n    }\\r\\n    else if (userAgent.match(/Windows ME/)) {\\r\\n        return \'Windows ME\';\\r\\n    }\\r\\n    else if (userAgent.match(/OpenBSD/)) {\\r\\n        return \'OpenBSE\';\\r\\n    }\\r\\n    else if (userAgent.match(/SunOS/)) {\\r\\n        return \'SunOS\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Linux)|(X11)/)) {\\r\\n        return \'Linux\';\\r\\n    }\\r\\n    else if (userAgent.match(/(Mac_PowerPC)|(Macintosh)/)) {\\r\\n        return \'MacOS\';\\r\\n    }\\r\\n    else if (userAgent.match(/QNX/)) {\\r\\n        return \'QNX\';\\r\\n    }\\r\\n    else if (userAgent.match(/BeOS/)) {\\r\\n        return \'BeOS\';\\r\\n    }\\r\\n    else if (userAgent.match(/OS\\\\/2/)) {\\r\\n        return \'OS/2\';\\r\\n    }\\r\\n    else if (userAgent.match(/(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\\\/Teoma)|(ia_archiver)/)) {\\r\\n        return \'Search Bot\';\\r\\n    }\\r\\n    else {\\r\\n        return \'Unknown\';\\r\\n    }\\r\\n}\\r\\nfunction osPlotLayout() {\\r\\n    let monthAgo = new Date();\\r\\n    monthAgo.setDate(monthAgo.getDate() - 30);\\r\\n    let tomorrow = new Date();\\r\\n    tomorrow.setDate(tomorrow.getDate() + 1);\\r\\n    return {\\r\\n        title: false,\\r\\n        autosize: true,\\r\\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\\r\\n        hovermode: \\"closest\\",\\r\\n        plot_bgcolor: \\"transparent\\",\\r\\n        paper_bgcolor: \\"transparent\\",\\r\\n        height: 180,\\r\\n        yaxis: {\\r\\n            title: { text: \\"Requests\\" },\\r\\n            gridcolor: \\"gray\\",\\r\\n            showgrid: false,\\r\\n            fixedrange: true,\\r\\n        },\\r\\n        xaxis: {\\r\\n            visible: false,\\r\\n        },\\r\\n        dragmode: false,\\r\\n    };\\r\\n}\\r\\nlet colors = [\\r\\n    \\"#3FCF8E\\",\\r\\n    \\"#E46161\\",\\r\\n    \\"#EBEB81\\", // Yellow\\r\\n];\\r\\nfunction pieChart() {\\r\\n    let osCount = {};\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        let os = getOS(data[i].user_agent);\\r\\n        if (!(os in osCount)) {\\r\\n            osCount[os] = 0;\\r\\n        }\\r\\n        osCount[os]++;\\r\\n    }\\r\\n    let os = [];\\r\\n    let count = [];\\r\\n    for (let browser in osCount) {\\r\\n        os.push(browser);\\r\\n        count.push(osCount[browser]);\\r\\n    }\\r\\n    return [{\\r\\n            values: count,\\r\\n            labels: os,\\r\\n            type: \'pie\',\\r\\n            marker: {\\r\\n                colors: colors\\r\\n            },\\r\\n        }];\\r\\n}\\r\\nfunction osPlotData() {\\r\\n    return {\\r\\n        data: pieChart(),\\r\\n        layout: osPlotLayout(),\\r\\n        config: {\\r\\n            responsive: true,\\r\\n            showSendToCloud: false,\\r\\n            displayModeBar: false,\\r\\n        },\\r\\n    };\\r\\n}\\r\\nfunction genPlot() {\\r\\n    let plotData = osPlotData();\\r\\n    //@ts-ignore\\r\\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\\r\\n}\\r\\nlet plotDiv;\\r\\nonMount(() => {\\r\\n    genPlot();\\r\\n});\\r\\nexport let data;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"card\\" title=\\"Last week\\">\\r\\n  <div class=\\"card-title\\">OS</div>\\r\\n  <div id=\\"plotly\\">\\r\\n    <div id=\\"plotDiv\\" bind:this={plotDiv}>\\r\\n      \x3c!-- Plotly chart will be drawn inside this DIV --\x3e\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .card {\\r\\n    margin: 2em 2em 2em 0;\\r\\n    flex: 1;\\r\\n    padding-bottom: 1em;\\r\\n  }\\r\\n  #plotDiv {\\r\\n    margin-right: 20px;\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAyJE,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACrB,IAAI,CAAE,CAAC,CACP,cAAc,CAAE,GAAG,AACrB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,YAAY,CAAE,IAAI,AACpB,CAAC"}'};function de(){let e=new Date;e.setDate(e.getDate()-30);let n=new Date;return n.setDate(n.getDate()+1),{title:!1,autosize:!0,margin:{r:35,l:70,t:10,b:20,pad:0},hovermode:"closest",plot_bgcolor:"transparent",paper_bgcolor:"transparent",height:180,yaxis:{title:{text:"Requests"},gridcolor:"gray",showgrid:!1,fixedrange:!0},xaxis:{visible:!1},dragmode:!1}}const Ce=h(((e,n,r,t)=>{let A,s=["#3FCF8E","#E46161","#EBEB81"];function a(){let e={};for(let r=0;r<l.length;r++){let t=(n=l[r].user_agent).match(/Win16/)?"Windows 3.11":n.match(/(Windows 95)|(Win95)|(Windows_95)/)?"Windows 95":n.match(/(Windows 98)|(Win98)/)?"Windows 98":n.match(/(Windows NT 5.0)|(Windows 2000)/)?"Windows 2000":n.match(/(Windows NT 5.1)|(Windows XP)/)?"Windows XP":n.match(/(Windows NT 5.2)/)?"Windows Server 2003":n.match(/(Windows NT 6.0)/)?"Windows Vista":n.match(/(Windows NT 6.1)/)?"Windows 7":n.match(/(Windows NT 6.2)/)?"Windows 8":n.match(/(Windows NT 10.0)/)?"Windows 10":n.match(/(Windows NT 4.0)|(WinNT4.0)|(WinNT)|(Windows NT)/)?"Windows NT 4.0":n.match(/Windows ME/)?"Windows ME":n.match(/OpenBSD/)?"OpenBSE":n.match(/SunOS/)?"SunOS":n.match(/(Linux)|(X11)/)?"Linux":n.match(/(Mac_PowerPC)|(Macintosh)/)?"MacOS":n.match(/QNX/)?"QNX":n.match(/BeOS/)?"BeOS":n.match(/OS\/2/)?"OS/2":n.match(/(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\/Teoma)|(ia_archiver)/)?"Search Bot":"Unknown";t in e||(e[t]=0),e[t]++}var n;let r=[],t=[];for(let n in e)r.push(n),t.push(e[n]);return[{values:t,labels:r,type:"pie",marker:{colors:s}}]}function i(){let e={data:a(),layout:de(),config:{responsive:!0,showSendToCloud:!1,displayModeBar:!1}};new Plotly.newPlot(A,e.data,e.layout,e.config)}o((()=>{i()}));let{data:l}=n;return void 0===n.data&&r.data&&void 0!==l&&r.data(l),e.css.add(le),`<div class="card svelte-d1rbrj" title="Last week"><div class="card-title">OS</div>\n  <div id="plotly"><div id="plotDiv" class="svelte-d1rbrj"${m("this",A,0)}></div></div>\n</div>`})),ce={code:".card.svelte-pwoq27{margin:2em 0;padding-bottom:1em;flex:1}#plotDiv.svelte-pwoq27{margin-right:20px}",map:'{"version":3,"file":"Device.svelte","sources":["Device.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\nfunction getDevice(userAgent) {\\r\\n    if (userAgent.match(/iPhone/)) {\\r\\n        return \'iPhone\';\\r\\n    }\\r\\n    else if (userAgent.match(/Android/)) {\\r\\n        return \'Android\';\\r\\n    }\\r\\n    else if (userAgent.match(/Tizen\\\\//)) {\\r\\n        return \'Samsung\';\\r\\n    }\\r\\n    else {\\r\\n        return \'Other\';\\r\\n    }\\r\\n}\\r\\nfunction devicePlotLayout() {\\r\\n    return {\\r\\n        title: false,\\r\\n        autosize: true,\\r\\n        margin: { r: 35, l: 70, t: 10, b: 20, pad: 0 },\\r\\n        hovermode: \\"closest\\",\\r\\n        plot_bgcolor: \\"transparent\\",\\r\\n        paper_bgcolor: \\"transparent\\",\\r\\n        height: 180,\\r\\n        yaxis: {\\r\\n            title: { text: \\"Requests\\" },\\r\\n            gridcolor: \\"gray\\",\\r\\n            showgrid: false,\\r\\n            fixedrange: true,\\r\\n        },\\r\\n        xaxis: {\\r\\n            visible: false,\\r\\n        },\\r\\n        dragmode: false,\\r\\n    };\\r\\n}\\r\\nlet colors = [\\r\\n    \\"#3FCF8E\\",\\r\\n    \\"#E46161\\",\\r\\n    \\"#EBEB81\\", // Yellow\\r\\n];\\r\\nfunction pieChart() {\\r\\n    let deviceCount = {};\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        let browser = getDevice(data[i].user_agent);\\r\\n        if (!(browser in deviceCount)) {\\r\\n            deviceCount[browser] = 0;\\r\\n        }\\r\\n        deviceCount[browser]++;\\r\\n    }\\r\\n    let device = [];\\r\\n    let count = [];\\r\\n    for (let browser in deviceCount) {\\r\\n        device.push(browser);\\r\\n        count.push(deviceCount[browser]);\\r\\n    }\\r\\n    return [{\\r\\n            values: count,\\r\\n            labels: device,\\r\\n            type: \'pie\',\\r\\n            marker: {\\r\\n                colors: colors\\r\\n            },\\r\\n        }];\\r\\n}\\r\\nfunction devicePlotData() {\\r\\n    return {\\r\\n        data: pieChart(),\\r\\n        layout: devicePlotLayout(),\\r\\n        config: {\\r\\n            responsive: true,\\r\\n            showSendToCloud: false,\\r\\n            displayModeBar: false,\\r\\n        },\\r\\n    };\\r\\n}\\r\\nfunction genPlot() {\\r\\n    let plotData = devicePlotData();\\r\\n    //@ts-ignore\\r\\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config);\\r\\n}\\r\\nlet plotDiv;\\r\\nonMount(() => {\\r\\n    genPlot();\\r\\n});\\r\\nexport let data;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"card\\" title=\\"Last week\\">\\r\\n  <div class=\\"card-title\\">Device</div>\\r\\n  <div id=\\"plotly\\">\\r\\n    <div id=\\"plotDiv\\" bind:this={plotDiv}>\\r\\n      \x3c!-- Plotly chart will be drawn inside this DIV --\x3e\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .card {\\r\\n    margin: 2em 0;\\r\\n    padding-bottom: 1em;\\r\\n    flex: 1;\\r\\n  }\\r\\n  #plotDiv {\\r\\n    margin-right: 20px;\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAkGE,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,cAAc,CAAE,GAAG,CACnB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,YAAY,CAAE,IAAI,AACpB,CAAC"}'};const ue=h(((e,n,r,t)=>{let A,s=["#3FCF8E","#E46161","#EBEB81"];function a(){let e={};for(let r=0;r<l.length;r++){let t=(n=l[r].user_agent).match(/iPhone/)?"iPhone":n.match(/Android/)?"Android":n.match(/Tizen\//)?"Samsung":"Other";t in e||(e[t]=0),e[t]++}var n;let r=[],t=[];for(let n in e)r.push(n),t.push(e[n]);return[{values:t,labels:r,type:"pie",marker:{colors:s}}]}function i(){let e={data:a(),layout:{title:!1,autosize:!0,margin:{r:35,l:70,t:10,b:20,pad:0},hovermode:"closest",plot_bgcolor:"transparent",paper_bgcolor:"transparent",height:180,yaxis:{title:{text:"Requests"},gridcolor:"gray",showgrid:!1,fixedrange:!0},xaxis:{visible:!1},dragmode:!1},config:{responsive:!0,showSendToCloud:!1,displayModeBar:!1}};new Plotly.newPlot(A,e.data,e.layout,e.config)}o((()=>{i()}));let{data:l}=n;return void 0===n.data&&r.data&&void 0!==l&&r.data(l),e.css.add(ce),`<div class="card svelte-pwoq27" title="Last week"><div class="card-title">Device</div>\n  <div id="plotly"><div id="plotDiv" class="svelte-pwoq27"${m("this",A,0)}></div></div>\n</div>`})),pe={code:".dashboard.svelte-4gc89s{margin:5em;display:flex}.row.svelte-4gc89s{display:flex}.right.svelte-4gc89s{flex-grow:1}",map:'{"version":3,"file":"Dashboard.svelte","sources":["Dashboard.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\r\\nimport Requests from \\"../components/Requests.svelte\\";\\r\\nimport ResponseTimes from \\"../components/ResponseTimes.svelte\\";\\r\\nimport Endpoints from \\"../components/Endpoints.svelte\\";\\r\\nimport Footer from \\"../components/Footer.svelte\\";\\r\\nimport SuccessRate from \\"../components/SuccessRate.svelte\\";\\r\\nimport PastMonth from \\"../components/PastMonth.svelte\\";\\r\\nimport Browser from \\"../components/Browser.svelte\\";\\r\\nimport OperatingSystem from \\"../components/OperatingSystem.svelte\\";\\r\\nimport Device from \\"../components/Device.svelte\\";\\r\\nfunction formatUUID(userID) {\\r\\n    return `${userID.slice(0, 8)}-${userID.slice(8, 12)}-${userID.slice(12, 16)}-${userID.slice(16, 20)}-${userID.slice(20)}`;\\r\\n}\\r\\nasync function fetchData() {\\r\\n    userID = formatUUID(userID);\\r\\n    // Fetch page ID\\r\\n    const response = await fetch(`https://api-analytics-server.vercel.app/api/data/${userID}`);\\r\\n    if (response.status == 200) {\\r\\n        const json = await response.json();\\r\\n        data = json.value;\\r\\n        console.log(data);\\r\\n    }\\r\\n}\\r\\nlet data;\\r\\nonMount(() => {\\r\\n    fetchData();\\r\\n});\\r\\nexport let userID;\\r\\n<\/script>\\r\\n\\r\\n<div>\\r\\n  {#if data != undefined}\\r\\n    <div class=\\"dashboard\\">\\r\\n      <div class=\\"left\\">\\r\\n        <div class=\\"row\\">\\r\\n          <Requests {data} />\\r\\n          <SuccessRate {data} />\\r\\n        </div>\\r\\n        <ResponseTimes {data} />\\r\\n        <Endpoints {data} />\\r\\n      </div>\\r\\n      <div class=\\"right\\">\\r\\n        <PastMonth {data} />\\r\\n        <div class=\\"row\\">\\r\\n          <OperatingSystem {data} />\\r\\n          <Browser {data} />\\r\\n          <Device {data} />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    {/if}\\r\\n  <Footer />\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .dashboard {\\r\\n    margin: 5em;\\r\\n    display: flex;\\r\\n  }\\r\\n  .row {\\r\\n    display: flex;\\r\\n  }\\r\\n  .right {\\r\\n    flex-grow: 1;\\r\\n  }\\r\\n</style>"],"names":[],"mappings":"AAuDE,UAAU,cAAC,CAAC,AACV,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,AACf,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,AACf,CAAC,AACD,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,CAAC,AACd,CAAC"}'};const ge=h(((e,n,r,t)=>{let A;o((()=>{!async function(){s=function(e){return`${e.slice(0,8)}-${e.slice(8,12)}-${e.slice(12,16)}-${e.slice(16,20)}-${e.slice(20)}`}(s);const e=await fetch(`https://api-analytics-server.vercel.app/api/data/${s}`);if(200==e.status){const n=await e.json();A=n.value,console.log(A)}}()}));let{userID:s}=n;return void 0===n.userID&&r.userID&&void 0!==s&&r.userID(s),e.css.add(pe),`<div>${null!=A?`<div class="dashboard svelte-4gc89s"><div class="left"><div class="row svelte-4gc89s">${g(L,"Requests").$$render(e,{data:A},{},{})}\n          ${g(J,"SuccessRate").$$render(e,{data:A},{},{})}</div>\n        ${g(N,"ResponseTimes").$$render(e,{data:A},{},{})}\n        ${g(Y,"Endpoints").$$render(e,{data:A},{},{})}</div>\n      <div class="right svelte-4gc89s">${g(se,"PastMonth").$$render(e,{data:A},{},{})}\n        <div class="row svelte-4gc89s">${g(Ce,"OperatingSystem").$$render(e,{data:A},{},{})}\n          ${g(ie,"Browser").$$render(e,{data:A},{},{})}\n          ${g(ue,"Device").$$render(e,{data:A},{},{})}</div></div></div>`:""}\n  ${g(V,"Footer").$$render(e,{},{},{})}\n</div>`})),ve=h(((e,n,r,t)=>{let{url:A=""}=n;return void 0===n.url&&r.url&&void 0!==A&&r.url(A),`${g(S,"Router").$$render(e,{url:A},{},{default:()=>`${g($,"Route").$$render(e,{path:"/",component:q},{},{})}\n    ${g($,"Route").$$render(e,{path:"/generate",component:U},{},{})}\n    ${g($,"Route").$$render(e,{path:"/dashboard",component:T},{},{})}\n    ${g($,"Route").$$render(e,{path:"/dashboard/:userID",component:ge},{},{})}`})}`}));module.exports=ve;
